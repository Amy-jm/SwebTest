<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="24" total="115" passed="91">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：前置环境设置—BeforeTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量创建分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有VoIP外线]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip外线SIP1]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\SIP1注册失败.jpg" target="_blank">Error: SIP1注册失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax外线IAX1]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\IAX1注册失败.jpg" target="_blank">Error: IAX1注册失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps外线SPS1]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\SPS1注册失败.jpg" target="_blank">Error: SPS1注册失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx外线SPX1]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\SPX1注册失败.jpg" target="_blank">Error: SPX1注册失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加E1的呼出路由OutRoute7_e1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加GSM的呼出路由OutRoute8_gsm]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置录音存储在：TF/SD]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：前置环境设置—BeforeTest]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：时间条件—TimeCondition]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_test：每天05:05~22:39]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Outbound：00:00-00:01,周日]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_Advanced:周日/二/四，12:30~18:45]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑workday_Advanced，启用高级设置，1/6/12月的1/10/20/31号]]>
    </line>
    <line>
      <![CDATA[    Pass: 月份编辑]]>
    </line>
    <line>
      <![CDATA[    Pass: 日期编辑]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件CheckAll]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑CheckAl，启用高级设置，Month:All，Day:All]]>
    </line>
    <line>
      <![CDATA[    Pass: Week编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[    Pass: Month编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[    Pass: Day编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：workday_Advanced，取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：workday_test，取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：workday_test，取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：workday_test，确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：时间条件—TimeCondition]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：时间条件—Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByDay：2017-10-01~2025-12-31]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByMonth：1月1号-12月31号]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByWeek：5月第3个周四]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByWeek2：12月最后1个周日]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑HolidayByWeek：8月第4个周六]]>
    </line>
    <line>
      <![CDATA[    Pass: 编辑Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：HolidayByWeek-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：HolidayByWeek-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：HolidayByWeek-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：HolidayByWeek-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：HolidayByWeek2-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：HolidayByWeek2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：HolidayByWeek2-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：HolidayByWeek2-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：时间条件-Holiday]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：Inbound]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：FXO2-3】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：FXO2-3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：BRI2-1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：BRI2-1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打77777通过E1外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：DIGIT1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：DIGIT1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打被测设备的gsm号码呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*801强制启用工作时间]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1禁用时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：DeleteTest-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：DeleteTest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：DeleteTest-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：DeleteTest-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：Inbound]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：Outbound]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：FXO2-3】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：FXO2-3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：BRI2-1】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：BRI2-1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打72000通过E1外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：DIGIT1】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：DIGIT1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打辅助设备的GSM号码呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：UMTS3-3】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：UMTS3-3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由DialPattern，Pattern:91.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打9101通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由Password，Pattern:92.，strip：2，外线:SPS，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打928888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由Rrmemory_hunt，Pattern:93.，strip：2，外线:SPS、SPX，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打933333，第1次预期通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打933333，第2次预期通过SPX外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打933333，第3次预期通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR被叫方检测 【预期：9299999 实际：933333】.jpg" target="_blank">Error: CDR被叫方检测 【预期：9299999 实际：933333】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：Outbound]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：OutboundRestriction]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Failed 实际：Answered】.jpg" target="_blank">Error: CDR_Status检测 【预期：Failed 实际：Answered】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1100状态已被限制，并取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Failed 实际：Answered】.jpg" target="_blank">Error: CDR_Status检测 【预期：Failed 实际：Answered】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1102状态已被限制，并取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1102取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：OutboundRestriction]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：AutoCLIP]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Delete Used Records----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Only Keep Missed Call Records----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Match Outgoing Trunk----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----不启用AutoCLIP----]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：AutoCLIP]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：PickupGroup]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1105按*4截答--预期截答失败]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1105按*041100截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupExGroup,成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期分机1000响铃]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按*4截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupExGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupExGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupExGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupExGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：PickupGroup]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：PagingIntercom]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有广播组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6300：单工，不启用*Answer，成员：1100,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6300，预期分机1100、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6301：双工，启用*Answer成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6301，预期分机1100、1101、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101按*Answer--预期1100、1105会挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*51105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Paging6301-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Paging6301-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Paging6301-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Paging6301-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：PagingIntercom]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：SpeedDial]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置速拨特征码为*999]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建速拨码：dialcode:1,PhoneNumber：13001]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建速拨码：dialcode:1234567,PhoneNumber：31234567]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*9991通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*9991234567通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 导出速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：速拨码为1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：速拨码为1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：速拨码为1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：速拨码为1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：速拨码为1234567-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：速拨码为1234567-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：速拨码为1234567-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：速拨码为1234567-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 导入速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass: 导入速拨码]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：SpeedDial]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建RingGroup6201,Mem:ExtensionGroup1,其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6201，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1101、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑RingGroup6201，成员响铃时间：15s，Failover：分机1102]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6201，预期1100、1101、1105响铃15s后挂断，1102开始响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1102--Idle]]>
    </line>
    <line>
      <![CDATA[    Pass:  1102--Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建响铃组RingSequentially6202，Sequentially,每个成员20s,成员：1000、1100、1101、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inroute1到RingSequentially6202]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到RingSequentially6202]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring--Answer]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 轮到1105响铃的时候，1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：RingGroup6201-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：RingGroup6201-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：RingGroup6201-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：RingSequentially6202-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：RingSequentially6202-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：RingSequentially6202-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：RingSequentially6202-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由Inroute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：RingGroup]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：CustomPrompts]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有提示音]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[    Pass: 导入提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：CustomPrompts]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建IVR6502,默认设置]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建IVRtest1，提示音选择autotestprompt，勾选Dial Extensions，勾选Dial Outbound Routes，勾选Dial to Check Voicemail按0到分机1000，按1到1000的Voicemail，按5到Dial by Name，按#到hungup，按*到Select an Option，Timeout到customPrompt：prompt1，Invalid到分机1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到IVRtest1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨3333通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按1到voicemail-1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6501，按5到DialbyName,按957到分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按#挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1，按*到SelecttoOption--预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6501，超时到prompt1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6501，按a错误按键到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,直接拨打*02查看1000的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：IVR6502-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：IVR6502-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：IVR6502-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：IVR6502-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：IVRtest1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：IVRtest1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：IVRtest1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：IVRtest1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：IVR]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Queue6701,Password:123，FailoverDestination：分机1000，Static Agents：空]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Queue6702,Ring Strategy：RingAll，Static Agents：ExtensionGroup1，Agent Announcement：prompt1，Caller Max Wait Time:100,按9到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Queue6702]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期到FailDestination--1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6701*加入队列6701，密码：123]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1100输入密码123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期动态坐席1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6700**退出队列6701]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1100退出队列6701]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期FailDestina-1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6702,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,100s内无人接就挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 2001预期HangUp]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：Queue]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="13702853" started-at="2017-10-23T13:06:09Z" finished-at="2017-10-23T16:54:32Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="13702853" started-at="2017-10-23T13:06:09Z" finished-at="2017-10-23T16:54:32Z">
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="BeforeClass" is-config="true" duration-ms="28743" started-at="2017-10-23T21:36:25Z" finished-at="2017-10-23T21:36:53Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：Outbound]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_out1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out1_sip" duration-ms="36209" started-at="2017-10-23T21:36:53Z" finished-at="2017-10-23T21:37:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out1_sip -->
        <test-method status="PASS" signature="A_out2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out2_iax" duration-ms="41100" started-at="2017-10-23T21:37:29Z" finished-at="2017-10-23T21:38:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out2_iax -->
        <test-method status="PASS" signature="A_out3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out3_sps" duration-ms="38490" started-at="2017-10-23T21:38:11Z" finished-at="2017-10-23T21:38:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out3_sps -->
        <test-method status="PASS" signature="A_out4_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out4_sps" duration-ms="41186" started-at="2017-10-23T21:38:49Z" finished-at="2017-10-23T21:39:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out4_sps -->
        <test-method status="FAIL" signature="A_out5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out5_fxo" duration-ms="33792" started-at="2017-10-23T21:39:30Z" finished-at="2017-10-23T21:40:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：? 实际：FXO2-3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：? 实际：FXO2-3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:254)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out5_fxo(Outbound.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：FXO2-3】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：FXO2-3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out5_fxo -->
        <test-method status="FAIL" signature="A_out6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out6_bri" duration-ms="33729" started-at="2017-10-23T21:40:04Z" finished-at="2017-10-23T21:40:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：? 实际：BRI2-1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：? 实际：BRI2-1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:254)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out6_bri(Outbound.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：BRI2-1】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：BRI2-1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out6_bri -->
        <test-method status="FAIL" signature="A_out7_E1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out7_E1" duration-ms="34367" started-at="2017-10-23T21:40:38Z" finished-at="2017-10-23T21:41:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：? 实际：DIGIT1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：? 实际：DIGIT1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:254)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out7_E1(Outbound.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打72000通过E1外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：DIGIT1】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：DIGIT1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out7_E1 -->
        <test-method status="FAIL" signature="A_out8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="A_out8_gsm" duration-ms="41081" started-at="2017-10-23T21:41:12Z" finished-at="2017-10-23T21:41:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：? 实际：UMTS3-3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：? 实际：UMTS3-3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:254)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out8_gsm(Outbound.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打辅助设备的GSM号码呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR源中继检测 【预期：? 实际：UMTS3-3】.jpg" target="_blank">Error: CDR源中继检测 【预期：? 实际：UMTS3-3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out8_gsm -->
        <test-method status="PASS" signature="B_Prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="B_Prepend" duration-ms="63833" started-at="2017-10-23T21:41:53Z" finished-at="2017-10-23T21:42:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由DialPattern，Pattern:91.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打9101通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_Prepend -->
        <test-method status="PASS" signature="C_password()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="C_password" duration-ms="108659" started-at="2017-10-23T21:42:57Z" finished-at="2017-10-23T21:44:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由Password，Pattern:92.，strip：2，外线:SPS，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打928888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_password -->
        <test-method status="PASS" signature="D_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="D_rrmemory_hunt" duration-ms="163392" started-at="2017-10-23T21:44:46Z" finished-at="2017-10-23T21:47:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由Rrmemory_hunt，Pattern:93.，strip：2，外线:SPS、SPX，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打933333，第1次预期通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打933333，第2次预期通过SPX外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打933333，第3次预期通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_rrmemory_hunt -->
        <test-method status="FAIL" signature="E_timecondition()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="E_timecondition" duration-ms="65613" started-at="2017-10-23T21:47:29Z" finished-at="2017-10-23T21:48:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：9299999 实际：933333】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：9299999 实际：933333】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:251)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.E_timecondition(Outbound.java:248)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出失败]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR被叫方检测 【预期：9299999 实际：933333】.jpg" target="_blank">Error: CDR被叫方检测 【预期：9299999 实际：933333】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_timecondition -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="F_delete" duration-ms="87877" started-at="2017-10-23T21:48:35Z" finished-at="2017-10-23T21:50:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Prepend-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@cdbdf5]" name="AfterClass" is-config="true" duration-ms="13578" started-at="2017-10-23T21:50:03Z" finished-at="2017-10-23T21:50:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：Outbound]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="BeforeClass" is-config="true" duration-ms="41890" started-at="2017-10-23T21:22:49Z" finished-at="2017-10-23T21:23:31Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：Inbound]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_callfrom1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom1_sip" duration-ms="36378" started-at="2017-10-23T21:23:31Z" finished-at="2017-10-23T21:24:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom1_sip -->
        <test-method status="PASS" signature="A_callfrom2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom2_iax" duration-ms="33382" started-at="2017-10-23T21:24:07Z" finished-at="2017-10-23T21:24:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom2_iax -->
        <test-method status="PASS" signature="A_callfrom3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom3_sps" duration-ms="33224" started-at="2017-10-23T21:24:41Z" finished-at="2017-10-23T21:25:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom3_sps -->
        <test-method status="PASS" signature="A_callfrom4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom4_spx" duration-ms="33494" started-at="2017-10-23T21:25:14Z" finished-at="2017-10-23T21:25:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom4_spx -->
        <test-method status="FAIL" signature="A_callfrom5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom5_fxo" duration-ms="30197" started-at="2017-10-23T21:25:47Z" finished-at="2017-10-23T21:26:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：? 实际：FXO2-3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：? 实际：FXO2-3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:257)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom5_fxo(Inbound.java:88)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：FXO2-3】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：FXO2-3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom5_fxo -->
        <test-method status="FAIL" signature="A_callfrom6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom6_bri" duration-ms="30114" started-at="2017-10-23T21:26:17Z" finished-at="2017-10-23T21:26:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：? 实际：BRI2-1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：? 实际：BRI2-1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:257)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom6_bri(Inbound.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：BRI2-1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：BRI2-1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom6_bri -->
        <test-method status="FAIL" signature="A_callfrom7_e1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom7_e1" duration-ms="30164" started-at="2017-10-23T21:26:48Z" finished-at="2017-10-23T21:27:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：? 实际：DIGIT1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：? 实际：DIGIT1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:257)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom7_e1(Inbound.java:111)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打77777通过E1外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR目的中继检测 【预期：? 实际：DIGIT1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：? 实际：DIGIT1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom7_e1 -->
        <test-method status="FAIL" signature="A_callfrom8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="A_callfrom8_gsm" duration-ms="29113" started-at="2017-10-23T21:27:18Z" finished-at="2017-10-23T21:27:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom8_gsm(Inbound.java:122)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打被测设备的gsm号码呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：18506938857 实际：18506938857 [18506938857]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom8_gsm -->
        <test-method status="PASS" signature="B_did1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="B_did1_sps" duration-ms="98170" started-at="2017-10-23T21:27:47Z" finished-at="2017-10-23T21:29:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_did1_sps -->
        <test-method status="FAIL" signature="C_callerid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="C_callerid" duration-ms="64193" started-at="2017-10-23T21:29:25Z" finished-at="2017-10-23T21:30:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.C_callerid(Inbound.java:178)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2002 [2002] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_callerid -->
        <test-method status="PASS" signature="F_timecondition1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="F_timecondition1" duration-ms="9975" started-at="2017-10-23T21:30:29Z" finished-at="2017-10-23T21:30:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition1 -->
        <test-method status="PASS" signature="F_timecondition2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="F_timecondition2" duration-ms="73826" started-at="2017-10-23T21:30:39Z" finished-at="2017-10-23T21:31:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition2 -->
        <test-method status="FAIL" signature="F_timecondition3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="F_timecondition3" duration-ms="61560" started-at="2017-10-23T21:31:53Z" finished-at="2017-10-23T21:32:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.F_timecondition3(Inbound.java:249)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：Unknown】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition3 -->
        <test-method status="PASS" signature="F_timecondition4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="F_timecondition4" duration-ms="56437" started-at="2017-10-23T21:32:55Z" finished-at="2017-10-23T21:33:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*801强制启用工作时间]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition4 -->
        <test-method status="PASS" signature="F_timecondition5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="F_timecondition5" duration-ms="58545" started-at="2017-10-23T21:33:51Z" finished-at="2017-10-23T21:34:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1禁用时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition5 -->
        <test-method status="PASS" signature="G_delete1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="G_delete1" duration-ms="81295" started-at="2017-10-23T21:34:50Z" finished-at="2017-10-23T21:36:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：DeleteTest-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：DeleteTest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：DeleteTest-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：DeleteTest-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_delete1 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@1d0c81b]" name="AfterClass" is-config="true" duration-ms="13615" started-at="2017-10-23T21:36:11Z" finished-at="2017-10-23T21:36:25Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：Inbound]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="BeforeClass" is-config="true" duration-ms="35629" started-at="2017-10-23T22:01:22Z" finished-at="2017-10-23T22:01:58Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：AutoCLIP]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="A_clip_default()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="A_clip_default" duration-ms="27464" started-at="2017-10-23T22:01:58Z" finished-at="2017-10-23T22:02:25Z">
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should be visible {By.xpath: .//div[starts-with(@id,'messagebox-')]//span[text()='Yes']}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="button-1006-btnInnerEl" unselectable="on" displayed:false></span>']]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should be visible {By.xpath: .//div[starts-with(@id,'messagebox-')]//span[text()='Yes']}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="button-1006-btnInnerEl" unselectable="on" displayed:false></span>'
Screenshot: file:/E:/SwebTest/build/reports/tests/1508767345176.0.png
Timeout: 10 s.
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:66)
	at com.codeborne.selenide.impl.WebElementSource.findAndAssertElementIsVisible(WebElementSource.java:72)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP.A_clip_default(AutoCLIP.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_clip_default -->
        <test-method status="FAIL" signature="B_deleteUsedRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="B_deleteUsedRecords" duration-ms="10465" started-at="2017-10-23T22:02:25Z" finished-at="2017-10-23T22:02:36Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/E:/SwebTest/build/reports/tests/1508767355693.1.png
Timeout: 10 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP.B_deleteUsedRecords(AutoCLIP.java:108)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
  (Session info: chrome=61.0.3163.100)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 31 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'AutoTest-PC', ip: '192.168.3.21', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\AutoTest\AppData\Local\Temp\scoped_dir97824_9070}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=61.0.3163.100, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: b8bde1a632c9a5499aaedcbc02cf7ad7
	at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Delete Used Records----]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_deleteUsedRecords -->
        <test-method status="FAIL" signature="C_OnlyKeepMissedCallRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="C_OnlyKeepMissedCallRecords" duration-ms="10573" started-at="2017-10-23T22:02:36Z" finished-at="2017-10-23T22:02:46Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/E:/SwebTest/build/reports/tests/1508767366297.2.png
Timeout: 10 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP.C_OnlyKeepMissedCallRecords(AutoCLIP.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
  (Session info: chrome=61.0.3163.100)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'AutoTest-PC', ip: '192.168.3.21', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\AutoTest\AppData\Local\Temp\scoped_dir97824_9070}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=61.0.3163.100, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: b8bde1a632c9a5499aaedcbc02cf7ad7
	at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Only Keep Missed Call Records----]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_OnlyKeepMissedCallRecords -->
        <test-method status="FAIL" signature="D_MatchOutgoingTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="D_MatchOutgoingTrunk" duration-ms="10543" started-at="2017-10-23T22:02:46Z" finished-at="2017-10-23T22:02:57Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/E:/SwebTest/build/reports/tests/1508767376808.3.png
Timeout: 10 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP.D_MatchOutgoingTrunk(AutoCLIP.java:194)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
  (Session info: chrome=61.0.3163.100)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'AutoTest-PC', ip: '192.168.3.21', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\AutoTest\AppData\Local\Temp\scoped_dir97824_9070}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=61.0.3163.100, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: b8bde1a632c9a5499aaedcbc02cf7ad7
	at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Match Outgoing Trunk----]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_MatchOutgoingTrunk -->
        <test-method status="FAIL" signature="E_Disable_AutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="E_Disable_AutoCLIP" duration-ms="10584" started-at="2017-10-23T22:02:57Z" finished-at="2017-10-23T22:03:07Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/E:/SwebTest/build/reports/tests/1508767387377.4.png
Timeout: 10 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP.E_Disable_AutoCLIP(AutoCLIP.java:229)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 768px; width: 1424px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-82"></div>
  (Session info: chrome=61.0.3163.100)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 16 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'AutoTest-PC', ip: '192.168.3.21', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\AutoTest\AppData\Local\Temp\scoped_dir97824_9070}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=61.0.3163.100, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: b8bde1a632c9a5499aaedcbc02cf7ad7
	at sun.reflect.GeneratedConstructorAccessor19.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----不启用AutoCLIP----]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Disable_AutoCLIP -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@1579e0f]" name="AfterClass" is-config="true" duration-ms="13562" started-at="2017-10-23T22:03:07Z" finished-at="2017-10-23T22:03:21Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：AutoCLIP]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="BeforeClass" is-config="true" duration-ms="51178" started-at="2017-10-23T22:03:21Z" finished-at="2017-10-23T22:04:12Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：PickupGroup]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_pickupgroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="A_add_pickupgroup1" duration-ms="68699" started-at="2017-10-23T22:04:12Z" finished-at="2017-10-23T22:05:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有PickupGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有PickupGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup1 -->
        <test-method status="PASS" signature="A_add_pickupgroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="A_add_pickupgroup2" duration-ms="32478" started-at="2017-10-23T22:05:21Z" finished-at="2017-10-23T22:05:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1105按*4截答--预期截答失败]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup2 -->
        <test-method status="PASS" signature="A_add_pickupgroup3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="A_add_pickupgroup3" duration-ms="32563" started-at="2017-10-23T22:05:53Z" finished-at="2017-10-23T22:06:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1105按*041100截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup3 -->
        <test-method status="PASS" signature="B_add_pickupgroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="B_add_pickupgroup2" duration-ms="56216" started-at="2017-10-23T22:06:26Z" finished-at="2017-10-23T22:07:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupExGroup,成员：ExtensionGroup1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期分机1000响铃]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105按*4截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_pickupgroup2 -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="C_delete" duration-ms="56021" started-at="2017-10-23T22:07:22Z" finished-at="2017-10-23T22:08:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupExGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupExGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupExGroup-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupExGroup-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@d41cee]" name="AfterClass" is-config="true" duration-ms="13430" started-at="2017-10-23T22:08:18Z" finished-at="2017-10-23T22:08:31Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：PickupGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@650e52]" name="BeforeClass" is-config="true" duration-ms="23938" started-at="2017-10-23T21:20:29Z" finished-at="2017-10-23T21:20:53Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：时间条件—Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addHoliday1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@650e52]" name="A_addHoliday1" duration-ms="39482" started-at="2017-10-23T21:20:53Z" finished-at="2017-10-23T21:21:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByDay：2017-10-01~2025-12-31]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByMonth：1月1号-12月31号]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByWeek：5月第3个周四]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByWeek2：12月最后1个周日]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addHoliday1 -->
        <test-method status="PASS" signature="B_editHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@650e52]" name="B_editHoliday" duration-ms="17043" started-at="2017-10-23T21:21:33Z" finished-at="2017-10-23T21:21:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑HolidayByWeek：8月第4个周六]]>
            </line>
            <line>
              <![CDATA[    Pass: 编辑Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editHoliday -->
        <test-method status="PASS" signature="C_deleteHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@650e52]" name="C_deleteHoliday" duration-ms="45774" started-at="2017-10-23T21:21:50Z" finished-at="2017-10-23T21:22:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：HolidayByWeek-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：HolidayByWeek-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：HolidayByWeek-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：HolidayByWeek-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：HolidayByWeek2-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：HolidayByWeek2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：HolidayByWeek2-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：HolidayByWeek2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_deleteHoliday -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@650e52]" name="AfterClass" is-config="true" duration-ms="13246" started-at="2017-10-23T21:22:36Z" finished-at="2017-10-23T21:22:49Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：时间条件-Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="BeforeClass" is-config="true" duration-ms="22332" started-at="2017-10-24T00:45:47Z" finished-at="2017-10-24T00:46:09Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitQueue()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="InitQueue" is-config="true" duration-ms="39835" started-at="2017-10-24T00:46:09Z" finished-at="2017-10-24T00:46:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitQueue -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="Register" is-config="true" duration-ms="26933" started-at="2017-10-24T00:46:49Z" finished-at="2017-10-24T00:47:16Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A_add_queue6701()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="A_add_queue6701" duration-ms="16422" started-at="2017-10-24T00:47:16Z" finished-at="2017-10-24T00:47:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Queue6701,Password:123，FailoverDestination：分机1000，Static Agents：空]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_queue6701 -->
        <test-method status="PASS" signature="A_add_queue6702()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="A_add_queue6702" duration-ms="28012" started-at="2017-10-24T00:47:32Z" finished-at="2017-10-24T00:48:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Queue6702,Ring Strategy：RingAll，Static Agents：ExtensionGroup1，Agent Announcement：prompt1，Caller Max Wait Time:100,按9到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_queue6702 -->
        <test-method status="PASS" signature="A_editInbound()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="A_editInbound" duration-ms="32103" started-at="2017-10-24T00:48:01Z" finished-at="2017-10-24T00:48:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Queue6702]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_editInbound -->
        <test-method status="PASS" signature="B_failtoextension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="B_failtoextension" duration-ms="30688" started-at="2017-10-24T00:48:33Z" finished-at="2017-10-24T00:49:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期到FailDestination--1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_failtoextension -->
        <test-method status="PASS" signature="C_agent1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="C_agent1" duration-ms="16473" started-at="2017-10-24T00:49:03Z" finished-at="2017-10-24T00:49:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6701*加入队列6701，密码：123]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1100输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent1 -->
        <test-method status="PASS" signature="C_agent2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="C_agent2" duration-ms="30323" started-at="2017-10-24T00:49:20Z" finished-at="2017-10-24T00:49:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期动态坐席1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent2 -->
        <test-method status="PASS" signature="C_agent3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="C_agent3" duration-ms="5474" started-at="2017-10-24T00:49:50Z" finished-at="2017-10-24T00:49:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6700**退出队列6701]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1100退出队列6701]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent3 -->
        <test-method status="PASS" signature="C_agent4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="C_agent4" duration-ms="30298" started-at="2017-10-24T00:49:56Z" finished-at="2017-10-24T00:50:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期FailDestina-1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent4 -->
        <test-method status="PASS" signature="D_RingAll1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="D_RingAll1" duration-ms="49811" started-at="2017-10-24T00:50:26Z" finished-at="2017-10-24T00:51:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6702,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_RingAll1 -->
        <test-method status="PASS" signature="E_maxWaitTime()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="E_maxWaitTime" duration-ms="182205" started-at="2017-10-24T00:51:16Z" finished-at="2017-10-24T00:54:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,100s内无人接就挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 2001预期HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_maxWaitTime -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@168ddbd]" name="AfterClass" is-config="true" duration-ms="13744" started-at="2017-10-24T00:54:18Z" finished-at="2017-10-24T00:54:32Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="BeforeClass" is-config="true" duration-ms="52929" started-at="2017-10-23T22:25:27Z" finished-at="2017-10-23T22:26:20Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：CustomPrompts]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有提示音]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_record()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="A_record" duration-ms="46910" started-at="2017-10-23T22:26:20Z" finished-at="2017-10-23T22:27:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_record -->
        <test-method status="PASS" signature="B_play()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="B_play" duration-ms="52692" started-at="2017-10-23T22:27:07Z" finished-at="2017-10-23T22:28:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_play -->
        <test-method status="PASS" signature="C_reRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="C_reRecord" duration-ms="47610" started-at="2017-10-23T22:28:00Z" finished-at="2017-10-23T22:28:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_reRecord -->
        <test-method status="PASS" signature="D_upload()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="D_upload" duration-ms="12128" started-at="2017-10-23T22:28:48Z" finished-at="2017-10-23T22:29:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
            </line>
            <line>
              <![CDATA[    Pass: 导入提示音autotestprompt]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_upload -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@1a8c74e]" name="AfterClass" is-config="true" duration-ms="13181" started-at="2017-10-23T22:29:00Z" finished-at="2017-10-23T22:29:13Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：CustomPrompts]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="BeforeClass" is-config="true" duration-ms="56364" started-at="2017-10-23T22:08:31Z" finished-at="2017-10-23T22:09:28Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：PagingIntercom]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_paging1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="A_add_paging1" duration-ms="70903" started-at="2017-10-23T22:09:28Z" finished-at="2017-10-23T22:10:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有广播组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有广播组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6300：单工，不启用*Answer，成员：1100,1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6300，预期分机1100、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_paging1 -->
        <test-method status="FAIL" signature="A_add_paging2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="A_add_paging2" duration-ms="64048" started-at="2017-10-23T22:10:39Z" finished-at="2017-10-23T22:11:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:251)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom.A_add_paging2(PagingIntercom.java:109)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6301：双工，启用*Answer成员：ExtensionGroup1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6301，预期分机1100、1101、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101按*Answer--预期1100、1105会挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6301(1100)] 实际：1101 [6301(1101)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_paging2 -->
        <test-method status="PASS" signature="B_intercom()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="B_intercom" duration-ms="37966" started-at="2017-10-23T22:11:43Z" finished-at="2017-10-23T22:12:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*51105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_intercom -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="C_delete" duration-ms="60356" started-at="2017-10-23T22:12:21Z" finished-at="2017-10-23T22:13:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Paging6301-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Paging6301-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Paging6301-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Paging6301-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@1712b94]" name="AfterClass" is-config="true" duration-ms="13610" started-at="2017-10-23T22:13:21Z" finished-at="2017-10-23T22:13:35Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：PagingIntercom]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="BeforeClass" is-config="true" duration-ms="22212" started-at="2017-10-23T22:17:39Z" finished-at="2017-10-23T22:18:02Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：RingGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitRingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="InitRingGroup" is-config="true" duration-ms="33990" started-at="2017-10-23T22:18:02Z" finished-at="2017-10-23T22:18:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitRingGroup -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="Register" is-config="true" duration-ms="34712" started-at="2017-10-23T22:18:36Z" finished-at="2017-10-23T22:19:10Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A_add_RingGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="A_add_RingGroup1" duration-ms="58602" started-at="2017-10-23T22:19:10Z" finished-at="2017-10-23T22:20:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建RingGroup6201,Mem:ExtensionGroup1,其它默认]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6201，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1101、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_RingGroup1 -->
        <test-method status="PASS" signature="B_edit_RingGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="B_edit_RingGroup1" duration-ms="77422" started-at="2017-10-23T22:20:09Z" finished-at="2017-10-23T22:21:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑RingGroup6201，成员响铃时间：15s，Failover：分机1102]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6201，预期1100、1101、1105响铃15s后挂断，1102开始响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1102--Idle]]>
            </line>
            <line>
              <![CDATA[    Pass:  1102--Ring]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_edit_RingGroup1 -->
        <test-method status="PASS" signature="C_add_RingGroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="C_add_RingGroup2" duration-ms="140116" started-at="2017-10-23T22:21:26Z" finished-at="2017-10-23T22:23:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建响铃组RingSequentially6202，Sequentially,每个成员20s,成员：1000、1100、1101、1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inroute1到RingSequentially6202]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到RingSequentially6202]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring--Answer]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 轮到1105响铃的时候，1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_add_RingGroup2 -->
        <test-method status="PASS" signature="D_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="D_delete" duration-ms="57554" started-at="2017-10-23T22:23:46Z" finished-at="2017-10-23T22:24:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：RingGroup6201-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：RingGroup6201-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：RingGroup6201-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：RingSequentially6202-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：RingSequentially6202-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：RingSequentially6202-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：RingSequentially6202-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@13f88ab]" name="AfterClass" is-config="true" duration-ms="43453" started-at="2017-10-23T22:24:44Z" finished-at="2017-10-23T22:25:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由Inroute1到分机1000]]>
            </line>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：RingGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="BeforeClass" is-config="true" duration-ms="23351" started-at="2017-10-23T22:29:13Z" finished-at="2017-10-23T22:29:36Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitIVR()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="InitIVR" is-config="true" duration-ms="59233" started-at="2017-10-23T22:29:36Z" finished-at="2017-10-23T22:30:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建IVR6502,默认设置]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitIVR -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="Register" is-config="true" duration-ms="19065" started-at="2017-10-23T22:30:36Z" finished-at="2017-10-23T22:30:55Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="A_add" duration-ms="65459" started-at="2017-10-23T22:30:55Z" finished-at="2017-10-23T22:32:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建IVRtest1，提示音选择autotestprompt，勾选Dial Extensions，勾选Dial Outbound Routes，勾选Dial to Check Voicemail按0到分机1000，按1到1000的Voicemail，按5到Dial by Name，按#到hungup，按*到Select an Option，Timeout到customPrompt：prompt1，Invalid到分机1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add -->
        <test-method status="PASS" signature="B_editInbound1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="B_editInbound1" duration-ms="31948" started-at="2017-10-23T22:32:00Z" finished-at="2017-10-23T22:32:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到IVRtest1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editInbound1 -->
        <test-method status="PASS" signature="C_dialextensions()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="C_dialextensions" duration-ms="48950" started-at="2017-10-23T22:32:32Z" finished-at="2017-10-23T22:33:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_dialextensions -->
        <test-method status="PASS" signature="D_dialoutbound()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="D_dialoutbound" duration-ms="41647" started-at="2017-10-23T22:33:21Z" finished-at="2017-10-23T22:34:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨3333通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_dialoutbound -->
        <test-method status="PASS" signature="E_key0toExtension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="E_key0toExtension" duration-ms="47004" started-at="2017-10-23T22:34:03Z" finished-at="2017-10-23T22:34:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_key0toExtension -->
        <test-method status="PASS" signature="F_key1toVoicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="F_key1toVoicemail" duration-ms="48037" started-at="2017-10-23T22:34:50Z" finished-at="2017-10-23T22:35:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按1到voicemail-1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_key1toVoicemail -->
        <test-method status="FAIL" signature="G_key5toDialName()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="G_key5toDialName" duration-ms="61252" started-at="2017-10-23T22:35:38Z" finished-at="2017-10-23T22:36:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Answered 实际：No Answer】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Answered 实际：No Answer】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.G_key5toDialName(IVR.java:188)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6501，按5到DialbyName,按957到分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_key5toDialName -->
        <test-method status="PASS" signature="H_keytoHangup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="H_keytoHangup" duration-ms="29226" started-at="2017-10-23T22:36:39Z" finished-at="2017-10-23T22:37:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按#挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_keytoHangup -->
        <test-method status="PASS" signature="I_keytoSelectOption()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="I_keytoSelectOption" duration-ms="43480" started-at="2017-10-23T22:37:08Z" finished-at="2017-10-23T22:37:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1，按*到SelecttoOption--预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_keytoSelectOption -->
        <test-method status="PASS" signature="J_keytoTimeout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="J_keytoTimeout" duration-ms="7479822" started-at="2017-10-23T22:37:52Z" finished-at="2017-10-24T00:42:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6501，超时到prompt1]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_keytoTimeout -->
        <test-method status="PASS" signature="K_keytoInvalid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="K_keytoInvalid" duration-ms="35118" started-at="2017-10-24T00:42:31Z" finished-at="2017-10-24T00:43:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6501，按a错误按键到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_keytoInvalid -->
        <test-method status="PASS" signature="L_checkvoicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="L_checkvoicemail" duration-ms="56918" started-at="2017-10-24T00:43:07Z" finished-at="2017-10-24T00:44:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,直接拨打*02查看1000的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_checkvoicemail -->
        <test-method status="PASS" signature="M_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="M_delete" duration-ms="59111" started-at="2017-10-24T00:44:03Z" finished-at="2017-10-24T00:45:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：IVR6502-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：IVR6502-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：IVR6502-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：IVR6502-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：IVRtest1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：IVRtest1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：IVRtest1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：IVRtest1-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M_delete -->
        <test-method status="PASS" signature="N_editInbound2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="N_editInbound2" duration-ms="30990" started-at="2017-10-24T00:45:03Z" finished-at="2017-10-24T00:45:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_editInbound2 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@18f65a4]" name="AfterClass" is-config="true" duration-ms="13401" started-at="2017-10-24T00:45:34Z" finished-at="2017-10-24T00:45:47Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="BeforeClass" is-config="true" duration-ms="36882" started-at="2017-10-23T21:50:16Z" finished-at="2017-10-23T21:50:53Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：OutboundRestriction]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="A_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="A_add_1" duration-ms="249118" started-at="2017-10-23T21:50:53Z" finished-at="2017-10-23T21:55:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Failed 实际：Answered】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Failed 实际：Answered】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction.A_add_1(OutboundRestriction.java:67)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Failed 实际：Answered】.jpg" target="_blank">Error: CDR_Status检测 【预期：Failed 实际：Answered】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_1 -->
        <test-method status="PASS" signature="A_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="A_add_2" duration-ms="23789" started-at="2017-10-23T21:55:02Z" finished-at="2017-10-23T21:55:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[    Pass:  查看分机1100状态已被限制，并取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_2 -->
        <test-method status="PASS" signature="A_add_3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="A_add_3" duration-ms="33157" started-at="2017-10-23T21:55:26Z" finished-at="2017-10-23T21:55:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_3 -->
        <test-method status="FAIL" signature="B_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="B_add_1" duration-ms="186380" started-at="2017-10-23T21:55:59Z" finished-at="2017-10-23T21:59:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Failed 实际：Answered】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Failed 实际：Answered】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:242)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction.B_add_1(OutboundRestriction.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\CDR_Status检测 【预期：Failed 实际：Answered】.jpg" target="_blank">Error: CDR_Status检测 【预期：Failed 实际：Answered】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_1 -->
        <test-method status="PASS" signature="B_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="B_add_2" duration-ms="29361" started-at="2017-10-23T21:59:05Z" finished-at="2017-10-23T21:59:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[    Pass:  查看分机1102状态已被限制，并取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_2 -->
        <test-method status="PASS" signature="B_add_3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="B_add_3" duration-ms="33183" started-at="2017-10-23T21:59:35Z" finished-at="2017-10-23T22:00:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1102取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_3 -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="C_delete" duration-ms="60793" started-at="2017-10-23T22:00:08Z" finished-at="2017-10-23T22:01:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：OutRestriction2-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@11c1ea0]" name="AfterClass" is-config="true" duration-ms="13274" started-at="2017-10-23T22:01:09Z" finished-at="2017-10-23T22:01:22Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：OutboundRestriction]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="BeforeClass" is-config="true" duration-ms="33579" started-at="2017-10-23T21:06:09Z" finished-at="2017-10-23T21:06:42Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：前置环境设置—BeforeTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="A_addExtension" duration-ms="49062" started-at="2017-10-23T21:06:42Z" finished-at="2017-10-23T21:07:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量创建分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtension -->
        <test-method status="PASS" signature="A_addExtensionGroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="A_addExtensionGroup" duration-ms="33912" started-at="2017-10-23T21:07:31Z" finished-at="2017-10-23T21:08:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtensionGroup -->
        <test-method status="PASS" signature="A_editExtenName()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="A_editExtenName" duration-ms="49348" started-at="2017-10-23T21:08:05Z" finished-at="2017-10-23T21:08:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_editExtenName -->
        <test-method status="FAIL" signature="B_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="B_addtrunk" duration-ms="43079" started-at="2017-10-23T21:08:55Z" finished-at="2017-10-23T21:09:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[SIP1注册失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: SIP1注册失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertNotEquals(YsAssert.java:912)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.assertTrunkStatus(YS_Trunk.java:223)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.addTrunk(YS_Trunk.java:181)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest.B_addtrunk(BeforeTest.java:89)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有VoIP外线]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip外线SIP1]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\SIP1注册失败.jpg" target="_blank">Error: SIP1注册失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_addtrunk -->
        <test-method status="FAIL" signature="C_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="C_addtrunk" duration-ms="28440" started-at="2017-10-23T21:09:38Z" finished-at="2017-10-23T21:10:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[IAX1注册失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: IAX1注册失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertNotEquals(YsAssert.java:912)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.assertTrunkStatus(YS_Trunk.java:223)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.addTrunk(YS_Trunk.java:181)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest.C_addtrunk(BeforeTest.java:95)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax外线IAX1]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\IAX1注册失败.jpg" target="_blank">Error: IAX1注册失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_addtrunk -->
        <test-method status="FAIL" signature="D_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="D_addtrunk" duration-ms="26769" started-at="2017-10-23T21:10:06Z" finished-at="2017-10-23T21:10:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[SPS1注册失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: SPS1注册失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertNotEquals(YsAssert.java:912)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.assertTrunkStatus(YS_Trunk.java:223)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.addTrunk(YS_Trunk.java:181)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest.D_addtrunk(BeforeTest.java:100)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps外线SPS1]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\SPS1注册失败.jpg" target="_blank">Error: SPS1注册失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_addtrunk -->
        <test-method status="FAIL" signature="E_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="E_addtrunk" duration-ms="26652" started-at="2017-10-23T21:10:33Z" finished-at="2017-10-23T21:11:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[SPX1注册失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: SPX1注册失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertNotEquals(YsAssert.java:912)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.assertTrunkStatus(YS_Trunk.java:223)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.addTrunk(YS_Trunk.java:181)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest.E_addtrunk(BeforeTest.java:106)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx外线SPX1]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///E:\SwebTest\pic\SPX1注册失败.jpg" target="_blank">Error: SPX1注册失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_addtrunk -->
        <test-method status="PASS" signature="F_addInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="F_addInRoute" duration-ms="51023" started-at="2017-10-23T21:11:00Z" finished-at="2017-10-23T21:11:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_addInRoute -->
        <test-method status="PASS" signature="G_addOutRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute1" duration-ms="31184" started-at="2017-10-23T21:11:51Z" finished-at="2017-10-23T21:12:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute1 -->
        <test-method status="PASS" signature="G_addOutRoute2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute2" duration-ms="13634" started-at="2017-10-23T21:12:22Z" finished-at="2017-10-23T21:12:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute2 -->
        <test-method status="PASS" signature="G_addOutRoute3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute3" duration-ms="13748" started-at="2017-10-23T21:12:35Z" finished-at="2017-10-23T21:12:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute3 -->
        <test-method status="PASS" signature="G_addOutRoute4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute4" duration-ms="13803" started-at="2017-10-23T21:12:49Z" finished-at="2017-10-23T21:13:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute4 -->
        <test-method status="PASS" signature="G_addOutRoute5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute5" duration-ms="13638" started-at="2017-10-23T21:13:03Z" finished-at="2017-10-23T21:13:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute5 -->
        <test-method status="PASS" signature="G_addOutRoute6()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute6" duration-ms="13670" started-at="2017-10-23T21:13:17Z" finished-at="2017-10-23T21:13:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute6 -->
        <test-method status="PASS" signature="G_addOutRoute7()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute7" duration-ms="13687" started-at="2017-10-23T21:13:30Z" finished-at="2017-10-23T21:13:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加E1的呼出路由OutRoute7_e1]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute7 -->
        <test-method status="PASS" signature="G_addOutRoute8()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="G_addOutRoute8" duration-ms="13732" started-at="2017-10-23T21:13:44Z" finished-at="2017-10-23T21:13:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加GSM的呼出路由OutRoute8_gsm]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute8 -->
        <test-method status="PASS" signature="H_addivr()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="H_addivr" duration-ms="46159" started-at="2017-10-23T21:13:58Z" finished-at="2017-10-23T21:14:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_addivr -->
        <test-method status="PASS" signature="I_addringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="I_addringgroup" duration-ms="30979" started-at="2017-10-23T21:14:44Z" finished-at="2017-10-23T21:15:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_addringgroup -->
        <test-method status="PASS" signature="J_addqueue()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="J_addqueue" duration-ms="36237" started-at="2017-10-23T21:15:15Z" finished-at="2017-10-23T21:15:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_addqueue -->
        <test-method status="PASS" signature="K_addconference()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="K_addconference" duration-ms="35274" started-at="2017-10-23T21:15:51Z" finished-at="2017-10-23T21:16:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_addconference -->
        <test-method status="PASS" signature="L_setRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="L_setRecord" duration-ms="42402" started-at="2017-10-23T21:16:26Z" finished-at="2017-10-23T21:17:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置录音存储在：TF/SD]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_setRecord -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1088d51]" name="AfterClass" is-config="true" duration-ms="13638" started-at="2017-10-23T21:17:09Z" finished-at="2017-10-23T21:17:22Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：前置环境设置—BeforeTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="BeforeClass" is-config="true" duration-ms="22587" started-at="2017-10-23T21:17:22Z" finished-at="2017-10-23T21:17:45Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：时间条件—TimeCondition]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="addTimeCondition1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="addTimeCondition1" duration-ms="41759" started-at="2017-10-23T21:17:45Z" finished-at="2017-10-23T21:18:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_test：每天05:05~22:39]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Outbound：00:00-00:01,周日]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition1 -->
        <test-method status="PASS" signature="addTimeCondition2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="addTimeCondition2" duration-ms="25330" started-at="2017-10-23T21:18:27Z" finished-at="2017-10-23T21:18:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_Advanced:周日/二/四，12:30~18:45]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑workday_Advanced，启用高级设置，1/6/12月的1/10/20/31号]]>
            </line>
            <line>
              <![CDATA[    Pass: 月份编辑]]>
            </line>
            <line>
              <![CDATA[    Pass: 日期编辑]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition2 -->
        <test-method status="PASS" signature="addTimeCondition3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="addTimeCondition3" duration-ms="25708" started-at="2017-10-23T21:18:52Z" finished-at="2017-10-23T21:19:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件CheckAll]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑CheckAl，启用高级设置，Month:All，Day:All]]>
            </line>
            <line>
              <![CDATA[    Pass: Week编辑页面显示检查]]>
            </line>
            <line>
              <![CDATA[    Pass: Month编辑页面显示检查]]>
            </line>
            <line>
              <![CDATA[    Pass: Day编辑页面显示检查]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition3 -->
        <test-method status="PASS" signature="addTimeCondition4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="addTimeCondition4" duration-ms="58327" started-at="2017-10-23T21:19:18Z" finished-at="2017-10-23T21:20:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：workday_Advanced，取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：workday_Advanced，确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：workday_test，取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：workday_test，取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：workday_test，确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition4 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@186dec2]" name="AfterClass" is-config="true" duration-ms="13272" started-at="2017-10-23T21:20:16Z" finished-at="2017-10-23T21:20:29Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：时间条件—TimeCondition]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="BeforeClass" is-config="true" duration-ms="25069" started-at="2017-10-23T22:13:35Z" finished-at="2017-10-23T22:14:00Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：SpeedDial]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="A_add_1" duration-ms="106688" started-at="2017-10-23T22:14:00Z" finished-at="2017-10-23T22:15:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有速拨码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 设置速拨特征码为*999]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建速拨码：dialcode:1,PhoneNumber：13001]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建速拨码：dialcode:1234567,PhoneNumber：31234567]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*9991通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_1 -->
        <test-method status="PASS" signature="A_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="A_add_2" duration-ms="33559" started-at="2017-10-23T22:15:47Z" finished-at="2017-10-23T22:16:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*9991234567通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_2 -->
        <test-method status="PASS" signature="B_export()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="B_export" duration-ms="739" started-at="2017-10-23T22:16:20Z" finished-at="2017-10-23T22:16:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 导出速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_export -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="C_delete" duration-ms="54372" started-at="2017-10-23T22:16:21Z" finished-at="2017-10-23T22:17:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：速拨码为1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：速拨码为1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：速拨码为1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：速拨码为1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：速拨码为1234567-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：速拨码为1234567-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：速拨码为1234567-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：速拨码为1234567-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="D_import()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="D_import" duration-ms="10963" started-at="2017-10-23T22:17:15Z" finished-at="2017-10-23T22:17:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 导入速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass: 导入速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_import -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@33cc44]" name="AfterClass" is-config="true" duration-ms="13279" started-at="2017-10-23T22:17:26Z" finished-at="2017-10-23T22:17:39Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：SpeedDial]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
