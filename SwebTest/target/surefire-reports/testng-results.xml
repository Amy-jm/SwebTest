<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="20" failed="28" total="132" passed="84">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 09时08分21秒开始执行：======  Inbound  ======]]>
    </line>
    <line>
      <![CDATA[  【09时08分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时08分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时09分00秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时09分03秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【09时09分05秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时09分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时09分08秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【09时09分08秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【09时09分08秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【09时09分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时09分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时09分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时09分30秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时09分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时09分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时09分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时09分58秒 执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时10分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时10分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时10分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时10分24秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时10分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时10分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时10分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时10分57秒 执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时11分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时11分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时11分30秒 执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时11分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时11分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时11分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时12分03秒 执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时12分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时12分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时12分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时12分37秒 执行操作】 2001拨打77777通过E1外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时12分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时13分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时13分09秒 执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
    </line>
    <line>
      <![CDATA[  【09时13分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时13分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时13分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时13分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时13分59秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【09时14分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时14分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时14分34秒 执行操作】 2001拨打99999通过sps外线呼入--预期：无法呼入，CDR不会生成]]>
    </line>
    <line>
      <![CDATA[  【09时14分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时14分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时14分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时15分07秒 执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
    </line>
    <line>
      <![CDATA[  【09时15分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分16秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时15分17秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('37')]]>
    </line>
    <line>
      <![CDATA[  【09时15分18秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('E')]]>
    </line>
    <line>
      <![CDATA[  【09时15分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分32秒 执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[  【09时15分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时15分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时15分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时16分05秒 执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[  【09时16分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时16分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时16分38秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【09时16分48秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
    </line>
    <line>
      <![CDATA[  【09时16分52秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时16分53秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【09时16分54秒 执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
    </line>
    <line>
      <![CDATA[  【09时16分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时16分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时17分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时17分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时17分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时17分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时17分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时17分15秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时17分20秒 执行操作】Extjs： return  Ext.getCmp('combo-3528').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时17分21秒 执行操作】Extjs： Ext.getCmp('combo-3528').setValue('17')]]>
    </line>
    <line>
      <![CDATA[  【09时17分24秒 执行操作】Extjs： Ext.getCmp('combo-3529').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【09时17分27秒 执行操作】Extjs： return  Ext.getCmp('combo-3530').getStore().findRecord('username', "1101", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时17分28秒 执行操作】Extjs： Ext.getCmp('combo-3530').setValue('62')]]>
    </line>
    <line>
      <![CDATA[  【09时17分36秒 执行操作】 3001拨打3000通过sip外线呼入1101]]>
    </line>
    <line>
      <![CDATA[  【09时17分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时18分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时18分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时18分03秒 执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
    </line>
    <line>
      <![CDATA[  【09时18分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时18分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时18分12秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时18分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时18分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时18分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时18分24秒 执行操作】Extjs： return  Ext.getCmp('combo-3688').getStore().findRecord('name', "[Holiday]", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时18分25秒 执行操作】Extjs： Ext.getCmp('combo-3688').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【09时18分28秒 执行操作】Extjs： Ext.getCmp('combo-3689').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【09时18分32秒 执行操作】Extjs： return  Ext.getCmp('combo-3690').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时18分33秒 执行操作】Extjs： Ext.getCmp('combo-3690').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【09时18分46秒 执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[  【09时19分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时19分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时19分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时19分12秒 执行操作】 分机1000拨打特征码*802强制启用工作时间]]>
    </line>
    <line>
      <![CDATA[  【09时19分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时19分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时19分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时19分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时19分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时19分32秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
    </line>
    <line>
      <![CDATA[  【09时19分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时19分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时19分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时19分58秒 执行操作】 编辑InRoute1禁用时间条件]]>
    </line>
    <line>
      <![CDATA[  【09时20分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时20分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时20分08秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时20分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时20分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时20分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时20分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时20分16秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时20分25秒 执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
    </line>
    <line>
      <![CDATA[  【09时20分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时20分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时20分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时20分52秒 执行操作】 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时20分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时20分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时20分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时20分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时21分03秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时21分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分11秒 执行操作】 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时21分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分24秒 执行操作】 删除：InRoute1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时21分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时21分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时21分29秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时21分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：InRoute1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分34秒 执行操作】 删除：InRoute1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：InRoute1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时21分40秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【09时21分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【09时21分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【09时21分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时21分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时21分51秒 执行操作】deletes  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【09时21分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时21分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【09时21分53秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【09时21分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时21分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时22分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时22分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(4).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(5).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(6).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(7).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(8).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(9).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(10).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分13秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(11).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分14秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(12).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分15秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(13).id]]>
    </line>
    <line>
      <![CDATA[  【09时22分16秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('35,36,38,37,11,10,9,8,7,6,5,3,2,4')]]>
    </line>
    <line>
      <![CDATA[  【09时22分17秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【09时22分18秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时22分19秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【09时22分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 09时22分43秒执行完毕：======  Inbound  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 09时23分00秒开始执行：======  Outbound  ======]]>
    </line>
    <line>
      <![CDATA[  【09时23分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时23分38秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时23分41秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【09时23分43秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时23分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时23分46秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【09时23分46秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【09时23分46秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【09时23分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分01秒 执行操作】 1000拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时24分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时24分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时24分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：13001 实际：*802】.jpg" target="_blank">Error: CDR被叫方检测 【预期：13001 实际：*802】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时24分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时24分41秒 执行操作】 1000拨打23001通过iax外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时24分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时24分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时25分16秒 执行操作】 1000拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时25分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时25分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时25分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时25分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时25分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时25分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时25分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时25分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时25分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时25分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时25分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时26分02秒 执行操作】 1000拨打42000通过spx外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时26分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时26分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时26分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时26分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时26分39秒 执行操作】 1000拨打52000通过PSTN外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时26分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时26分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时27分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时27分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时27分19秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时27分19秒 执行操作】 1000拨打62000通过BRI外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时27分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时27分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时27分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时27分54秒 执行操作】 1000拨打72000通过E1外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时27分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时28分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时28分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时28分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时28分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时28分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时28分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时28分42秒 执行操作】 新建呼出路由DialPattern，Pattern:01.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
    </line>
    <line>
      <![CDATA[  【09时28分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时28分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时28分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','01.')]]>
    </line>
    <line>
      <![CDATA[  【09时28分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
    </line>
    <line>
      <![CDATA[  【09时28分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('prepend','30')]]>
    </line>
    <line>
      <![CDATA[  【09时28分52秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时28分53秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【09时28分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时29分06秒 执行操作】 1000拨打0101通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时29分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时29分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时29分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时29分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时29分41秒 执行操作】 新建呼出路由Password，Pattern:02.，strip：2，外线:SPS，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【09时29分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时29分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时29分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','02.')]]>
    </line>
    <line>
      <![CDATA[  【09时29分47秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
    </line>
    <line>
      <![CDATA[  【09时29分49秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时29分51秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('37')]]>
    </line>
    <line>
      <![CDATA[  【09时29分52秒 执行操作】Extjs： return  Ext.getCmp('st-or-exteninfo').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时29分53秒 执行操作】Extjs： Ext.getCmp('st-or-exteninfo').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【09时29分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时30分00秒 执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
    </line>
    <line>
      <![CDATA[  【09时30分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时30分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时30分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时30分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时30分26秒 执行操作】Extjs： Ext.getCmp('st-or-pintype').setValue('singlepin')]]>
    </line>
    <line>
      <![CDATA[  【09时30分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时30分38秒 执行操作】 1000拨打028888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时31分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时31分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时31分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[9].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【09时31分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时31分29秒 执行操作】 新建呼出路由Rrmemory_hunt，Pattern:03.，strip：2，外线:SPS、SIP，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【09时31分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时31分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时31分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','03.')]]>
    </line>
    <line>
      <![CDATA[  【09时31分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
    </line>
    <line>
      <![CDATA[  【09时31分37秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时31分38秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时31分39秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('37,35')]]>
    </line>
    <line>
      <![CDATA[  【09时31分40秒 执行操作】Extjs： return  Ext.getCmp('st-or-exteninfo').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时31分41秒 执行操作】Extjs： Ext.getCmp('st-or-exteninfo').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【09时31分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时31分47秒 执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
    </line>
    <line>
      <![CDATA[  【09时31分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').plugins[0].setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【09时31分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.setPageSize(25)]]>
    </line>
    <line>
      <![CDATA[  【09时31分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时31分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时31分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时32分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时32分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时32分21秒 执行操作】Extjs： Ext.getCmp('st-or-adjusttrunk').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时32分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时32分33秒 执行操作】 1000拨打033001，第1次预期通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时32分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时32分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时32分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时33分07秒 执行操作】 1000拨打033001，第2次预期通过SIP外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时33分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时33分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时33分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：SIP1 实际：SPS1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：SIP1 实际：SPS1】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时33分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时33分39秒 执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
    </line>
    <line>
      <![CDATA[  【09时33分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时33分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时33分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分00秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时34分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时34分06秒 执行操作】Extjs： Ext.getCmp('st-or-pintype').setValue('none')]]>
    </line>
    <line>
      <![CDATA[  【09时34分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时34分18秒 执行操作】 1000拨打029999，通过sps外线呼出，预期：呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为HangUp]]>
    </line>
    <line>
      <![CDATA[  【09时34分32秒 执行操作】 编辑呼出路由Password，TimeCondition选择CheckAll]]>
    </line>
    <line>
      <![CDATA[  【09时34分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时34分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时34分53秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时34分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时35分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时35分10秒 执行操作】 1000拨打029999，通过sps外线呼出，预期：呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【09时35分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时35分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时35分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时35分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').plugins[0].setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【09时35分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.setPageSize(25)]]>
    </line>
    <line>
      <![CDATA[  【09时35分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时35分51秒 执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时35分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时35分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时35分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时35分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时35分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时35分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分08秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时36分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时36分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时36分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分21秒 执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时36分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时36分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分35秒 执行操作】 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时36分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时36分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时36分50秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时36分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时36分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分55秒 执行操作】 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时36分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时37分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时37分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时37分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时37分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时37分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 09时37分32秒执行完毕：======  Outbound  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 09时37分49秒开始执行：======  OutboundRestriction  ======]]>
    </line>
    <line>
      <![CDATA[  【09时38分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时38分32秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时38分36秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【09时38分38秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时38分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时38分40秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【09时38分40秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【09时38分40秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【09时38分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时38分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时39分01秒 执行操作】  删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【09时39分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【09时39分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【09时39分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时39分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时39分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时39分12秒 执行操作】deletes   删除所有Outbound Restriction: 1]]>
    </line>
    <line>
      <![CDATA[  【09时39分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时39分16秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【09时39分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时39分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时39分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时39分26秒 执行操作】deleting   删除所有Outbound Restriction: 0]]>
    </line>
    <line>
      <![CDATA[  【09时39分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时39分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【09时39分28秒 执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
    </line>
    <line>
      <![CDATA[  【09时39分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时39分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期第1通电话1100呼出成功 【预期：3 实际：4】.jpg" target="_blank">Error: 预期第1通电话1100呼出成功 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时40分11秒 执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[  【09时40分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('extension').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时40分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时40分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时40分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期分机1100状态被限制.jpg" target="_blank">Error: 预期分机1100状态被限制</a>]]>
    </line>
    <line>
      <![CDATA[  【09时40分38秒 执行操作】 分机1100取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[  【09时40分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时41分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时41分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时41分04秒 执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
    </line>
    <line>
      <![CDATA[  【09时41分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时41分09秒 执行操作】Extjs： return  Ext.getCmp('st-constraint-exteninfo').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时41分10秒 执行操作】Extjs： Ext.getCmp('st-constraint-exteninfo').setValue('63')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期第1通电话1102呼出成功 【预期：3 实际：4】.jpg" target="_blank">Error: 预期第1通电话1102呼出成功 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时41分46秒 执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[  【09时41分47秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时41分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('extension').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时41分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时41分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时42分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[2].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时42分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[3].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时42分09秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[3].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时42分25秒 执行操作】 分机1102取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1102为Talking状态 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时42分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').plugins[0].setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【09时42分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.setPageSize(25)]]>
    </line>
    <line>
      <![CDATA[  【09时42分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时42分54秒 执行操作】 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时42分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时42分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时42分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时43分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时43分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时43分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分11秒 执行操作】 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时43分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时43分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分24秒 执行操作】 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时43分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时43分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时43分29秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时43分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时43分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分34秒 执行操作】 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[  【09时43分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时43分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 09时43分52秒执行完毕：======  OutboundRestriction  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 09时44分09秒开始执行：======  AutoCLIP  =======]]>
    </line>
    <line>
      <![CDATA[  【09时44分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时44分49秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时44分52秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【09时44分54秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时44分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时44分56秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【09时44分56秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【09时44分56秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【09时45分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时45分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时45分11秒 执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
    </line>
    <line>
      <![CDATA[  【09时45分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时45分19秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时45分20秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时45分21秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时45分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时45分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【09时45分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时45分35秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时45分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时45分49秒 执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时45分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时45分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时45分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时45分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时46分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时46分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时46分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时46分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时46分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【09时46分24秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时46分25秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[  【09时46分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时46分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时46分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时46分51秒 执行操作】 删除AutoCLIP List的所有记录]]>
    </line>
    <line>
      <![CDATA[  【09时46分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时46分59秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【09时47分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时47分04秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时47分07秒 执行操作】 删除AutoCLIP List后，3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[  【09时47分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时47分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时47分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时47分33秒 执行操作】 ----启用Delete Used Records----]]>
    </line>
    <line>
      <![CDATA[  【09时47分35秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时47分36秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时47分37秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时47分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时47分47秒 执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时47分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时47分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时47分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时48分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时48分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时48分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时48分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时48分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【09时48分23秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时48分23秒 执行操作】 3001拨打3000通过sip外线第1次呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[  【09时48分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时48分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时48分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时48分49秒 执行操作】 ----启用Only Keep Missed Call Records----]]>
    </line>
    <line>
      <![CDATA[  【09时48分50秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时48分51秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时48分52秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时48分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时49分02秒 执行操作】 1101拨打13001通过sip外线呼出，被叫接听--预期不会生成cliplist]]>
    </line>
    <line>
      <![CDATA[  【09时49分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时49分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时49分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时49分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时49分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时49分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('cliplist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Error: 被叫接听，检查AutoCLIP List生成了记录]]>
    </line>
    <line>
      <![CDATA[  【09时49分34秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时49分35秒 执行操作】 1101拨打13001通过sip外线呼出，被叫未接--预期生成cliplist]]>
    </line>
    <line>
      <![CDATA[  【09时49分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('cliplist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  被叫未接，检查AutoCLIP List生成记录]]>
    </line>
    <line>
      <![CDATA[  【09时49分53秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时49分53秒 执行操作】 ----启用Match Outgoing Trunk----]]>
    </line>
    <line>
      <![CDATA[  【09时49分54秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时49分55秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时49分57秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时49分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时50分07秒 执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时50分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时50分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时50分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时50分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时50分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时50分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时50分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时50分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[  【09时50分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【09时50分42秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时50分42秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[  【09时51分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时51分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时51分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时51分09秒 执行操作】 ----不启用AutoCLIP----]]>
    </line>
    <line>
      <![CDATA[  【09时51分10秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时51分11秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时51分12秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时51分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时51分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【09时51分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时51分26秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时51分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时51分40秒 执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【09时51分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时51分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时51分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时51分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时51分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时52分05秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[  【09时52分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时52分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时52分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 09时52分36秒执行完毕：======   AutoCLIP   ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 09时52分53秒开始执行：======  Conference  ======]]>
    </line>
    <line>
      <![CDATA[  【09时53分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时53分31秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时53分35秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【09时53分36秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时53分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时53分39秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【09时53分39秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【09时53分39秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【09时53分39秒 执行操作】 被测设备注册分机1000、1100、1105，辅助1：分机3001，辅助2：分机2001]]>
    </line>
    <line>
      <![CDATA[  【09时53分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时53分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时53分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【09时54分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分06秒 执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【09时54分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【09时54分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【09时54分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【09时54分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时54分17秒 执行操作】deletes  删除所有Conference: 1]]>
    </line>
    <line>
      <![CDATA[  【09时54分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时54分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【09时54分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时54分31秒 执行操作】deleting  删除所有Conference: 0]]>
    </line>
    <line>
      <![CDATA[  【09时54分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时54分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【09时54分41秒 执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【09时54分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时54分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时54分52秒 执行操作】 新建Conference6401，默认设置]]>
    </line>
    <line>
      <![CDATA[  【09时54分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时54分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时55分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时55分05秒 执行操作】 新建Conference6402，与会者密码123，启用等候管理员，提示音：分机号码，Allow Participant to Invite：不启用，管理员密码：456，管理员：1000、1100]]>
    </line>
    <line>
      <![CDATA[  【09时55分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分10秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【09时55分11秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('exten')]]>
    </line>
    <line>
      <![CDATA[  【09时55分12秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【09时55分13秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时55分14秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时55分15秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('60,61')]]>
    </line>
    <line>
      <![CDATA[  【09时55分18秒 执行操作】 编辑呼入路由InRoute1到Conference6402]]>
    </line>
    <line>
      <![CDATA[  【09时55分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时55分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时55分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【09时55分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时55分38秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【09时55分40秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference6402", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【09时55分41秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('8')]]>
    </line>
    <line>
      <![CDATA[  【09时55分53秒 执行操作】 1000拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[  【09时56分01秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时56分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【09时56分06秒 执行操作】 1100拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[  【09时56分14秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时56分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[  【09时56分18秒 执行操作】 1105拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[  【09时56分26秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时56分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有3个成员]]>
    </line>
    <line>
      <![CDATA[  【09时56分31秒 执行操作】 1000退出会议室6401]]>
    </line>
    <line>
      <![CDATA[  【09时56分40秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时56分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[  【09时56分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[  【09时57分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时57分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时57分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时57分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时57分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时57分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时57分12秒 执行操作】 3001拨打3000通过sip外线呼入6402，输入与会密码123]]>
    </line>
    <line>
      <![CDATA[  【09时57分24秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时57分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期会议室6402有1个成员 【预期：1 实际：0】.jpg" target="_blank">Error: 预期会议室6402有1个成员 【预期：1 实际：0】</a>]]>
    </line>
    <line>
      <![CDATA[  【09时57分30秒 执行操作】 2001拨打99999通过sps外线呼入6402，输入管理员密码456]]>
    </line>
    <line>
      <![CDATA[  【09时57分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时57分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时57分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有1个成员]]>
    </line>
    <line>
      <![CDATA[  【09时57分57秒 执行操作】 1000拨打6402呼入6402，无需密码]]>
    </line>
    <line>
      <![CDATA[  【09时58分02秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时58分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有2个成员]]>
    </line>
    <line>
      <![CDATA[  【09时58分08秒 执行操作】 1105拨打6402呼入6402，输入与会者密码123]]>
    </line>
    <line>
      <![CDATA[  【09时58分20秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时58分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有3个成员]]>
    </line>
    <line>
      <![CDATA[  【09时58分26秒 执行操作】 1105按#1100，邀请1100加入会议，预期：邀请失败]]>
    </line>
    <line>
      <![CDATA[  【09时58分37秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时58分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有3个成员]]>
    </line>
    <line>
      <![CDATA[  【09时58分43秒 执行操作】 挂断所有通话,所有成员退出会议室6402]]>
    </line>
    <line>
      <![CDATA[  【09时58分48秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时58分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时58分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有0个成员]]>
    </line>
    <line>
      <![CDATA[  【09时59分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【09时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【09时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【09时59分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时59分12秒 执行操作】 1105呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[  【09时59分17秒 执行操作】 1105按#...1100邀请分机1100加入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[  【09时59分24秒 执行操作】Answer Call  8  1100]]>
    </line>
    <line>
      <![CDATA[  【09时59分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【09时59分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时59分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
    </line>
    <line>
      <![CDATA[  【09时59分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【09时59分42秒 执行操作】 表格删除：Conference6401-取消删除]]>
    </line>
    <line>
      <![CDATA[  【09时59分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时59分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时59分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【09时59分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【09时59分53秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【09时59分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6401-取消删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分00秒 执行操作】 表格删除：Conference6401-确定删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分06秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【10时00分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6401-确定删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分13秒 执行操作】 删除：Conference6402-取消删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时00分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时00分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时00分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时00分19秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时00分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Conference6402-取消删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分25秒 执行操作】 删除：Conference6402-确定删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Conference6402-确定删除]]>
    </line>
    <line>
      <![CDATA[  【10时00分30秒 执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【10时00分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时00分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时00分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时00分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时00分48秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【10时00分49秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时00分50秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 10时01分09秒执行完毕：======  Conference  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 10时01分27秒开始执行：======  Extension  ======]]>
    </line>
    <line>
      <![CDATA[  【10时01分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时01分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分06秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时02分09秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【10时02分11秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时02分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时02分13秒 执行操作】 初始化特征码设置]]>
    </line>
    <line>
      <![CDATA[  【10时02分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时02分19秒 执行操作】Extjs： Ext.getCmp('st-feature-enbmonitor').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分20秒 执行操作】Extjs： Ext.getCmp('st-feature-enbblindtransfer').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分21秒 执行操作】Extjs： Ext.getCmp('st-feature-enbattendtransfer').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分22秒 执行操作】Extjs： Ext.getCmp('st-feature-enbcallpark').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分23秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdirectedparkcall').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分24秒 执行操作】Extjs： Ext.getCmp('st-feature-enbresetfollowme').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分25秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablealways').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分26秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablealways').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分27秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablebusy').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分28秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablebusy').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分29秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablenoanswer').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分30秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablenoanswer').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分31秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablednd').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分32秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablednd').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分33秒 执行操作】Extjs： Ext.getCmp('st-feature-enbnormalspy').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分34秒 执行操作】Extjs： Ext.getCmp('st-feature-enbwhisperspy').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分35秒 执行操作】Extjs： Ext.getCmp('st-feature-enbbargespy').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时02分46秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【10时02分46秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【10时02分46秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【10时02分46秒 执行操作】 被测设备注册分机1000,1100,1101,1105，辅助2:2000]]>
    </line>
    <line>
      <![CDATA[  【10时02分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时02分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分15秒 执行操作】 SIP内部分机互打：1000拨打1105,1105接听]]>
    </line>
    <line>
      <![CDATA[  【10时03分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时03分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时03分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时03分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时03分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时03分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时03分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时03分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
    </line>
    <line>
      <![CDATA[  【10时03分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时03分58秒 执行操作】 SIP内部分机互打：1000拨打1105，1105未接]]>
    </line>
    <line>
      <![CDATA[  【10时04分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时04分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时04分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时04分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时04分28秒 执行操作】 FXS分机：1000拨打1106，预期辅助2的2000分机响铃]]>
    </line>
    <line>
      <![CDATA[  【10时04分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时04分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时04分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时04分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时04分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时05分03秒 执行操作】 FXS分机：2000拨打51000，预期1000分机接听]]>
    </line>
    <line>
      <![CDATA[  【10时05分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时05分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时05分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时05分44秒 执行操作】 1000拨打1100,1100按*31105转移给分机1105]]>
    </line>
    <line>
      <![CDATA[  【10时05分46秒 执行操作】Answer Call  9  1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[  【10时05分55秒 执行操作】Answer Call  10  1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105为Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking]]>
    </line>
    <line>
      <![CDATA[  【10时06分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时06分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时06分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时06分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时06分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时06分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时06分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时06分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时06分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时06分35秒 执行操作】 1000拨打1100,1100按*31105转移给分机1105，超时恢复通话]]>
    </line>
    <line>
      <![CDATA[  【10时06分37秒 执行操作】Answer Call  12  1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【10时07分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时07分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时07分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
    </line>
    <line>
      <![CDATA[  【10时07分21秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时07分21秒 执行操作】 1000拨打1100,1100按*031105转移给分机1105]]>
    </line>
    <line>
      <![CDATA[  【10时07分23秒 执行操作】Answer Call  15  1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[  【10时07分33秒 执行操作】Answer Call  16  1105]]>
    </line>
    <line>
      <![CDATA[  【10时07分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为HangUp状态]]>
    </line>
    <line>
      <![CDATA[  【10时07分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时07分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时07分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时07分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时07分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时08分02秒 执行操作】 1000拨打1100,1100按*6将通话停泊]]>
    </line>
    <line>
      <![CDATA[  【10时08分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时08分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp状态]]>
    </line>
    <line>
      <![CDATA[  【10时08分23秒 执行操作】 1100拨打6900,恢复通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【10时08分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时08分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时08分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时08分52秒 执行操作】 1000拨打1100,1100按*066950将通话停泊]]>
    </line>
    <line>
      <![CDATA[  【10时08分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp状态]]>
    </line>
    <line>
      <![CDATA[  【10时09分16秒 执行操作】 1105拨打6950,恢复通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[  【10时09分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时09分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时09分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时09分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时09分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时09分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时09分46秒 执行操作】 1100拨打*711105将通话总是转移到1105]]>
    </line>
    <line>
      <![CDATA[  【10时09分50秒 执行操作】 1000拨打1100,预期1105响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[  【10时09分54秒 执行操作】Answer Call  25  1105]]>
    </line>
    <line>
      <![CDATA[  【10时10分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时10分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时10分18秒 执行操作】 1100拨打*071取消通话总是转移]]>
    </line>
    <line>
      <![CDATA[  【10时10分24秒 执行操作】 1000拨打1100,预期1100响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105为HangUp]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃]]>
    </line>
    <line>
      <![CDATA[  【10时10分26秒 执行操作】Answer Call  28  1100]]>
    </line>
    <line>
      <![CDATA[  【10时10分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时10分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时10分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时10分50秒 执行操作】 1100拨打*721105忙时转移到1105]]>
    </line>
    <line>
      <![CDATA[  【10时11分01秒 执行操作】 1000拨打1100,1100拒接，转移到1105]]>
    </line>
    <line>
      <![CDATA[  【10时11分03秒 执行操作】Answer Call  31  1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[  【10时11分08秒 执行操作】Answer Call  0  1105]]>
    </line>
    <line>
      <![CDATA[  【10时11分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时11分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时11分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时11分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时11分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时11分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时11分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时11分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时11分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时11分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时11分39秒 执行操作】 1100拨打*072取消忙时转移]]>
    </line>
    <line>
      <![CDATA[  【10时11分46秒 执行操作】 1000拨打1100,预期1100响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Ring]]>
    </line>
    <line>
      <![CDATA[  【10时11分50秒 执行操作】Answer Call  4  1100]]>
    </line>
    <line>
      <![CDATA[  【10时11分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时12分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时12分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105不会响铃]]>
    </line>
    <line>
      <![CDATA[  【10时12分20秒 执行操作】 1100拨打*731105无应答时转移到1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃状态]]>
    </line>
    <line>
      <![CDATA[  【10时12分29秒 执行操作】 1000拨打1100，超时不接，预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃状态]]>
    </line>
    <line>
      <![CDATA[  【10时13分02秒 执行操作】Answer Call  8  1105]]>
    </line>
    <line>
      <![CDATA[  【10时13分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时13分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时13分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时13分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时13分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时13分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时13分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时13分27秒 执行操作】 1100拨打*073取消无应答转移]]>
    </line>
    <line>
      <![CDATA[  【10时13分32秒 执行操作】 1000拨打1100，超时不接，1000被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为HangUp]]>
    </line>
    <line>
      <![CDATA[  【10时14分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时14分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时14分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时14分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时14分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时14分23秒 执行操作】 1100拨打*74启用免打扰]]>
    </line>
    <line>
      <![CDATA[  【10时14分28秒 执行操作】 1000拨打1100，预期无法呼入]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100不会响铃]]>
    </line>
    <line>
      <![CDATA[  【10时14分36秒 执行操作】 1100拨打*074关闭免打扰]]>
    </line>
    <line>
      <![CDATA[  【10时14分41秒 执行操作】 1000拨打1100，预期正常呼入]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃]]>
    </line>
    <line>
      <![CDATA[  【10时14分42秒 执行操作】Answer Call  16  1100]]>
    </line>
    <line>
      <![CDATA[  【10时14分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时15分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时15分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时15分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时15分07秒 执行操作】 1100拨打*70恢复默认值]]>
    </line>
    <line>
      <![CDATA[  【10时15分14秒 执行操作】 1000拨打1105，1105未接，到voicemail]]>
    </line>
    <line>
      <![CDATA[  【10时16分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时16分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时16分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时16分34秒 执行操作】 1000拨打1105，1105接听，1105按*1进行一键录音]]>
    </line>
    <line>
      <![CDATA[  【10时16分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时16分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时17分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时17分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时17分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时17分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时17分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时17分22秒 执行操作】 分机1105登录，查看存在1000留下的语音留言]]>
    </line>
    <line>
      <![CDATA[  【10时17分42秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【10时17分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时17分59秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时18分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时18分17秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时18分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1000(1000)]]>
    </line>
    <line>
      <![CDATA[  【10时18分18秒 执行操作】 分机1105登录，查看存在1键录音]]>
    </line>
    <line>
      <![CDATA[  【10时18分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[    Pass:  正确检测到录音文件]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 10时18分28秒执行完毕：======  Extension  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 10时18分45秒开始执行：======  Disa_PinList  ======]]>
    </line>
    <line>
      <![CDATA[  【10时19分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分26秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时19分29秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【10时19分31秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时19分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时19分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分38秒 执行操作】初始化DISA--删除所有DISA]]>
    </line>
    <line>
      <![CDATA[  【10时19分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【10时19分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【10时19分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【10时19分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时19分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时19分49秒 执行操作】deletes 初始化DISA--删除所有DISA: 0]]>
    </line>
    <line>
      <![CDATA[  【10时19分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时19分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化DISA--删除所有DISA]]>
    </line>
    <line>
      <![CDATA[  【10时19分51秒 执行操作】初始化PIN LIST--删除所有pin码]]>
    </line>
    <line>
      <![CDATA[  【10时19分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【10时19分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【10时19分57秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【10时20分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时20分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时20分02秒 执行操作】deletes 初始化PIN LIST--删除所有pin码: 1]]>
    </line>
    <line>
      <![CDATA[  【10时20分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时20分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【10时20分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时20分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时20分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时20分16秒 执行操作】deleting 初始化PIN LIST--删除所有pin码: 0]]>
    </line>
    <line>
      <![CDATA[  【10时20分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时20分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化PIN LIST--删除所有pin码]]>
    </line>
    <line>
      <![CDATA[  【10时20分18秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【10时20分18秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【10时20分18秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【10时20分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时20分34秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时20分35秒 执行操作】创建PinList：pin1,123-456]]>
    </line>
    <line>
      <![CDATA[  【10时20分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时20分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时20分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('pinset').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时20分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('pinset').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时20分52秒 执行操作】创建DISA1：选择pin1,呼出路由：OutRoute1_sip、OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【10时21分01秒 执行操作】Extjs： Ext.getCmp('st-disa-pintype').setValue('pinset')]]>
    </line>
    <line>
      <![CDATA[  【10时21分04秒 执行操作】Extjs： return  Ext.getCmp('st-disa-pinset').getStore().findRecord('name', "pin1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时21分05秒 执行操作】Extjs： Ext.getCmp('st-disa-pinset').setValue('2')]]>
    </line>
    <line>
      <![CDATA[  【10时21分09秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时21分10秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute3_sps", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时21分11秒 执行操作】Extjs： Ext.getCmp('st-disa-allowrouter').setValue('37,39')]]>
    </line>
    <line>
      <![CDATA[  【10时21分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时21分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时21分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时21分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时21分28秒 执行操作】编辑呼入路由InRoute1，呼入目的地到DISA1]]>
    </line>
    <line>
      <![CDATA[  【10时21分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时21分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时21分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时21分42秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【10时21分43秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('d')]]>
    </line>
    <line>
      <![CDATA[  【10时21分47秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时21分48秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【10时22分07秒 执行操作】2001拨打991100通过sps外线呼入到DISA1，输入pin码123#，二次拨号：13001#，预期3001响铃并接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Talking 【预期：3 实际：-1】.jpg" target="_blank">Error: 预期3001会Talking 【预期：3 实际：-1】</a>]]>
    </line>
    <line>
      <![CDATA[  【10时22分57秒 执行操作】编辑DISA1，Password：选择Single Pin--789，ResponseTimeout：15，DightTimeout：10]]>
    </line>
    <line>
      <![CDATA[  【10时23分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时23分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时23分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时23分13秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时23分16秒 执行操作】Extjs： Ext.getCmp('st-disa-pintype').setValue('singlepin')]]>
    </line>
    <line>
      <![CDATA[  【10时23分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时23分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时23分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时23分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时23分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时23分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时23分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时23分37秒 执行操作】3001拨打3000通过sip外线呼入到DISA1，输入pin码：789#，二次拨号13002#，预期3002响铃并接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3002会Talking 【预期：3 实际：-1】.jpg" target="_blank">Error: 预期3002会Talking 【预期：3 实际：-1】</a>]]>
    </line>
    <line>
      <![CDATA[  【10时24分32秒 执行操作】3001拨打3000通过sip外线呼入到DISA1,输入完pin码789#后，不输人数字等待15s后通话被挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\外线呼出进入pin1List 【预期：true 实际：false】.jpg" target="_blank">Error: 外线呼出进入pin1List 【预期：true 实际：false】</a>]]>
    </line>
    <line>
      <![CDATA[  【10时25分45秒 执行操作】--删除DISA--]]>
    </line>
    <line>
      <![CDATA[  【10时25分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【10时25分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分25秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时26分26秒 执行操作】Extjs： Ext.getCmp('st-disa-allowrouter').setValue('37')]]>
    </line>
    <line>
      <![CDATA[  【10时26分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分30秒 执行操作】批量删除DISA]]>
    </line>
    <line>
      <![CDATA[  【10时26分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【10时26分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【10时26分36秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【10时26分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时26分41秒 执行操作】deletes 批量删除DISA: 1]]>
    </line>
    <line>
      <![CDATA[  【10时26分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时26分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【10时26分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时26分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时27分26秒 执行操作】deleting 批量删除DISA: 0]]>
    </line>
    <line>
      <![CDATA[  【10时27分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时27分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量删除DISA]]>
    </line>
    <line>
      <![CDATA[  【10时27分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分32秒 执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【10时27分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时27分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时27分41秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时27分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时27分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【10时27分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时27分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 10时28分12秒执行完毕：======  Disa_PinList  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 10时28分30秒开始执行：======  EmergencyNumber  ======]]>
    </line>
    <line>
      <![CDATA[  【10时28分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分09秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时29分12秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【10时29分14秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时29分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时29分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分20秒 执行操作】初始化EmergencyNumber：删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[  【10时29分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【10时29分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【10时29分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【10时29分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时29分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时29分31秒 执行操作】deletes 初始化EmergencyNumber：删除所有紧急号码: 0]]>
    </line>
    <line>
      <![CDATA[  【10时29分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时29分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化EmergencyNumber：删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[  【10时29分33秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【10时29分33秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【10时29分33秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【10时29分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时29分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时29分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时29分59秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时29分59秒 执行操作】新增紧急号码：2001，Trunk：sps外线，Notification：分机1100]]>
    </line>
    <line>
      <![CDATA[  【10时30分03秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时30分04秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('37')]]>
    </line>
    <line>
      <![CDATA[  【10时30分05秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时30分06秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('61')]]>
    </line>
    <line>
      <![CDATA[  【10时30分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时30分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时30分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时30分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时30分27秒 执行操作】1101拨打32000通过SPS外线呼出，并保持通话]]>
    </line>
    <line>
      <![CDATA[  【10时30分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时30分40秒 执行操作】1102拨打紧急号码2001，预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[  【10时30分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时30分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时30分46秒 执行操作】Answer Call  3  1100]]>
    </line>
    <line>
      <![CDATA[  【10时30分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Talking]]>
    </line>
    <line>
      <![CDATA[  【10时30分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时30分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时31分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时31分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时31分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时31分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时31分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时31分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时31分44秒 执行操作】编辑紧急号码：trunk prepend为123]]>
    </line>
    <line>
      <![CDATA[  【10时31分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【10时31分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时32分06秒 执行操作】1101拨打32000通过SPS外线呼出，并保持通话]]>
    </line>
    <line>
      <![CDATA[  【10时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时32分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时32分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时32分24秒 执行操作】1102拨打紧急号码2001，预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[  【10时32分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时32分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时32分29秒 执行操作】Answer Call  8  1100]]>
    </line>
    <line>
      <![CDATA[  【10时32分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Talking,送出去的号码为]]>
    </line>
    <line>
      <![CDATA[  【10时32分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时32分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时32分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时32分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时32分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时32分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时32分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时32分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【10时32分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【10时32分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时33分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时33分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时33分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时33分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时33分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【10时33分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【10时33分29秒 执行操作】删除紧急号码]]>
    </line>
    <line>
      <![CDATA[  【10时33分33秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【10时33分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【10时33分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【10时33分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时33分40秒 执行操作】deletes 删除紧急号码: 1]]>
    </line>
    <line>
      <![CDATA[  【10时33分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时33分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【10时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时33分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时34分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时34分24秒 执行操作】deleting 删除紧急号码: 0]]>
    </line>
    <line>
      <![CDATA[  【10时34分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时34分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除紧急号码]]>
    </line>
    <line>
      <![CDATA[  【10时34分40秒 执行操作】1102拨打紧急号码2001，预期1100为挂断状态]]>
    </line>
    <line>
      <![CDATA[  【10时34分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时34分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时34分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时34分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【10时34分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp]]>
    </line>
    <line>
      <![CDATA[  【10时35分06秒 执行操作】---批量删除紧急号码---]]>
    </line>
    <line>
      <![CDATA[  【10时35分12秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时35分13秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('37')]]>
    </line>
    <line>
      <![CDATA[  【10时35分14秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时35分15秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('61')]]>
    </line>
    <line>
      <![CDATA[  【10时35分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时35分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时35分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时35分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时35分26秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时35分27秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【10时35分28秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【10时35分29秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('63')]]>
    </line>
    <line>
      <![CDATA[  【10时35分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【10时35分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【10时35分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时35分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时35分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【10时35分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年11月02日 10时36分01秒执行完毕：======  EmergencyNumber  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年11月02日 10时36分18秒开始执行：======  Blacklist_Whitelist  =======]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="5305625" started-at="2018-11-02T01:08:21Z" finished-at="2018-11-02T02:36:47Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="5305625" started-at="2018-11-02T01:08:21Z" finished-at="2018-11-02T02:36:47Z">
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="BeforeClass" is-config="true" duration-ms="47026" started-at="2018-11-02T09:44:09Z" finished-at="2018-11-02T09:44:56Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 09时44分09秒开始执行：======  AutoCLIP  =======]]>
            </line>
            <line>
              <![CDATA[  【09时44分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时44分49秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时44分52秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【09时44分54秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时44分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_init()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="A0_init" duration-ms="14146" started-at="2018-11-02T09:44:56Z" finished-at="2018-11-02T09:45:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时44分56秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【09时44分56秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【09时44分56秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【09时45分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时45分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-11-02T09:45:10Z" finished-at="2018-11-02T09:45:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_clip_default()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="A1_clip_default" duration-ms="38079" started-at="2018-11-02T09:45:11Z" finished-at="2018-11-02T09:45:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时45分11秒 执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
            </line>
            <line>
              <![CDATA[  【09时45分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时45分19秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时45分20秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时45分21秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时45分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时45分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【09时45分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时45分35秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时45分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_clip_default -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-11-02T09:45:49Z" finished-at="2018-11-02T09:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A2_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="A2_makeCall" duration-ms="59810" started-at="2018-11-02T09:45:49Z" finished-at="2018-11-02T09:46:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP.A2_makeCall(AutoCLIP.java:93)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时45分49秒 执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时45分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时45分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时45分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时45分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时46分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时46分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时46分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时46分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时46分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【09时46分24秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时46分25秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[  【09时46分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时46分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="2114" started-at="2018-11-02T09:46:48Z" finished-at="2018-11-02T09:46:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时46分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A3_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="A3_makeCall" duration-ms="40642" started-at="2018-11-02T09:46:51Z" finished-at="2018-11-02T09:47:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP.A3_makeCall(AutoCLIP.java:118)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时46分51秒 执行操作】 删除AutoCLIP List的所有记录]]>
            </line>
            <line>
              <![CDATA[  【09时46分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时46分59秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【09时47分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时47分04秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时47分07秒 执行操作】 删除AutoCLIP List后，3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[  【09时47分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时47分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="2128" started-at="2018-11-02T09:47:31Z" finished-at="2018-11-02T09:47:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时47分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B_deleteUsedRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="B_deleteUsedRecords" duration-ms="73204" started-at="2018-11-02T09:47:33Z" finished-at="2018-11-02T09:48:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP.B_deleteUsedRecords(AutoCLIP.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时47分33秒 执行操作】 ----启用Delete Used Records----]]>
            </line>
            <line>
              <![CDATA[  【09时47分35秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时47分36秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时47分37秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时47分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时47分47秒 执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时47分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时47分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时47分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时48分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时48分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时48分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时48分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时48分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【09时48分23秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时48分23秒 执行操作】 3001拨打3000通过sip外线第1次呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[  【09时48分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时48分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_deleteUsedRecords -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="2086" started-at="2018-11-02T09:48:47Z" finished-at="2018-11-02T09:48:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时48分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_OnlyKeepMissedCallRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="C_OnlyKeepMissedCallRecords" duration-ms="64331" started-at="2018-11-02T09:48:49Z" finished-at="2018-11-02T09:49:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时48分49秒 执行操作】 ----启用Only Keep Missed Call Records----]]>
            </line>
            <line>
              <![CDATA[  【09时48分50秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时48分51秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时48分52秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时48分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时49分02秒 执行操作】 1101拨打13001通过sip外线呼出，被叫接听--预期不会生成cliplist]]>
            </line>
            <line>
              <![CDATA[  【09时49分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时49分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时49分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时49分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时49分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时49分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('cliplist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Error: 被叫接听，检查AutoCLIP List生成了记录]]>
            </line>
            <line>
              <![CDATA[  【09时49分34秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时49分35秒 执行操作】 1101拨打13001通过sip外线呼出，被叫未接--预期生成cliplist]]>
            </line>
            <line>
              <![CDATA[  【09时49分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('cliplist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  被叫未接，检查AutoCLIP List生成记录]]>
            </line>
            <line>
              <![CDATA[  【09时49分53秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_OnlyKeepMissedCallRecords -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-11-02T09:49:53Z" finished-at="2018-11-02T09:49:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D_MatchOutgoingTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="D_MatchOutgoingTrunk" duration-ms="73353" started-at="2018-11-02T09:49:53Z" finished-at="2018-11-02T09:51:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP.D_MatchOutgoingTrunk(AutoCLIP.java:234)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时49分53秒 执行操作】 ----启用Match Outgoing Trunk----]]>
            </line>
            <line>
              <![CDATA[  【09时49分54秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时49分55秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时49分57秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时49分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时50分07秒 执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时50分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时50分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时50分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时50分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时50分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时50分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时50分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时50分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[  【09时50分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('cliplist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【09时50分42秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时50分42秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[  【09时51分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时51分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_MatchOutgoingTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="2220" started-at="2018-11-02T09:51:06Z" finished-at="2018-11-02T09:51:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时51分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E_Disable_AutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="E_Disable_AutoCLIP" duration-ms="80257" started-at="2018-11-02T09:51:09Z" finished-at="2018-11-02T09:52:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP.E_Disable_AutoCLIP(AutoCLIP.java:279)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时51分09秒 执行操作】 ----不启用AutoCLIP----]]>
            </line>
            <line>
              <![CDATA[  【09时51分10秒 执行操作】Extjs： Ext.getCmp('st-clip-useonce').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时51分11秒 执行操作】Extjs： Ext.getCmp('st-clip-onlynoanswer').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时51分12秒 执行操作】Extjs： Ext.getCmp('st-clip-checkport').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时51分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时51分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('cliplist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【09时51分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('cliplist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时51分26秒 执行操作】Extjs： Ext.get(Ext.getCmp('control-panel').down('cliplist').down('tool').id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时51分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时51分40秒 执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时51分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时51分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时51分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时51分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时51分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时52分05秒 执行操作】 3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[  【09时52分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时52分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Disable_AutoCLIP -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterMethod" is-config="true" duration-ms="2078" started-at="2018-11-02T09:52:29Z" finished-at="2018-11-02T09:52:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时52分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP@11cdd8a]" name="AfterClass" is-config="true" duration-ms="21985" started-at="2018-11-02T09:52:31Z" finished-at="2018-11-02T09:52:53Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 09时52分36秒执行完毕：======   AutoCLIP   ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.AutoCLIP -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="BeforeClass" is-config="true" duration-ms="46151" started-at="2018-11-02T09:52:53Z" finished-at="2018-11-02T09:53:39Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 09时52分53秒开始执行：======  Conference  ======]]>
            </line>
            <line>
              <![CDATA[  【09时53分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时53分31秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时53分35秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【09时53分36秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时53分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="AA0_Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AA0_Register" duration-ms="22057" started-at="2018-11-02T09:53:39Z" finished-at="2018-11-02T09:54:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时53分39秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【09时53分39秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【09时53分39秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【09时53分39秒 执行操作】 被测设备注册分机1000、1100、1105，辅助1：分机3001，辅助2：分机2001]]>
            </line>
            <line>
              <![CDATA[  【09时53分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时53分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时53分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- AA0_Register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-11-02T09:54:01Z" finished-at="2018-11-02T09:54:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AA1_InitConference()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AA1_InitConference" duration-ms="51301" started-at="2018-11-02T09:54:01Z" finished-at="2018-11-02T09:54:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时54分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分06秒 执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【09时54分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【09时54分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【09时54分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时54分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时54分17秒 执行操作】deletes  删除所有Conference: 1]]>
            </line>
            <line>
              <![CDATA[  【09时54分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时54分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【09时54分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时54分31秒 执行操作】deleting  删除所有Conference: 0]]>
            </line>
            <line>
              <![CDATA[  【09时54分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时54分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【09时54分41秒 执行操作】 添加Conference1:6400]]>
            </line>
            <line>
              <![CDATA[  【09时54分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时54分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- AA1_InitConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-11-02T09:54:52Z" finished-at="2018-11-02T09:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_add_conference1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="A_add_conference1" duration-ms="12262" started-at="2018-11-02T09:54:52Z" finished-at="2018-11-02T09:55:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时54分52秒 执行操作】 新建Conference6401，默认设置]]>
            </line>
            <line>
              <![CDATA[  【09时54分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时54分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时55分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_conference1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-11-02T09:55:05Z" finished-at="2018-11-02T09:55:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_add_conference2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="A_add_conference2" duration-ms="13661" started-at="2018-11-02T09:55:05Z" finished-at="2018-11-02T09:55:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时55分05秒 执行操作】 新建Conference6402，与会者密码123，启用等候管理员，提示音：分机号码，Allow Participant to Invite：不启用，管理员密码：456，管理员：1000、1100]]>
            </line>
            <line>
              <![CDATA[  【09时55分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分10秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时55分11秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('exten')]]>
            </line>
            <line>
              <![CDATA[  【09时55分12秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时55分13秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时55分14秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时55分15秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('60,61')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_conference2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-11-02T09:55:18Z" finished-at="2018-11-02T09:55:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_editInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="B_editInRoute1" duration-ms="34415" started-at="2018-11-02T09:55:18Z" finished-at="2018-11-02T09:55:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时55分18秒 执行操作】 编辑呼入路由InRoute1到Conference6402]]>
            </line>
            <line>
              <![CDATA[  【09时55分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时55分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时55分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时55分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时55分38秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【09时55分40秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference6402", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时55分41秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('8')]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editInRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-11-02T09:55:53Z" finished-at="2018-11-02T09:55:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_CallIn1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="C_CallIn1" duration-ms="12941" started-at="2018-11-02T09:55:53Z" finished-at="2018-11-02T09:56:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时55分53秒 执行操作】 1000拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[  【09时56分01秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时56分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有1个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-11-02T09:56:06Z" finished-at="2018-11-02T09:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_CallIn2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="C_CallIn2" duration-ms="12406" started-at="2018-11-02T09:56:06Z" finished-at="2018-11-02T09:56:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时56分06秒 执行操作】 1100拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[  【09时56分14秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时56分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有2个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-11-02T09:56:18Z" finished-at="2018-11-02T09:56:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_CallIn3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="C_CallIn3" duration-ms="12566" started-at="2018-11-02T09:56:18Z" finished-at="2018-11-02T09:56:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时56分18秒 执行操作】 1105拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[  【09时56分26秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时56分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有3个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-11-02T09:56:31Z" finished-at="2018-11-02T09:56:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_CallIn4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="C_CallIn4" duration-ms="13471" started-at="2018-11-02T09:56:31Z" finished-at="2018-11-02T09:56:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时56分31秒 执行操作】 1000退出会议室6401]]>
            </line>
            <line>
              <![CDATA[  【09时56分40秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时56分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有2个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-11-02T09:56:44Z" finished-at="2018-11-02T09:56:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_CallIn5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="C_CallIn5" duration-ms="27120" started-at="2018-11-02T09:56:44Z" finished-at="2018-11-02T09:57:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时56分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[  【09时57分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时57分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时57分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时57分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时57分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时57分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="103" started-at="2018-11-02T09:57:12Z" finished-at="2018-11-02T09:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D_callin1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="D_callin1" duration-ms="18821" started-at="2018-11-02T09:57:12Z" finished-at="2018-11-02T09:57:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期会议室6402有1个成员 【预期：1 实际：0】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期会议室6402有1个成员 【预期：1 实际：0】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference.D_callin1(Conference.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时57分12秒 执行操作】 3001拨打3000通过sip外线呼入6402，输入与会密码123]]>
            </line>
            <line>
              <![CDATA[  【09时57分24秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时57分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期会议室6402有1个成员 【预期：1 实际：0】.jpg" target="_blank">Error: 预期会议室6402有1个成员 【预期：1 实际：0】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-11-02T09:57:30Z" finished-at="2018-11-02T09:57:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_callin2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="D_callin2" duration-ms="24172" started-at="2018-11-02T09:57:30Z" finished-at="2018-11-02T09:57:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时57分30秒 执行操作】 2001拨打99999通过sps外线呼入6402，输入管理员密码456]]>
            </line>
            <line>
              <![CDATA[  【09时57分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时57分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时57分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有1个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-11-02T09:57:55Z" finished-at="2018-11-02T09:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_callin3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="D_callin3" duration-ms="12962" started-at="2018-11-02T09:57:55Z" finished-at="2018-11-02T09:58:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时57分57秒 执行操作】 1000拨打6402呼入6402，无需密码]]>
            </line>
            <line>
              <![CDATA[  【09时58分02秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时58分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有2个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-11-02T09:58:08Z" finished-at="2018-11-02T09:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_callin4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="D_callin4" duration-ms="35021" started-at="2018-11-02T09:58:08Z" finished-at="2018-11-02T09:58:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时58分08秒 执行操作】 1105拨打6402呼入6402，输入与会者密码123]]>
            </line>
            <line>
              <![CDATA[  【09时58分20秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时58分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有3个成员]]>
            </line>
            <line>
              <![CDATA[  【09时58分26秒 执行操作】 1105按#1100，邀请1100加入会议，预期：邀请失败]]>
            </line>
            <line>
              <![CDATA[  【09时58分37秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时58分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有3个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-11-02T09:58:43Z" finished-at="2018-11-02T09:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_callin5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="D_callin5" duration-ms="29026" started-at="2018-11-02T09:58:43Z" finished-at="2018-11-02T09:59:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时58分43秒 执行操作】 挂断所有通话,所有成员退出会议室6402]]>
            </line>
            <line>
              <![CDATA[  【09时58分48秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时58分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时58分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[2].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有0个成员]]>
            </line>
            <line>
              <![CDATA[  【09时59分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时59分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-11-02T09:59:12Z" finished-at="2018-11-02T09:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E_invite()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="E_invite" duration-ms="26475" started-at="2018-11-02T09:59:12Z" finished-at="2018-11-02T09:59:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预计产生多条CDR，但没有找到匹配]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预计产生多条CDR，但没有找到匹配
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:348)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference.E_invite(Conference.java:228)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时59分12秒 执行操作】 1105呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[  【09时59分17秒 执行操作】 1105按#...1100邀请分机1100加入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[  【09时59分24秒 执行操作】Answer Call  8  1100]]>
            </line>
            <line>
              <![CDATA[  【09时59分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时59分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时59分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_invite -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="2119" started-at="2018-11-02T09:59:38Z" finished-at="2018-11-02T09:59:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时59分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="F_delete" duration-ms="49578" started-at="2018-11-02T09:59:40Z" finished-at="2018-11-02T10:00:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时59分42秒 执行操作】 表格删除：Conference6401-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时59分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时59分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时59分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时59分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时59分53秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时59分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6401-取消删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分00秒 执行操作】 表格删除：Conference6401-确定删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分06秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【10时00分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6401-确定删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分13秒 执行操作】 删除：Conference6402-取消删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时00分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时00分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时00分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时00分19秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时00分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Conference6402-取消删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分25秒 执行操作】 删除：Conference6402-确定删除]]>
            </line>
            <line>
              <![CDATA[  【10时00分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Conference6402-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-11-02T10:00:30Z" finished-at="2018-11-02T10:00:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="G_recovery" duration-ms="32189" started-at="2018-11-02T10:00:30Z" finished-at="2018-11-02T10:01:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时00分30秒 执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【10时00分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时00分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时00分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时00分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时00分48秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【10时00分49秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时00分50秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-11-02T10:01:02Z" finished-at="2018-11-02T10:01:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference@144fc21]" name="AfterClass" is-config="true" duration-ms="24927" started-at="2018-11-02T10:01:02Z" finished-at="2018-11-02T10:01:27Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 10时01分09秒执行完毕：======  Conference  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Conference -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber">
        <test-method status="PASS" signature="A_Login()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="A_Login" is-config="true" duration-ms="46162" started-at="2018-11-02T10:28:30Z" finished-at="2018-11-02T10:29:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 10时28分30秒开始执行：======  EmergencyNumber  ======]]>
            </line>
            <line>
              <![CDATA[  【10时28分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分09秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时29分12秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【10时29分14秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时29分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_Login -->
        <test-method status="PASS" signature="C_InitEmergencyNumberTest()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="C_InitEmergencyNumberTest" is-config="true" duration-ms="16418" started-at="2018-11-02T10:29:16Z" finished-at="2018-11-02T10:29:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时29分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分20秒 执行操作】初始化EmergencyNumber：删除所有紧急号码]]>
            </line>
            <line>
              <![CDATA[  【10时29分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【10时29分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【10时29分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【10时29分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时29分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时29分31秒 执行操作】deletes 初始化EmergencyNumber：删除所有紧急号码: 0]]>
            </line>
            <line>
              <![CDATA[  【10时29分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时29分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化EmergencyNumber：删除所有紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_InitEmergencyNumberTest -->
        <test-method status="PASS" signature="A0_Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="A0_Register" duration-ms="26358" started-at="2018-11-02T10:29:33Z" finished-at="2018-11-02T10:29:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时29分33秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【10时29分33秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【10时29分33秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【10时29分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时29分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时29分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时29分59秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_Register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-11-02T10:29:59Z" finished-at="2018-11-02T10:29:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_EmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="A1_EmergencyNumber" duration-ms="27785" started-at="2018-11-02T10:29:59Z" finished-at="2018-11-02T10:30:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时29分59秒 执行操作】新增紧急号码：2001，Trunk：sps外线，Notification：分机1100]]>
            </line>
            <line>
              <![CDATA[  【10时30分03秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时30分04秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('37')]]>
            </line>
            <line>
              <![CDATA[  【10时30分05秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时30分06秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('61')]]>
            </line>
            <line>
              <![CDATA[  【10时30分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时30分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时30分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时30分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_EmergencyNumber -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-11-02T10:30:27Z" finished-at="2018-11-02T10:30:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_EmergencyNumber_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="A2_EmergencyNumber_call" duration-ms="77298" started-at="2018-11-02T10:30:27Z" finished-at="2018-11-02T10:31:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时30分27秒 执行操作】1101拨打32000通过SPS外线呼出，并保持通话]]>
            </line>
            <line>
              <![CDATA[  【10时30分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时30分40秒 执行操作】1102拨打紧急号码2001，预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[  【10时30分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时30分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时30分46秒 执行操作】Answer Call  3  1100]]>
            </line>
            <line>
              <![CDATA[  【10时30分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Talking]]>
            </line>
            <line>
              <![CDATA[  【10时30分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时30分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时31分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时31分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时31分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时31分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时31分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时31分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_EmergencyNumber_call -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-11-02T10:31:44Z" finished-at="2018-11-02T10:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_EditEmergencyNumber_prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="B1_EditEmergencyNumber_prepend" duration-ms="21459" started-at="2018-11-02T10:31:44Z" finished-at="2018-11-02T10:32:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时31分44秒 执行操作】编辑紧急号码：trunk prepend为123]]>
            </line>
            <line>
              <![CDATA[  【10时31分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时31分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_EditEmergencyNumber_prepend -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="53" started-at="2018-11-02T10:32:06Z" finished-at="2018-11-02T10:32:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_EditEmergencyNumber_prepend_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="B2_EditEmergencyNumber_prepend_call" duration-ms="82337" started-at="2018-11-02T10:32:06Z" finished-at="2018-11-02T10:33:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时32分06秒 执行操作】1101拨打32000通过SPS外线呼出，并保持通话]]>
            </line>
            <line>
              <![CDATA[  【10时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时32分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时32分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时32分24秒 执行操作】1102拨打紧急号码2001，预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[  【10时32分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时32分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时32分29秒 执行操作】Answer Call  8  1100]]>
            </line>
            <line>
              <![CDATA[  【10时32分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Talking,送出去的号码为]]>
            </line>
            <line>
              <![CDATA[  【10时32分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时32分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时32分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时32分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时32分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时32分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时32分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时32分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【10时32分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时32分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时33分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时33分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时33分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时33分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时33分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时33分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_EditEmergencyNumber_prepend_call -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-11-02T10:33:28Z" finished-at="2018-11-02T10:33:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_DeleteEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="C1_DeleteEmergencyNumber" duration-ms="71338" started-at="2018-11-02T10:33:28Z" finished-at="2018-11-02T10:34:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时33分29秒 执行操作】删除紧急号码]]>
            </line>
            <line>
              <![CDATA[  【10时33分33秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【10时33分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【10时33分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【10时33分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时33分40秒 执行操作】deletes 删除紧急号码: 1]]>
            </line>
            <line>
              <![CDATA[  【10时33分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时33分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【10时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时33分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时34分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时34分24秒 执行操作】deleting 删除紧急号码: 0]]>
            </line>
            <line>
              <![CDATA[  【10时34分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时34分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_DeleteEmergencyNumber -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-11-02T10:34:40Z" finished-at="2018-11-02T10:34:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_Delete_Call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="C2_Delete_Call" duration-ms="26175" started-at="2018-11-02T10:34:40Z" finished-at="2018-11-02T10:35:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时34分40秒 执行操作】1102拨打紧急号码2001，预期1100为挂断状态]]>
            </line>
            <line>
              <![CDATA[  【10时34分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时34分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时34分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时34分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时34分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_Delete_Call -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-11-02T10:35:06Z" finished-at="2018-11-02T10:35:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_BlukDelete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="D_BlukDelete" duration-ms="50121" started-at="2018-11-02T10:35:06Z" finished-at="2018-11-02T10:35:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时35分06秒 执行操作】---批量删除紧急号码---]]>
            </line>
            <line>
              <![CDATA[  【10时35分12秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时35分13秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('37')]]>
            </line>
            <line>
              <![CDATA[  【10时35分14秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时35分15秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('61')]]>
            </line>
            <line>
              <![CDATA[  【10时35分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时35分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时35分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时35分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时35分26秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时35分27秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【10时35分28秒 执行操作】Extjs： return  Ext.getCmp('admin0').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时35分29秒 执行操作】Extjs： Ext.getCmp('admin0').setValue('63')]]>
            </line>
            <line>
              <![CDATA[  【10时35分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时35分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时35分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时35分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时35分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('emergencylist').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时35分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_BlukDelete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-11-02T10:35:56Z" finished-at="2018-11-02T10:35:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber@7dc304]" name="AfterClass" is-config="true" duration-ms="22078" started-at="2018-11-02T10:35:56Z" finished-at="2018-11-02T10:36:18Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 10时36分01秒执行完毕：======  EmergencyNumber  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.EmergencyNumber -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="BeforeClass" is-config="true" duration-ms="51242" started-at="2018-11-02T09:37:49Z" finished-at="2018-11-02T09:38:40Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 09时37分49秒开始执行：======  OutboundRestriction  ======]]>
            </line>
            <line>
              <![CDATA[  【09时38分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时38分32秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时38分36秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【09时38分38秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时38分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_init()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="A0_init" duration-ms="20410" started-at="2018-11-02T09:38:40Z" finished-at="2018-11-02T09:39:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时38分40秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【09时38分40秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【09时38分40秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【09时38分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时38分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-11-02T09:39:01Z" finished-at="2018-11-02T09:39:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A1_add_1_all()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="A1_add_1_all" duration-ms="69999" started-at="2018-11-02T09:39:01Z" finished-at="2018-11-02T09:40:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期第1通电话1100呼出成功 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期第1通电话1100呼出成功 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction.A1_add_1_all(OutboundRestriction.java:74)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时39分01秒 执行操作】  删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【09时39分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【09时39分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【09时39分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时39分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时39分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时39分12秒 执行操作】deletes   删除所有Outbound Restriction: 1]]>
            </line>
            <line>
              <![CDATA[  【09时39分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时39分16秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【09时39分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时39分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时39分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时39分26秒 执行操作】deleting   删除所有Outbound Restriction: 0]]>
            </line>
            <line>
              <![CDATA[  【09时39分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时39分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【09时39分28秒 执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
            </line>
            <line>
              <![CDATA[  【09时39分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时39分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期第1通电话1100呼出成功 【预期：3 实际：4】.jpg" target="_blank">Error: 预期第1通电话1100呼出成功 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_add_1_all -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-11-02T09:40:11Z" finished-at="2018-11-02T09:40:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_add_2_cancel()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="A_add_2_cancel" duration-ms="27640" started-at="2018-11-02T09:40:11Z" finished-at="2018-11-02T09:40:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期分机1100状态被限制]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期分机1100状态被限制
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction.A_add_2_cancel(OutboundRestriction.java:99)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时40分11秒 执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[  【09时40分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('extension').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时40分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时40分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时40分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期分机1100状态被限制.jpg" target="_blank">Error: 预期分机1100状态被限制</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_2_cancel -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-11-02T09:40:38Z" finished-at="2018-11-02T09:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_add_3_cancelCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="A_add_3_cancelCall" duration-ms="23325" started-at="2018-11-02T09:40:38Z" finished-at="2018-11-02T09:41:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction.A_add_3_cancelCall(OutboundRestriction.java:110)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时40分38秒 执行操作】 分机1100取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[  【09时40分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时41分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_3_cancelCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="2111" started-at="2018-11-02T09:41:02Z" finished-at="2018-11-02T09:41:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时41分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B_add_1_exten1102()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="B_add_1_exten1102" duration-ms="42293" started-at="2018-11-02T09:41:04Z" finished-at="2018-11-02T09:41:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期第1通电话1102呼出成功 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期第1通电话1102呼出成功 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction.B_add_1_exten1102(OutboundRestriction.java:146)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时41分04秒 执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
            </line>
            <line>
              <![CDATA[  【09时41分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时41分09秒 执行操作】Extjs： return  Ext.getCmp('st-constraint-exteninfo').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时41分10秒 执行操作】Extjs： Ext.getCmp('st-constraint-exteninfo').setValue('63')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期第1通电话1102呼出成功 【预期：3 实际：4】.jpg" target="_blank">Error: 预期第1通电话1102呼出成功 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_1_exten1102 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-11-02T09:41:46Z" finished-at="2018-11-02T09:41:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_add_2_exten1102_cancel()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="B_add_2_exten1102_cancel" duration-ms="38607" started-at="2018-11-02T09:41:46Z" finished-at="2018-11-02T09:42:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时41分46秒 执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[  【09时41分47秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时41分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('extension').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时41分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时41分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时42分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[2].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时42分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[3].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时42分09秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('extension').id + ' [data-recordindex]')[3].id + ' tr td img')[0].click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_2_exten1102_cancel -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-11-02T09:42:25Z" finished-at="2018-11-02T09:42:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B_add_3_exten1102_cancelCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="B_add_3_exten1102_cancelCall" duration-ms="21703" started-at="2018-11-02T09:42:25Z" finished-at="2018-11-02T09:42:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1102为Talking状态 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1102为Talking状态 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction.B_add_3_exten1102_cancelCall(OutboundRestriction.java:179)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时42分25秒 执行操作】 分机1102取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1102为Talking状态 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_3_exten1102_cancelCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-11-02T09:42:46Z" finished-at="2018-11-02T09:42:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="C_delete" duration-ms="60955" started-at="2018-11-02T09:42:46Z" finished-at="2018-11-02T09:43:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时42分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').plugins[0].setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【09时42分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.setPageSize(25)]]>
            </line>
            <line>
              <![CDATA[  【09时42分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('constraint').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时42分54秒 执行操作】 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时42分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时42分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时42分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时43分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时43分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时43分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分11秒 执行操作】 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时43分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时43分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分24秒 执行操作】 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时43分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时43分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时43分29秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('constraint').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时43分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时43分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分34秒 执行操作】 删除：OutRestriction2-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时43分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('constraint').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时43分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('constraint').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterMethod" is-config="true" duration-ms="50" started-at="2018-11-02T09:43:47Z" finished-at="2018-11-02T09:43:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction@1f13d6e]" name="AfterClass" is-config="true" duration-ms="21950" started-at="2018-11-02T09:43:47Z" finished-at="2018-11-02T09:44:09Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 09时43分52秒执行完毕：======  OutboundRestriction  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.OutboundRestriction -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList">
        <test-method status="PASS" signature="A_Login()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="A_Login" is-config="true" duration-ms="48245" started-at="2018-11-02T10:18:45Z" finished-at="2018-11-02T10:19:33Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 10时18分45秒开始执行：======  Disa_PinList  ======]]>
            </line>
            <line>
              <![CDATA[  【10时19分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分26秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时19分29秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【10时19分31秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时19分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_Login -->
        <test-method status="PASS" signature="C_InitDisa_PinList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="C_InitDisa_PinList" is-config="true" duration-ms="44725" started-at="2018-11-02T10:19:33Z" finished-at="2018-11-02T10:20:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时19分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分38秒 执行操作】初始化DISA--删除所有DISA]]>
            </line>
            <line>
              <![CDATA[  【10时19分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【10时19分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【10时19分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【10时19分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时19分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时19分49秒 执行操作】deletes 初始化DISA--删除所有DISA: 0]]>
            </line>
            <line>
              <![CDATA[  【10时19分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时19分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化DISA--删除所有DISA]]>
            </line>
            <line>
              <![CDATA[  【10时19分51秒 执行操作】初始化PIN LIST--删除所有pin码]]>
            </line>
            <line>
              <![CDATA[  【10时19分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【10时19分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【10时19分57秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【10时20分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时20分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时20分02秒 执行操作】deletes 初始化PIN LIST--删除所有pin码: 1]]>
            </line>
            <line>
              <![CDATA[  【10时20分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时20分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('pinset').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【10时20分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时20分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时20分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时20分16秒 执行操作】deleting 初始化PIN LIST--删除所有pin码: 0]]>
            </line>
            <line>
              <![CDATA[  【10时20分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时20分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化PIN LIST--删除所有pin码]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_InitDisa_PinList -->
        <test-method status="PASS" signature="A0_register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="A0_register" duration-ms="16567" started-at="2018-11-02T10:20:18Z" finished-at="2018-11-02T10:20:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时20分18秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【10时20分18秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【10时20分18秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【10时20分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时20分34秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-11-02T10:20:35Z" finished-at="2018-11-02T10:20:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_CreatePin()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="A1_CreatePin" duration-ms="16907" started-at="2018-11-02T10:20:35Z" finished-at="2018-11-02T10:20:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时20分35秒 执行操作】创建PinList：pin1,123-456]]>
            </line>
            <line>
              <![CDATA[  【10时20分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('pinset').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时20分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('pinset').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时20分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('pinset').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时20分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('pinset').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_CreatePin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-11-02T10:20:52Z" finished-at="2018-11-02T10:20:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_CreateDisa()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="B1_CreateDisa" duration-ms="36249" started-at="2018-11-02T10:20:52Z" finished-at="2018-11-02T10:21:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时20分52秒 执行操作】创建DISA1：选择pin1,呼出路由：OutRoute1_sip、OutRoute3_sps]]>
            </line>
            <line>
              <![CDATA[  【10时21分01秒 执行操作】Extjs： Ext.getCmp('st-disa-pintype').setValue('pinset')]]>
            </line>
            <line>
              <![CDATA[  【10时21分04秒 执行操作】Extjs： return  Ext.getCmp('st-disa-pinset').getStore().findRecord('name', "pin1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时21分05秒 执行操作】Extjs： Ext.getCmp('st-disa-pinset').setValue('2')]]>
            </line>
            <line>
              <![CDATA[  【10时21分09秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时21分10秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute3_sps", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时21分11秒 执行操作】Extjs： Ext.getCmp('st-disa-allowrouter').setValue('37,39')]]>
            </line>
            <line>
              <![CDATA[  【10时21分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时21分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时21分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时21分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_CreateDisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-11-02T10:21:28Z" finished-at="2018-11-02T10:21:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_EditInroute()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="B2_EditInroute" duration-ms="38835" started-at="2018-11-02T10:21:28Z" finished-at="2018-11-02T10:22:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时21分28秒 执行操作】编辑呼入路由InRoute1，呼入目的地到DISA1]]>
            </line>
            <line>
              <![CDATA[  【10时21分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时21分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时21分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时21分42秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【10时21分43秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('d')]]>
            </line>
            <line>
              <![CDATA[  【10时21分47秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时21分48秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('3')]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_EditInroute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-11-02T10:22:07Z" finished-at="2018-11-02T10:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C1_CalltoDISA1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="C1_CalltoDISA1" duration-ms="50547" started-at="2018-11-02T10:22:07Z" finished-at="2018-11-02T10:22:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会Talking 【预期：3 实际：-1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会Talking 【预期：3 实际：-1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.driver.SwebDriver.ysAssertWithHangup(SwebDriver.java:912)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList.C1_CalltoDISA1(Disa_PinList.java:124)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【10时22分07秒 执行操作】2001拨打991100通过sps外线呼入到DISA1，输入pin码123#，二次拨号：13001#，预期3001响铃并接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Talking 【预期：3 实际：-1】.jpg" target="_blank">Error: 预期3001会Talking 【预期：3 实际：-1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_CalltoDISA1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-11-02T10:22:57Z" finished-at="2018-11-02T10:22:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_EditDisa()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="D1_EditDisa" duration-ms="40147" started-at="2018-11-02T10:22:57Z" finished-at="2018-11-02T10:23:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时22分57秒 执行操作】编辑DISA1，Password：选择Single Pin--789，ResponseTimeout：15，DightTimeout：10]]>
            </line>
            <line>
              <![CDATA[  【10时23分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时23分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时23分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时23分13秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时23分16秒 执行操作】Extjs： Ext.getCmp('st-disa-pintype').setValue('singlepin')]]>
            </line>
            <line>
              <![CDATA[  【10时23分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时23分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时23分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时23分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时23分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时23分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时23分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_EditDisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-11-02T10:23:37Z" finished-at="2018-11-02T10:23:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_CalltoDISA1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="D2_CalltoDISA1" duration-ms="54980" started-at="2018-11-02T10:23:37Z" finished-at="2018-11-02T10:24:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3002会Talking 【预期：3 实际：-1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3002会Talking 【预期：3 实际：-1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.driver.SwebDriver.ysAssertWithHangup(SwebDriver.java:912)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList.D2_CalltoDISA1(Disa_PinList.java:167)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【10时23分37秒 执行操作】3001拨打3000通过sip外线呼入到DISA1，输入pin码：789#，二次拨号13002#，预期3002响铃并接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3002会Talking 【预期：3 实际：-1】.jpg" target="_blank">Error: 预期3002会Talking 【预期：3 实际：-1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_CalltoDISA1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-11-02T10:24:32Z" finished-at="2018-11-02T10:24:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E_Disa1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="E_Disa1" duration-ms="72415" started-at="2018-11-02T10:24:32Z" finished-at="2018-11-02T10:25:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[外线呼出进入pin1List 【预期：true 实际：false】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 外线呼出进入pin1List 【预期：true 实际：false】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:337)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList.E_Disa1(Disa_PinList.java:180)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【10时24分32秒 执行操作】3001拨打3000通过sip外线呼入到DISA1,输入完pin码789#后，不输人数字等待15s后通话被挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\外线呼出进入pin1List 【预期：true 实际：false】.jpg" target="_blank">Error: 外线呼出进入pin1List 【预期：true 实际：false】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Disa1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-11-02T10:25:45Z" finished-at="2018-11-02T10:25:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_Delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="G_Delete" duration-ms="107042" started-at="2018-11-02T10:25:45Z" finished-at="2018-11-02T10:27:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时25分45秒 执行操作】--删除DISA--]]>
            </line>
            <line>
              <![CDATA[  【10时25分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('disa').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【10时25分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分25秒 执行操作】Extjs： return  Ext.getCmp('st-disa-allowrouter').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时26分26秒 执行操作】Extjs： Ext.getCmp('st-disa-allowrouter').setValue('37')]]>
            </line>
            <line>
              <![CDATA[  【10时26分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分30秒 执行操作】批量删除DISA]]>
            </line>
            <line>
              <![CDATA[  【10时26分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【10时26分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【10时26分36秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【10时26分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时26分41秒 执行操作】deletes 批量删除DISA: 1]]>
            </line>
            <line>
              <![CDATA[  【10时26分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时26分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('disa').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【10时26分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时26分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时27分26秒 执行操作】deleting 批量删除DISA: 0]]>
            </line>
            <line>
              <![CDATA[  【10时27分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时27分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('disa').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量删除DISA]]>
            </line>
            <line>
              <![CDATA[  【10时27分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('disa').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-11-02T10:27:32Z" finished-at="2018-11-02T10:27:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="G_Recovery" duration-ms="35145" started-at="2018-11-02T10:27:32Z" finished-at="2018-11-02T10:28:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时27分32秒 执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【10时27分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时27分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时27分41秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【10时27分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时27分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【10时27分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【10时27分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-11-02T10:28:07Z" finished-at="2018-11-02T10:28:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList@16eabae]" name="AfterClass" is-config="true" duration-ms="23001" started-at="2018-11-02T10:28:07Z" finished-at="2018-11-02T10:28:30Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 10时28分12秒执行完毕：======  Disa_PinList  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Disa_PinList -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="BeforeClass" is-config="true" duration-ms="46472" started-at="2018-11-02T09:08:21Z" finished-at="2018-11-02T09:09:07Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 09时08分21秒开始执行：======  Inbound  ======]]>
            </line>
            <line>
              <![CDATA[  【09时08分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时08分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时09分00秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时09分03秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【09时09分05秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时09分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_init()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A0_init" duration-ms="22618" started-at="2018-11-02T09:09:07Z" finished-at="2018-11-02T09:09:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时09分08秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【09时09分08秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【09时09分08秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【09时09分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时09分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时09分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="53" started-at="2018-11-02T09:09:30Z" finished-at="2018-11-02T09:09:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_callfrom1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom1_sip" duration-ms="26177" started-at="2018-11-02T09:09:30Z" finished-at="2018-11-02T09:09:56Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 18 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:28688}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir1056_28940}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 47586d156bc37e49c10197b1055357dd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 18 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:28688}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir1056_28940}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 47586d156bc37e49c10197b1055357dd
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.codeborne.selenide.Selenide.executeJavaScript(Selenide.java:468)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:764)
	at com.yeastar.swebtest.driver.SwebDriver.gridContent(SwebDriver.java:286)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.A_callfrom1_sip(Inbound.java:58)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【09时09分30秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时09分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时09分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom1_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-11-02T09:09:56Z" finished-at="2018-11-02T09:09:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时09分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_callfrom2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom2_iax" duration-ms="23265" started-at="2018-11-02T09:09:58Z" finished-at="2018-11-02T09:10:22Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:28688}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir1056_28940}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 47586d156bc37e49c10197b1055357dd]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 15 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:28688}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir1056_28940}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
Session ID: 47586d156bc37e49c10197b1055357dd
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.codeborne.selenide.Selenide.executeJavaScript(Selenide.java:468)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:764)
	at com.yeastar.swebtest.driver.SwebDriver.gridContent(SwebDriver.java:286)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.A_callfrom2_iax(Inbound.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【09时09分58秒 执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时10分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时10分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom2_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2111" started-at="2018-11-02T09:10:22Z" finished-at="2018-11-02T09:10:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时10分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom3_sps" duration-ms="33008" started-at="2018-11-02T09:10:24Z" finished-at="2018-11-02T09:10:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时10分24秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时10分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时10分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时10分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom3_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-11-02T09:10:57Z" finished-at="2018-11-02T09:10:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom4_spx" duration-ms="33101" started-at="2018-11-02T09:10:57Z" finished-at="2018-11-02T09:11:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时10分57秒 执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时11分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时11分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom4_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-11-02T09:11:30Z" finished-at="2018-11-02T09:11:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom5_fxo" duration-ms="33016" started-at="2018-11-02T09:11:30Z" finished-at="2018-11-02T09:12:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时11分30秒 执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时11分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时11分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时11分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom5_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="250" started-at="2018-11-02T09:12:03Z" finished-at="2018-11-02T09:12:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom6_bri" duration-ms="33201" started-at="2018-11-02T09:12:03Z" finished-at="2018-11-02T09:12:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时12分03秒 执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时12分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时12分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时12分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom6_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-11-02T09:12:36Z" finished-at="2018-11-02T09:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom7_e1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom7_e1" duration-ms="32912" started-at="2018-11-02T09:12:37Z" finished-at="2018-11-02T09:13:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时12分37秒 执行操作】 2001拨打77777通过E1外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时12分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时13分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时13分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom7_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-11-02T09:13:09Z" finished-at="2018-11-02T09:13:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-11-02T09:13:09Z" finished-at="2018-11-02T09:13:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_callfrom8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="A_callfrom8_gsm" duration-ms="0" started-at="2018-11-02T09:13:09Z" finished-at="2018-11-02T09:13:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_callfrom8_gsm -->
        <test-method status="PASS" signature="B1_callerid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="B1_callerid" duration-ms="44730" started-at="2018-11-02T09:13:09Z" finished-at="2018-11-02T09:13:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时13分09秒 执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
            </line>
            <line>
              <![CDATA[  【09时13分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时13分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时13分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时13分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时13分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时13分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时13分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时13分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_callerid -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-11-02T09:13:54Z" finished-at="2018-11-02T09:13:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_callerid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="B2_callerid" duration-ms="72926" started-at="2018-11-02T09:13:54Z" finished-at="2018-11-02T09:15:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时13分59秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【09时14分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时14分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时14分34秒 执行操作】 2001拨打99999通过sps外线呼入--预期：无法呼入，CDR不会生成]]>
            </line>
            <line>
              <![CDATA[  【09时14分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时14分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时14分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_callerid -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-11-02T09:15:07Z" finished-at="2018-11-02T09:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_did1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="C1_did1_sps" duration-ms="24702" started-at="2018-11-02T09:15:07Z" finished-at="2018-11-02T09:15:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时15分07秒 执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
            </line>
            <line>
              <![CDATA[  【09时15分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分16秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时15分17秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('37')]]>
            </line>
            <line>
              <![CDATA[  【09时15分18秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('E')]]>
            </line>
            <line>
              <![CDATA[  【09时15分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_did1_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-11-02T09:15:32Z" finished-at="2018-11-02T09:15:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_did1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="C2_did1_sps" duration-ms="66453" started-at="2018-11-02T09:15:32Z" finished-at="2018-11-02T09:16:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时15分32秒 执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[  【09时15分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时15分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时15分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时16分05秒 执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[  【09时16分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时16分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_did1_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="58" started-at="2018-11-02T09:16:38Z" finished-at="2018-11-02T09:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_timecondition1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="F_timecondition1" duration-ms="15668" started-at="2018-11-02T09:16:38Z" finished-at="2018-11-02T09:16:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时16分38秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
            <line>
              <![CDATA[  【09时16分48秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
            </line>
            <line>
              <![CDATA[  【09时16分52秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时16分53秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('60')]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-11-02T09:16:54Z" finished-at="2018-11-02T09:16:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F_timecondition2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="F_timecondition2" duration-ms="66589" started-at="2018-11-02T09:16:54Z" finished-at="2018-11-02T09:18:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.F_timecondition2(Inbound.java:282)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时16分54秒 执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
            </line>
            <line>
              <![CDATA[  【09时16分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时16分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时17分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时17分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时17分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时17分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时17分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时17分15秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时17分20秒 执行操作】Extjs： return  Ext.getCmp('combo-3528').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时17分21秒 执行操作】Extjs： Ext.getCmp('combo-3528').setValue('17')]]>
            </line>
            <line>
              <![CDATA[  【09时17分24秒 执行操作】Extjs： Ext.getCmp('combo-3529').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【09时17分27秒 执行操作】Extjs： return  Ext.getCmp('combo-3530').getStore().findRecord('username', "1101", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时17分28秒 执行操作】Extjs： Ext.getCmp('combo-3530').setValue('62')]]>
            </line>
            <line>
              <![CDATA[  【09时17分36秒 执行操作】 3001拨打3000通过sip外线呼入1101]]>
            </line>
            <line>
              <![CDATA[  【09时17分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时18分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2126" started-at="2018-11-02T09:18:01Z" finished-at="2018-11-02T09:18:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时18分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F_timecondition3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="F_timecondition3" duration-ms="66930" started-at="2018-11-02T09:18:03Z" finished-at="2018-11-02T09:19:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.F_timecondition3(Inbound.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时18分03秒 执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
            </line>
            <line>
              <![CDATA[  【09时18分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时18分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时18分12秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时18分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时18分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时18分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时18分24秒 执行操作】Extjs： return  Ext.getCmp('combo-3688').getStore().findRecord('name', "[Holiday]", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时18分25秒 执行操作】Extjs： Ext.getCmp('combo-3688').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【09时18分28秒 执行操作】Extjs： Ext.getCmp('combo-3689').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【09时18分32秒 执行操作】Extjs： return  Ext.getCmp('combo-3690').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时18分33秒 执行操作】Extjs： Ext.getCmp('combo-3690').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【09时18分46秒 执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[  【09时19分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时19分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2130" started-at="2018-11-02T09:19:10Z" finished-at="2018-11-02T09:19:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时19分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F_timecondition4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="F_timecondition4" duration-ms="44284" started-at="2018-11-02T09:19:12Z" finished-at="2018-11-02T09:19:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.F_timecondition4(Inbound.java:324)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时19分12秒 执行操作】 分机1000拨打特征码*802强制启用工作时间]]>
            </line>
            <line>
              <![CDATA[  【09时19分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时19分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时19分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时19分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时19分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时19分32秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
            </line>
            <line>
              <![CDATA[  【09时19分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时19分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2098" started-at="2018-11-02T09:19:56Z" finished-at="2018-11-02T09:19:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时19分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F_timecondition5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="F_timecondition5" duration-ms="50846" started-at="2018-11-02T09:19:58Z" finished-at="2018-11-02T09:20:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.F_timecondition5(Inbound.java:345)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时19分58秒 执行操作】 编辑InRoute1禁用时间条件]]>
            </line>
            <line>
              <![CDATA[  【09时20分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时20分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时20分08秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时20分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时20分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时20分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时20分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时20分16秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【09时20分25秒 执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
            </line>
            <line>
              <![CDATA[  【09时20分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时20分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="2151" started-at="2018-11-02T09:20:49Z" finished-at="2018-11-02T09:20:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时20分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_delete1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="G_delete1" duration-ms="48184" started-at="2018-11-02T09:20:51Z" finished-at="2018-11-02T09:21:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时20分52秒 执行操作】 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时20分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时20分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时20分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时20分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时21分03秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时21分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分11秒 执行操作】 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时21分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分24秒 执行操作】 删除：InRoute1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时21分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时21分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时21分29秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时21分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：InRoute1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分34秒 执行操作】 删除：InRoute1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时21分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：InRoute1-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_delete1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-11-02T09:21:39Z" finished-at="2018-11-02T09:21:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="H_recovery" duration-ms="58093" started-at="2018-11-02T09:21:40Z" finished-at="2018-11-02T09:22:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时21分40秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【09时21分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【09时21分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【09时21分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时21分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时21分51秒 执行操作】deletes  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【09时21分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时21分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【09时21分53秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【09时21分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时21分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时22分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时22分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(4).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(5).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(6).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(7).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(8).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(9).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(10).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分13秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(11).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分14秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(12).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分15秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(13).id]]>
            </line>
            <line>
              <![CDATA[  【09时22分16秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('35,36,38,37,11,10,9,8,7,6,5,3,2,4')]]>
            </line>
            <line>
              <![CDATA[  【09时22分17秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【09时22分18秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时22分19秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【09时22分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-11-02T09:22:38Z" finished-at="2018-11-02T09:22:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound@11f39f9]" name="AfterClass" is-config="true" duration-ms="21906" started-at="2018-11-02T09:22:38Z" finished-at="2018-11-02T09:23:00Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 09时22分43秒执行完毕：======  Inbound  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="BeforeClass" is-config="true" duration-ms="46183" started-at="2018-11-02T09:23:00Z" finished-at="2018-11-02T09:23:46Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 09时23分00秒开始执行：======  Outbound  ======]]>
            </line>
            <line>
              <![CDATA[  【09时23分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时23分38秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时23分41秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【09时23分43秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时23分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_init()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A0_init" duration-ms="14908" started-at="2018-11-02T09:23:46Z" finished-at="2018-11-02T09:24:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时23分46秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【09时23分46秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【09时23分46秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【09时23分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-11-02T09:24:01Z" finished-at="2018-11-02T09:24:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_out1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out1_sip" duration-ms="38241" started-at="2018-11-02T09:24:01Z" finished-at="2018-11-02T09:24:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：13001 实际：*802】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：13001 实际：*802】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:291)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.A_out1_sip(Outbound.java:57)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时24分01秒 执行操作】 1000拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时24分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时24分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时24分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：13001 实际：*802】.jpg" target="_blank">Error: CDR被叫方检测 【预期：13001 实际：*802】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out1_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="2122" started-at="2018-11-02T09:24:39Z" finished-at="2018-11-02T09:24:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时24分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_out2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out2_iax" duration-ms="34726" started-at="2018-11-02T09:24:41Z" finished-at="2018-11-02T09:25:16Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000为Talking状态 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000为Talking状态 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.A_out2_iax(Outbound.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时24分41秒 执行操作】 1000拨打23001通过iax外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时24分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时24分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out2_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-11-02T09:25:16Z" finished-at="2018-11-02T09:25:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_out3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out3_sps" duration-ms="46676" started-at="2018-11-02T09:25:16Z" finished-at="2018-11-02T09:26:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时25分16秒 执行操作】 1000拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时25分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时25分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时25分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时25分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时25分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时25分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时25分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时25分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时25分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时25分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时25分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out3_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-11-02T09:26:02Z" finished-at="2018-11-02T09:26:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_out4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out4_spx" duration-ms="36673" started-at="2018-11-02T09:26:02Z" finished-at="2018-11-02T09:26:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时26分02秒 执行操作】 1000拨打42000通过spx外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时26分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时26分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时26分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时26分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out4_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-11-02T09:26:39Z" finished-at="2018-11-02T09:26:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_out5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out5_fxo" duration-ms="40259" started-at="2018-11-02T09:26:39Z" finished-at="2018-11-02T09:27:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时26分39秒 执行操作】 1000拨打52000通过PSTN外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时26分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时26分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时27分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时27分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时27分19秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out5_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-11-02T09:27:19Z" finished-at="2018-11-02T09:27:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A_out6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out6_bri" duration-ms="34726" started-at="2018-11-02T09:27:19Z" finished-at="2018-11-02T09:27:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000为Talking状态 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000为Talking状态 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.A_out6_bri(Outbound.java:142)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时27分19秒 执行操作】 1000拨打62000通过BRI外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时27分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时27分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时27分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out6_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-11-02T09:27:54Z" finished-at="2018-11-02T09:27:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_out7_E1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out7_E1" duration-ms="47637" started-at="2018-11-02T09:27:54Z" finished-at="2018-11-02T09:28:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时27分54秒 执行操作】 1000拨打72000通过E1外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时27分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时28分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时28分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时28分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时28分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时28分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时28分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out7_E1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-11-02T09:28:42Z" finished-at="2018-11-02T09:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A_out8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="A_out8_gsm" duration-ms="0" started-at="2018-11-02T09:28:42Z" finished-at="2018-11-02T09:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_out8_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-11-02T09:28:42Z" finished-at="2018-11-02T09:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_Prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="B1_Prepend" duration-ms="24367" started-at="2018-11-02T09:28:42Z" finished-at="2018-11-02T09:29:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时28分42秒 执行操作】 新建呼出路由DialPattern，Pattern:01.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
            </line>
            <line>
              <![CDATA[  【09时28分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时28分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时28分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','01.')]]>
            </line>
            <line>
              <![CDATA[  【09时28分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
            </line>
            <line>
              <![CDATA[  【09时28分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('prepend','30')]]>
            </line>
            <line>
              <![CDATA[  【09时28分52秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时28分53秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【09时28分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_Prepend -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-11-02T09:29:06Z" finished-at="2018-11-02T09:29:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B2_Prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="B2_Prepend" duration-ms="34604" started-at="2018-11-02T09:29:06Z" finished-at="2018-11-02T09:29:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000为Talking状态 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000为Talking状态 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.B2_Prepend(Outbound.java:200)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时29分06秒 执行操作】 1000拨打0101通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【09时29分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时29分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时29分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【09时29分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_Prepend -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-11-02T09:29:41Z" finished-at="2018-11-02T09:29:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_password()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="C1_password" duration-ms="57502" started-at="2018-11-02T09:29:41Z" finished-at="2018-11-02T09:30:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时29分41秒 执行操作】 新建呼出路由Password，Pattern:02.，strip：2，外线:SPS，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【09时29分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时29分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时29分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','02.')]]>
            </line>
            <line>
              <![CDATA[  【09时29分47秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
            </line>
            <line>
              <![CDATA[  【09时29分49秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时29分51秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('37')]]>
            </line>
            <line>
              <![CDATA[  【09时29分52秒 执行操作】Extjs： return  Ext.getCmp('st-or-exteninfo').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时29分53秒 执行操作】Extjs： Ext.getCmp('st-or-exteninfo').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【09时29分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时30分00秒 执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
            </line>
            <line>
              <![CDATA[  【09时30分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时30分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时30分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时30分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时30分26秒 执行操作】Extjs： Ext.getCmp('st-or-pintype').setValue('singlepin')]]>
            </line>
            <line>
              <![CDATA[  【09时30分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_password -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-11-02T09:30:38Z" finished-at="2018-11-02T09:30:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_password()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="C2_password" duration-ms="50384" started-at="2018-11-02T09:30:38Z" finished-at="2018-11-02T09:31:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时30分38秒 执行操作】 1000拨打028888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时31分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时31分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时31分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[9].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
            <line>
              <![CDATA[  【09时31分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_password -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-11-02T09:31:29Z" finished-at="2018-11-02T09:31:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="D1_rrmemory_hunt" duration-ms="64020" started-at="2018-11-02T09:31:29Z" finished-at="2018-11-02T09:32:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时31分29秒 执行操作】 新建呼出路由Rrmemory_hunt，Pattern:03.，strip：2，外线:SPS、SIP，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【09时31分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时31分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时31分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('patterns','03.')]]>
            </line>
            <line>
              <![CDATA[  【09时31分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter-edit').down('grid').store.getAt(0).set('strip','2')]]>
            </line>
            <line>
              <![CDATA[  【09时31分37秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时31分38秒 执行操作】Extjs： return  Ext.getCmp('st-or-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时31分39秒 执行操作】Extjs： Ext.getCmp('st-or-trunkinfo').setValue('37,35')]]>
            </line>
            <line>
              <![CDATA[  【09时31分40秒 执行操作】Extjs： return  Ext.getCmp('st-or-exteninfo').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【09时31分41秒 执行操作】Extjs： Ext.getCmp('st-or-exteninfo').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【09时31分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时31分47秒 执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
            </line>
            <line>
              <![CDATA[  【09时31分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').plugins[0].setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【09时31分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.setPageSize(25)]]>
            </line>
            <line>
              <![CDATA[  【09时31分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时31分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时31分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时32分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时32分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时32分21秒 执行操作】Extjs： Ext.getCmp('st-or-adjusttrunk').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【09时32分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_rrmemory_hunt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-11-02T09:32:33Z" finished-at="2018-11-02T09:32:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="D2_rrmemory_hunt" duration-ms="64264" started-at="2018-11-02T09:32:33Z" finished-at="2018-11-02T09:33:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：SIP1 实际：SPS1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：SIP1 实际：SPS1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:297)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:280)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.D2_rrmemory_hunt(Outbound.java:284)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【09时32分33秒 执行操作】 1000拨打033001，第1次预期通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时32分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时32分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时32分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【09时33分07秒 执行操作】 1000拨打033001，第2次预期通过SIP外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时33分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时33分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时33分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：SIP1 实际：SPS1】.jpg" target="_blank">Error: CDR目的中继检测 【预期：SIP1 实际：SPS1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_rrmemory_hunt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="2108" started-at="2018-11-02T09:33:37Z" finished-at="2018-11-02T09:33:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时33分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E_timecondition()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="E_timecondition" duration-ms="123963" started-at="2018-11-02T09:33:39Z" finished-at="2018-11-02T09:35:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时33分39秒 执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
            </line>
            <line>
              <![CDATA[  【09时33分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时33分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时33分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分00秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时34分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时34分06秒 执行操作】Extjs： Ext.getCmp('st-or-pintype').setValue('none')]]>
            </line>
            <line>
              <![CDATA[  【09时34分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时34分18秒 执行操作】 1000拨打029999，通过sps外线呼出，预期：呼出失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为HangUp]]>
            </line>
            <line>
              <![CDATA[  【09时34分32秒 执行操作】 编辑呼出路由Password，TimeCondition选择CheckAll]]>
            </line>
            <line>
              <![CDATA[  【09时34分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时34分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时34分53秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时34分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时35分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时35分10秒 执行操作】 1000拨打029999，通过sps外线呼出，预期：呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【09时35分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时35分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【09时35分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_timecondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-11-02T09:35:43Z" finished-at="2018-11-02T09:35:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="F_delete" duration-ms="103784" started-at="2018-11-02T09:35:43Z" finished-at="2018-11-02T09:37:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【09时35分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').plugins[0].setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【09时35分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.setPageSize(25)]]>
            </line>
            <line>
              <![CDATA[  【09时35分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('outrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【09时35分51秒 执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时35分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时35分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时35分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时35分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时35分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时35分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分08秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时36分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时36分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时36分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分21秒 执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[9].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【09时36分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时36分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分35秒 执行操作】 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时36分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时36分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时36分50秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时36分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时36分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分55秒 执行操作】 删除：Prepend-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时36分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【09时37分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-确定删除]]>
            </line>
            <line>
              <![CDATA[  【09时37分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('outrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【09时37分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【09时37分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('outrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【09时37分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('outrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-11-02T09:37:27Z" finished-at="2018-11-02T09:37:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound@1bbf57e]" name="AfterClass" is-config="true" duration-ms="21751" started-at="2018-11-02T09:37:27Z" finished-at="2018-11-02T09:37:49Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 09时37分32秒执行完毕：======  Outbound  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="BeforeClass" is-config="true" duration-ms="46183" started-at="2018-11-02T10:01:27Z" finished-at="2018-11-02T10:02:13Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 10时01分27秒开始执行：======  Extension  ======]]>
            </line>
            <line>
              <![CDATA[  【10时01分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时01分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分06秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时02分09秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【10时02分11秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时02分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitFeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="InitFeatureCode" is-config="true" duration-ms="32552" started-at="2018-11-02T10:02:13Z" finished-at="2018-11-02T10:02:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时02分13秒 执行操作】 初始化特征码设置]]>
            </line>
            <line>
              <![CDATA[  【10时02分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时02分19秒 执行操作】Extjs： Ext.getCmp('st-feature-enbmonitor').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分20秒 执行操作】Extjs： Ext.getCmp('st-feature-enbblindtransfer').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分21秒 执行操作】Extjs： Ext.getCmp('st-feature-enbattendtransfer').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分22秒 执行操作】Extjs： Ext.getCmp('st-feature-enbcallpark').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分23秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdirectedparkcall').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分24秒 执行操作】Extjs： Ext.getCmp('st-feature-enbresetfollowme').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分25秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablealways').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分26秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablealways').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分27秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablebusy').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分28秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablebusy').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分29秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablenoanswer').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分30秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablenoanswer').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分31秒 执行操作】Extjs： Ext.getCmp('st-feature-enbenablednd').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分32秒 执行操作】Extjs： Ext.getCmp('st-feature-enbdisablednd').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分33秒 执行操作】Extjs： Ext.getCmp('st-feature-enbnormalspy').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分34秒 执行操作】Extjs： Ext.getCmp('st-feature-enbwhisperspy').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时02分35秒 执行操作】Extjs： Ext.getCmp('st-feature-enbbargespy').setValue('true')]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitFeatureCode -->
        <test-method status="PASS" signature="A0_Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="A0_Register" duration-ms="29046" started-at="2018-11-02T10:02:46Z" finished-at="2018-11-02T10:03:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时02分46秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【10时02分46秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【10时02分46秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【10时02分46秒 执行操作】 被测设备注册分机1000,1100,1101,1105，辅助2:2000]]>
            </line>
            <line>
              <![CDATA[  【10时02分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时02分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时03分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时03分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时03分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_Register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="65" started-at="2018-11-02T10:03:15Z" finished-at="2018-11-02T10:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="A1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="A1_sip" duration-ms="41174" started-at="2018-11-02T10:03:15Z" finished-at="2018-11-02T10:03:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 录音失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  录音失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension.A1_sip(Extension.java:136)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【10时03分15秒 执行操作】 SIP内部分机互打：1000拨打1105,1105接听]]>
            </line>
            <line>
              <![CDATA[  【10时03分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时03分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时03分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时03分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时03分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时03分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时03分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时03分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时03分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="2092" started-at="2018-11-02T10:03:56Z" finished-at="2018-11-02T10:03:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时03分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="A2_sip" duration-ms="29861" started-at="2018-11-02T10:03:58Z" finished-at="2018-11-02T10:04:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时03分58秒 执行操作】 SIP内部分机互打：1000拨打1105，1105未接]]>
            </line>
            <line>
              <![CDATA[  【10时04分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时04分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时04分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时04分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-11-02T10:04:28Z" finished-at="2018-11-02T10:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="A3_fxs" duration-ms="35342" started-at="2018-11-02T10:04:28Z" finished-at="2018-11-02T10:05:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时04分28秒 执行操作】 FXS分机：1000拨打1106，预期辅助2的2000分机响铃]]>
            </line>
            <line>
              <![CDATA[  【10时04分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时04分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时04分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时04分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时04分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="60" started-at="2018-11-02T10:05:03Z" finished-at="2018-11-02T10:05:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="A4_fxs" duration-ms="40288" started-at="2018-11-02T10:05:03Z" finished-at="2018-11-02T10:05:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时05分03秒 执行操作】 FXS分机：2000拨打51000，预期1000分机接听]]>
            </line>
            <line>
              <![CDATA[  【10时05分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时05分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时05分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-11-02T10:05:44Z" finished-at="2018-11-02T10:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AttendTranfer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="B1_AttendTranfer" duration-ms="50804" started-at="2018-11-02T10:05:44Z" finished-at="2018-11-02T10:06:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时05分44秒 执行操作】 1000拨打1100,1100按*31105转移给分机1105]]>
            </line>
            <line>
              <![CDATA[  【10时05分46秒 执行操作】Answer Call  9  1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[  【10时05分55秒 执行操作】Answer Call  10  1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105为Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking]]>
            </line>
            <line>
              <![CDATA[  【10时06分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时06分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时06分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时06分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时06分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时06分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时06分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时06分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时06分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AttendTranfer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-11-02T10:06:35Z" finished-at="2018-11-02T10:06:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B2_AttendTranferTimeout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="B2_AttendTranferTimeout" duration-ms="44573" started-at="2018-11-02T10:06:35Z" finished-at="2018-11-02T10:07:19Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预计产生多条CDR，但没有找到匹配]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预计产生多条CDR，但没有找到匹配
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:348)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension.B2_AttendTranferTimeout(Extension.java:219)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【10时06分35秒 执行操作】 1000拨打1100,1100按*31105转移给分机1105，超时恢复通话]]>
            </line>
            <line>
              <![CDATA[  【10时06分37秒 执行操作】Answer Call  12  1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【10时07分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时07分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时07分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AttendTranferTimeout -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="2123" started-at="2018-11-02T10:07:19Z" finished-at="2018-11-02T10:07:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时07分21秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_BlindTransfer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="B3_BlindTransfer" duration-ms="40817" started-at="2018-11-02T10:07:21Z" finished-at="2018-11-02T10:08:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时07分21秒 执行操作】 1000拨打1100,1100按*031105转移给分机1105]]>
            </line>
            <line>
              <![CDATA[  【10时07分23秒 执行操作】Answer Call  15  1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[  【10时07分33秒 执行操作】Answer Call  16  1105]]>
            </line>
            <line>
              <![CDATA[  【10时07分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为HangUp状态]]>
            </line>
            <line>
              <![CDATA[  【10时07分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时07分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时07分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时07分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时07分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_BlindTransfer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-11-02T10:08:02Z" finished-at="2018-11-02T10:08:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_callpark()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="C1_callpark" duration-ms="50221" started-at="2018-11-02T10:08:02Z" finished-at="2018-11-02T10:08:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时08分02秒 执行操作】 1000拨打1100,1100按*6将通话停泊]]>
            </line>
            <line>
              <![CDATA[  【10时08分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时08分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp状态]]>
            </line>
            <line>
              <![CDATA[  【10时08分23秒 执行操作】 1100拨打6900,恢复通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【10时08分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时08分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时08分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_callpark -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-11-02T10:08:52Z" finished-at="2018-11-02T10:08:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_callpark()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="C2_callpark" duration-ms="53139" started-at="2018-11-02T10:08:52Z" finished-at="2018-11-02T10:09:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时08分52秒 执行操作】 1000拨打1100,1100按*066950将通话停泊]]>
            </line>
            <line>
              <![CDATA[  【10时08分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp状态]]>
            </line>
            <line>
              <![CDATA[  【10时09分16秒 执行操作】 1105拨打6950,恢复通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[  【10时09分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时09分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时09分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时09分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时09分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时09分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_callpark -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-11-02T10:09:46Z" finished-at="2018-11-02T10:09:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_callforward()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="D1_callforward" duration-ms="32805" started-at="2018-11-02T10:09:46Z" finished-at="2018-11-02T10:10:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时09分46秒 执行操作】 1100拨打*711105将通话总是转移到1105]]>
            </line>
            <line>
              <![CDATA[  【10时09分50秒 执行操作】 1000拨打1100,预期1105响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[  【10时09分54秒 执行操作】Answer Call  25  1105]]>
            </line>
            <line>
              <![CDATA[  【10时10分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时10分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_callforward -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="52" started-at="2018-11-02T10:10:18Z" finished-at="2018-11-02T10:10:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_cancellForward()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="D2_cancellForward" duration-ms="31901" started-at="2018-11-02T10:10:18Z" finished-at="2018-11-02T10:10:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时10分18秒 执行操作】 1100拨打*071取消通话总是转移]]>
            </line>
            <line>
              <![CDATA[  【10时10分24秒 执行操作】 1000拨打1100,预期1100响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105为HangUp]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃]]>
            </line>
            <line>
              <![CDATA[  【10时10分26秒 执行操作】Answer Call  28  1100]]>
            </line>
            <line>
              <![CDATA[  【10时10分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时10分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时10分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_cancellForward -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-11-02T10:10:50Z" finished-at="2018-11-02T10:10:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_whenbusy()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="E1_whenbusy" duration-ms="48844" started-at="2018-11-02T10:10:50Z" finished-at="2018-11-02T10:11:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时10分50秒 执行操作】 1100拨打*721105忙时转移到1105]]>
            </line>
            <line>
              <![CDATA[  【10时11分01秒 执行操作】 1000拨打1100,1100拒接，转移到1105]]>
            </line>
            <line>
              <![CDATA[  【10时11分03秒 执行操作】Answer Call  31  1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[  【10时11分08秒 执行操作】Answer Call  0  1105]]>
            </line>
            <line>
              <![CDATA[  【10时11分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时11分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时11分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时11分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时11分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时11分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时11分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时11分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时11分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时11分39秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_whenbusy -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-11-02T10:11:39Z" finished-at="2018-11-02T10:11:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_cancelWhenBusy()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="E2_cancelWhenBusy" duration-ms="40273" started-at="2018-11-02T10:11:39Z" finished-at="2018-11-02T10:12:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时11分39秒 执行操作】 1100拨打*072取消忙时转移]]>
            </line>
            <line>
              <![CDATA[  【10时11分46秒 执行操作】 1000拨打1100,预期1100响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Ring]]>
            </line>
            <line>
              <![CDATA[  【10时11分50秒 执行操作】Answer Call  4  1100]]>
            </line>
            <line>
              <![CDATA[  【10时11分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时12分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时12分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105不会响铃]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_cancelWhenBusy -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-11-02T10:12:20Z" finished-at="2018-11-02T10:12:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_NoAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="F1_NoAnswer" duration-ms="67158" started-at="2018-11-02T10:12:20Z" finished-at="2018-11-02T10:13:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时12分20秒 执行操作】 1100拨打*731105无应答时转移到1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃状态]]>
            </line>
            <line>
              <![CDATA[  【10时12分29秒 执行操作】 1000拨打1100，超时不接，预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃状态]]>
            </line>
            <line>
              <![CDATA[  【10时13分02秒 执行操作】Answer Call  8  1105]]>
            </line>
            <line>
              <![CDATA[  【10时13分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时13分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时13分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【10时13分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时13分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时13分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时13分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_NoAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-11-02T10:13:27Z" finished-at="2018-11-02T10:13:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_NoAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="F2_NoAnswer" duration-ms="55853" started-at="2018-11-02T10:13:27Z" finished-at="2018-11-02T10:14:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时13分27秒 执行操作】 1100拨打*073取消无应答转移]]>
            </line>
            <line>
              <![CDATA[  【10时13分32秒 执行操作】 1000拨打1100，超时不接，1000被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为HangUp]]>
            </line>
            <line>
              <![CDATA[  【10时14分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时14分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时14分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时14分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时14分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_NoAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-11-02T10:14:23Z" finished-at="2018-11-02T10:14:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_dnd()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="G1_dnd" duration-ms="13208" started-at="2018-11-02T10:14:23Z" finished-at="2018-11-02T10:14:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时14分23秒 执行操作】 1100拨打*74启用免打扰]]>
            </line>
            <line>
              <![CDATA[  【10时14分28秒 执行操作】 1000拨打1100，预期无法呼入]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100不会响铃]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_dnd -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-11-02T10:14:36Z" finished-at="2018-11-02T10:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_canceldnd()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="G2_canceldnd" duration-ms="30970" started-at="2018-11-02T10:14:36Z" finished-at="2018-11-02T10:15:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时14分36秒 执行操作】 1100拨打*074关闭免打扰]]>
            </line>
            <line>
              <![CDATA[  【10时14分41秒 执行操作】 1000拨打1100，预期正常呼入]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃]]>
            </line>
            <line>
              <![CDATA[  【10时14分42秒 执行操作】Answer Call  16  1100]]>
            </line>
            <line>
              <![CDATA[  【10时14分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时15分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时15分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时15分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_canceldnd -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-11-02T10:15:07Z" finished-at="2018-11-02T10:15:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_resetToDefault()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="H1_resetToDefault" duration-ms="7094" started-at="2018-11-02T10:15:07Z" finished-at="2018-11-02T10:15:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时15分07秒 执行操作】 1100拨打*70恢复默认值]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_resetToDefault -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-11-02T10:15:14Z" finished-at="2018-11-02T10:15:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="I_Voicemail" duration-ms="79770" started-at="2018-11-02T10:15:14Z" finished-at="2018-11-02T10:16:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时15分14秒 执行操作】 1000拨打1105，1105未接，到voicemail]]>
            </line>
            <line>
              <![CDATA[  【10时16分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时16分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时16分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_Voicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="50" started-at="2018-11-02T10:16:34Z" finished-at="2018-11-02T10:16:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J_internal()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="J_internal" duration-ms="48435" started-at="2018-11-02T10:16:34Z" finished-at="2018-11-02T10:17:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时16分34秒 执行操作】 1000拨打1105，1105接听，1105按*1进行一键录音]]>
            </line>
            <line>
              <![CDATA[  【10时16分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时16分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【10时17分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时17分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【10时17分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【10时17分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【10时17分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_internal -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-11-02T10:17:22Z" finished-at="2018-11-02T10:17:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_check_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="K1_check_Voicemail" duration-ms="55786" started-at="2018-11-02T10:17:22Z" finished-at="2018-11-02T10:18:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时17分22秒 执行操作】 分机1105登录，查看存在1000留下的语音留言]]>
            </line>
            <line>
              <![CDATA[  【10时17分42秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【10时17分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时17分59秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【10时18分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【10时18分17秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【10时18分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1000(1000)]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_check_Voicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-11-02T10:18:18Z" finished-at="2018-11-02T10:18:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_Check_OneTouchRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="K2_Check_OneTouchRecord" duration-ms="4840" started-at="2018-11-02T10:18:18Z" finished-at="2018-11-02T10:18:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【10时18分18秒 执行操作】 分机1105登录，查看存在1键录音]]>
            </line>
            <line>
              <![CDATA[  【10时18分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[    Pass:  正确检测到录音文件]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_Check_OneTouchRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-11-02T10:18:23Z" finished-at="2018-11-02T10:18:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension@1faf8f2]" name="AfterClass" is-config="true" duration-ms="22088" started-at="2018-11-02T10:18:23Z" finished-at="2018-11-02T10:18:45Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年11月02日 10时18分28秒执行完毕：======  Extension  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Extension -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist">
        <test-method status="FAIL" signature="A_Login()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="A_Login" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:18Z" finished-at="2018-11-02T10:36:18Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[chrome not reachable
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6.01 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
selenide.url: https://192.168.12.212:8088/
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:33155}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir3572_9137}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
selenide.baseUrl: http://localhost:8080
Session ID: ba12679c59a3aca59820d3d47009e594]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: chrome not reachable
  (Session info: chrome=69.0.3497.100)
  (Driver info: chromedriver=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 6.01 seconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
selenide.url: https://192.168.12.212:8088/
Capabilities [{mobileEmulationEnabled=false, hasTouchScreen=false, platform=XP, acceptSslCerts=false, goog:chromeOptions={debuggerAddress=localhost:33155}, acceptInsecureCerts=false, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=, applicationCacheEnabled=false, rotatable=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.42.591088 (7b2b2dca23cca0862f674758c9a3933e685c27d5), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir3572_9137}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, version=69.0.3497.100, browserConnectionEnabled=false, nativeEvents=true, locationContextEnabled=true, cssSelectorsEnabled=true}]
selenide.baseUrl: http://localhost:8080
Session ID: ba12679c59a3aca59820d3d47009e594
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.get(RemoteWebDriver.java:316)
	at org.openqa.selenium.remote.RemoteWebDriver$RemoteNavigation.to(RemoteWebDriver.java:969)
	at com.codeborne.selenide.impl.Navigator.navigateToAbsoluteUrl(Navigator.java:70)
	at com.codeborne.selenide.impl.Navigator.open(Navigator.java:32)
	at com.codeborne.selenide.Selenide.open(Selenide.java:82)
	at com.codeborne.selenide.Selenide.open(Selenide.java:56)
	at com.yeastar.swebtest.driver.SwebDriver.initialDriver(SwebDriver.java:72)
	at com.yeastar.swebtest.driver.SwebDriver.initialDriver(SwebDriver.java:33)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist.A_Login(Blacklist_Whitelist.java:16)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeConfigurationMethod(Invoker.java:510)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:211)
	at org.testng.internal.Invoker.invokeConfigurations(Invoker.java:138)
	at org.testng.internal.TestMethodWorker.invokeBeforeClassMethods(TestMethodWorker.java:170)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:104)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年11月02日 10时36分18秒开始执行：======  Blacklist_Whitelist  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_Login -->
        <test-method status="SKIP" signature="C_InitBlackList_WhiteList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="C_InitBlackList_WhiteList" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C_InitBlackList_WhiteList -->
        <test-method status="SKIP" signature="A0_Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="A0_Register" duration-ms="1" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A0_Register -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="A1_EditInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="A1_EditInRoute1" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A1_EditInRoute1 -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="B1_blackList1_In_2001_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="B1_blackList1_In_2001_add" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B1_blackList1_In_2001_add -->
        <test-method status="SKIP" signature="B2_blackList1_In_2001_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="B2_blackList1_In_2001_call" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B2_blackList1_In_2001_call -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="C1_blackList2_Out_3001_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="C1_blackList2_Out_3001_add" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C1_blackList2_Out_3001_add -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="C2_blackList2_Out_3001_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="C2_blackList2_Out_3001_call" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C2_blackList2_Out_3001_call -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="D1_whiteList1_Both_2001_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="D1_whiteList1_Both_2001_add" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D1_whiteList1_Both_2001_add -->
        <test-method status="SKIP" signature="E1_whiteList2_Out_3001_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="E1_whiteList2_Out_3001_add" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E1_whiteList2_Out_3001_add -->
        <test-method status="SKIP" signature="D2_whiteList1_Both_2001_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="D2_whiteList1_Both_2001_call" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D2_whiteList1_Both_2001_call -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="E2_whiteList2_Out_3001_call()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="E2_whiteList2_Out_3001_call" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E2_whiteList2_Out_3001_call -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="F1_blackList2_In_3001_edit()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="F1_blackList2_In_3001_edit" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F1_blackList2_In_3001_edit -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="F3_blackList2_In_3001_callin()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="F3_blackList2_In_3001_callin" duration-ms="1" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F3_blackList2_In_3001_callin -->
        <test-method status="SKIP" signature="F2_blackList2_In_3001_callout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="F2_blackList2_In_3001_callout" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F2_blackList2_In_3001_callout -->
        <test-method status="SKIP" signature="G1_whiteList1_Out_2001_edit()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="G1_whiteList1_Out_2001_edit" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G1_whiteList1_Out_2001_edit -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="G2_whiteList1_Out_2001_callin()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="G2_whiteList1_Out_2001_callin" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G2_whiteList1_Out_2001_callin -->
        <test-method status="SKIP" signature="G3_whiteList1_Out_2001_callout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="G3_whiteList1_Out_2001_callout" duration-ms="1" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G3_whiteList1_Out_2001_callout -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="H_Export()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="H_Export" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- H_Export -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="I_DeleteBlackList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="I_DeleteBlackList" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I_DeleteBlackList -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="J_DeleteWhiteList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="J_DeleteWhiteList" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- J_DeleteWhiteList -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="SKIP" signature="K_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="K_Recovery" duration-ms="1" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- K_Recovery -->
        <test-method status="SKIP" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterClass" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterClass -->
        <test-method status="SKIP" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist@729b1e]" name="AfterMethod" is-config="true" duration-ms="0" started-at="2018-11-02T10:36:47Z" finished-at="2018-11-02T10:36:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Blacklist_Whitelist -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
