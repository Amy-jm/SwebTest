<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="43" total="197" passed="154">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======前置环境设置—BeforeTest======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量创建分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有VoIP外线]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip外线SIP1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax外线IAX1]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\IAX1注册失败.jpg" target="_blank">Error: IAX1注册失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps外线SPS1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx外线SPX1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加网络磁盘netdisk1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置录音存储在：TF/SD]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======前置环境设置—BeforeTest======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  时间条件—TimeCondition  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_test：每天05:05~22:39]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Outbound：00:00-00:01,周日]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_Advanced:周日/二/四，12:30~18:45]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑workday_Advanced，启用高级设置，1/6/12月的1/10/20/31号]]>
    </line>
    <line>
      <![CDATA[    Pass: 月份编辑]]>
    </line>
    <line>
      <![CDATA[    Pass: 日期编辑]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件CheckAll]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑CheckAl，启用高级设置，Month:All，Day:All]]>
    </line>
    <line>
      <![CDATA[    Pass: Week编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[    Pass: Month编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[    Pass: Day编辑页面显示检查]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：workday_Advanced，取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：workday_test，取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：workday_test，取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：workday_test，确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  时间条件—TimeCondition  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  时间条件—Holiday  =======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByDay：2017-10-01~2025-12-31]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByMonth：1月1号-12月31号]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByWeek：5月第3个周四]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByWeek2：12月最后1个周日]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑HolidayByWeek：8月第4个周六]]>
    </line>
    <line>
      <![CDATA[    Pass: 编辑Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：HolidayByWeek-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：HolidayByWeek-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：HolidayByWeek-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：HolidayByWeek-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：HolidayByWeek2-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：HolidayByWeek2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：HolidayByWeek2-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：HolidayByWeek2-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  时间条件-Holiday  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Inbound  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR源中继检测 【预期：SPX1 实际：SPS1】.jpg" target="_blank">Error: CDR源中继检测 【预期：SPX1 实际：SPS1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入--预期：无法呼入，CDR不会生成]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*801强制启用工作时间]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑InRoute1禁用时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：DeleteTest-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：DeleteTest-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：DeleteTest-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：DeleteTest-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Inbound  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Outbound  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：42000 实际：32000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：42000 实际：32000】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由DialPattern，Pattern:91.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打9101通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由Password，Pattern:92.，strip：2，外线:SPS，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打928888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出路由Rrmemory_hunt，Pattern:93.，strip：2，外线:SPS、SIP，分机：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打933001，第1次预期通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：933001 实际：928888】.jpg" target="_blank">Error: CDR被叫方检测 【预期：933001 实际：928888】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为HangUp]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，TimeCondition选择CheckAll]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：9299999 实际：928888】.jpg" target="_blank">Error: CDR被叫方检测 【预期：9299999 实际：928888】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Prepend-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Outbound  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  OutboundRestriction  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1100状态已被限制，并取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1102状态已被限制，并取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1102取消呼出限制后能正常呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  OutboundRestriction  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  AutoCLIP  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除AutoCLIP List的所有记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除AutoCLIP List后，3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Delete Used Records----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线第1次呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线第2次呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Only Keep Missed Call Records----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，被叫接听--预期不会生成cliplist]]>
    </line>
    <line>
      <![CDATA[    Error: 被叫接听，检查AutoCLIP List生成了记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，被叫未接--预期生成cliplist]]>
    </line>
    <line>
      <![CDATA[    Pass:  被叫未接，检查AutoCLIP List生成记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----启用Match Outgoing Trunk----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
    </line>
    <line>
      <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----不启用AutoCLIP----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======   AutoCLIP   ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  PickupGroup  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1105按*4截答--预期截答失败]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1105按*041100截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupExGroup,成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期分机1000响铃]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按*4截答--预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupExGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupExGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupExGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupExGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  PickupGroup  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  PagingIntercom  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有广播组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6300：单工，不启用*Answer，成员：1100,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6300，预期分机1100、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6301：双工，启用*Answer成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6301，预期分机1100、1101、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101按*Answer--预期1100、1105会挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*51105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Paging6301-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Paging6301-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Paging6301-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Paging6301-确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  PagingIntercom  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  SpeedDial  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置速拨特征码为*999]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建速拨码：dialcode:1,PhoneNumber：13001]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建速拨码：dialcode:1234567,PhoneNumber：31234567]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*9991通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*9991234567通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：31234567 实际：13001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：31234567 实际：13001】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 导出速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：速拨码为1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：速拨码为1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：速拨码为1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：速拨码为1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：速拨码为1234567-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：速拨码为1234567-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：速拨码为1234567-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：速拨码为1234567-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 导入速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass: 导入速拨码]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  SpeedDial  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  RingGroup  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建RingGroup6201,Mem:ExtensionGroup1,其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6201，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1101、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑RingGroup6201，成员响铃时间：15s，Failover：分机1102]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6201，预期1100、1101、1105响铃15s后挂断，1102开始响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1102--Idle]]>
    </line>
    <line>
      <![CDATA[    Pass:  1102--Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建响铃组RingSequentially6202，Sequentially,每个成员20s,成员：1000、1100、1101、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inroute1到RingSequentially6202]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到RingSequentially6202]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring20s--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring--Answer]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 轮到1105响铃的时候，1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：RingGroup6201-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：RingGroup6201-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：RingGroup6201-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：RingSequentially6202-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：RingSequentially6202-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：RingSequentially6202-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：RingSequentially6202-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  RingGroup  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  CustomPrompts  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有提示音]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[    Pass: 导入提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  CustomPrompts  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  IVR  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建IVR6502,默认设置]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建IVRtest1，提示音选择autotestprompt，勾选Dial Extensions，勾选Dial Outbound Routes，勾选Dial to Check Voicemail按0到分机1000，按1到1000的Voicemail，按5到Dial by Name，按#到hungup，按*到Select an Option，Timeout到customPrompt：prompt1，Invalid到分机1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到IVRtest1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨分机1103]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨3333通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按1到voicemail-1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6501，按5到DialbyName,按957到分机1103]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1103为Ring状态 【预期：2 实际：0】.jpg" target="_blank">Error: 预期1103为Ring状态 【预期：2 实际：0】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按#挂断通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1，按*到SelecttoOption--预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6501，超时到prompt1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6501，按a错误按键到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,直接拨打*02查看1000的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  IVR ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Queue  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Queue6701,Password:123，FailoverDestination：分机1000，Static Agents：空]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Queue6702,Ring Strategy：RingAll，Static Agents：ExtensionGroup1，Agent Announcement：prompt1，Caller Max Wait Time:100,按9到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Queue6702]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期到FailDestination--1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6701*加入队列6701，密码：123]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1100输入密码123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期动态坐席1100接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6700**退出队列6701]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1100退出队列6701]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6701，预期FailDestina-1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6702,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,100s内无人接就挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 2001预期HangUp]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,按9到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101预期挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Queue6701,启用Empty，不启用Leave When Empty]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6701--预期：队列无有效坐席，仍可成功呼入队列]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Queue6701，启用Empty，启用Leave When Empty]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6701--预期：队列无有效坐席--failover 1000分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑6701，成员选择1105，1101,1102，响铃策略线性响铃]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6701，轮到1102响铃时接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\1105预期响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 1105预期响铃 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Queue  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Conference  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 被测设备注册分机1000、1100、1105，辅助1：分机3001，辅助2：分机2001]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Conference6401，默认设置]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建Conference6402，与会者密码123，启用等候管理员，提示音：分机号码，Allow Participant to Invite：不启用，管理员密码：456，管理员：1000、1100]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1到Conference6402]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6401呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有3个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000退出会议室6401]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入6402，输入与会密码123]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有1个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入6402，输入管理员密码456]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有2个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6402呼入6402，无需密码]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有3个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6402呼入6402，输入与会者密码123]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有4个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按#1100，邀请1100加入会议，预期：邀请失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期不会响铃]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 挂断所有通话,所有成员退出会议室6402]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6402有0个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105呼入到会议室6401]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按#...1100邀请分机1100加入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Conference6401-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6401-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Conference6401-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6401-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Conference6402-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Conference6402-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Conference6402-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Conference6402-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Conference  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Callback  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 被测设备注册分机1000，辅助1：分机3001，辅助2：分机2000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback2，CallbackThrough：SPS1，DelayBeforeCallback：10，Strip：1，Prepend：311，Destination：IVR1（6500）]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Callback1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，等待2秒挂断通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期3001会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会响铃 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期2000会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2000会响铃 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Callback2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,等待2秒挂断通话--预期通过sps外线回拨到分机2000]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期辅助2的2000分机响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期辅助2的2000分机响铃 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Callback  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Extension  ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 初始化特征码设置]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 被测设备注册分机1000,1100,1101,1105，辅助2:2000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 SIP内部分机互打：1000拨打1105,1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 SIP内部分机互打：1000拨打1105，1105未接]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 FXS分机：1000拨打1106，预期辅助2的2000分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 FXS分机：2000拨打51000，预期1000分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1100按*31105转移给分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105为Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1100按*31105转移给分机1105，超时恢复通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1100按*031105转移给分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100预期为HangUp状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1100按*6将通话停泊]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp状态]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6900,恢复通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,1100按*066950将通话停泊]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp状态]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6950,恢复通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Talking状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*711105将通话总是转移到1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,预期1105响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*071取消通话总是转移]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105为HangUp]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*721105忙时转移到1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100保持通话，1101拨打1100--预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*072取消忙时转移]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100保持通话，1101拨打1100--预期1101挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1101挂断状态 【预期：4 实际：3】.jpg" target="_blank">Error: 预期1101挂断状态 【预期：4 实际：3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*731105无应答时转移到1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃状态]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100，超时不接，预期1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*073取消无应答转移]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100，超时不接，1000被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为HangUp]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*74启用免打扰]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100，预期无法呼入]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1000为HangUp 【预期：4 实际：3】.jpg" target="_blank">Error: 预期1000为HangUp 【预期：4 实际：3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*074关闭免打扰]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1100，预期正常呼入]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打*70恢复默认值]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1105，1105未接，到voicemail]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1105，1105接听，1105按*1进行一键录音]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1105登录，查看存在1000留下的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1000(1000)]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1105登录，查看存在1键录音]]>
    </line>
    <line>
      <![CDATA[    Pass:  正确检测到录音文件]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Extension  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Blacklist_Whitelist  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---设置呼入路由---]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---黑名单Inroute,SPS---]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打进入黑名单]]>
    </line>
    <line>
      <![CDATA[    Pass: SPS通话进入黑名单列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---黑名单OutRoute,SIP---]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】被测设备分机1100通过SIP拨打进入黑名单]]>
    </line>
    <line>
      <![CDATA[    Pass: SIP通话进入黑名单列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】白名单SPS1，Both ]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打]]>
    </line>
    <line>
      <![CDATA[    Pass: SPS白名单呼入]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--白名单SIP，OutRoute--]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】被测设备分机1100通过SIP拨打]]>
    </line>
    <line>
      <![CDATA[    Pass: SIP白名单呼入]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--编辑blackList2 为Inbound--]]>
    </line>
    <line>
      <![CDATA[    Pass: blackList2 编辑为Inbound]]>
    </line>
    <line>
      <![CDATA[  【执行操作】通过sip1外线呼叫分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: blackList2 编辑为Inbound呼入]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--编辑whiteList1 为Outbound--]]>
    </line>
    <line>
      <![CDATA[    Pass: whiteList1 编辑为Outbound]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--删除黑名单--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除黑名单blackList1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--删除白名单--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除黑名单blackList1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======   Blacklist_Whitelist  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  Disa_PinList  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】初始化DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】初始化PIN LIST]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化PIN LIST]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--创建PinList--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--创建DISA1--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--编辑呼入路由--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备2通过sps呼叫被测设备1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pin1List]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--编辑DISA1，Password：选择Single Pin--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备1通过SIP1拨打到被测设备，在进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pin1List]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】通过SIP1呼入,输入完pin码后，不输人数字等待15s后通话被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pin1List]]>
    </line>
    <line>
      <![CDATA[  【执行操作】--删除DISA--]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量删除DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  Disa_PinList  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  EmergencyNumber  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】初始化EmergencyNumber]]>
    </line>
    <line>
      <![CDATA[    Pass: 初始化EmergencyNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】----新增紧急号码----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机B通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 进入紧急呼叫]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---编辑紧急号码---]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机B通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 进入紧急呼叫]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---删除紧急号码列表---]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除紧急呼叫]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除紧急呼叫]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为HangUp]]>
    </line>
    <line>
      <![CDATA[  【执行操作】---批量删除紧急号码---]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  EmergencyNumber  =======

]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="10088406" started-at="2017-11-09T08:15:52Z" finished-at="2017-11-09T11:04:00Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="10088406" started-at="2017-11-09T08:15:52Z" finished-at="2017-11-09T11:04:00Z">
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="BeforeClass" is-config="true" duration-ms="48789" started-at="2017-11-09T16:48:02Z" finished-at="2017-11-09T16:48:51Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Outbound  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="A_out1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out1_sip" duration-ms="45038" started-at="2017-11-09T16:48:51Z" finished-at="2017-11-09T16:49:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 录音失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  录音失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out1_sip(Outbound.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out1_sip -->
        <test-method status="PASS" signature="A_out2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out2_iax" duration-ms="41443" started-at="2017-11-09T16:49:36Z" finished-at="2017-11-09T16:50:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out2_iax -->
        <test-method status="PASS" signature="A_out3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out3_sps" duration-ms="41777" started-at="2017-11-09T16:50:18Z" finished-at="2017-11-09T16:50:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out3_sps -->
        <test-method status="FAIL" signature="A_out4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out4_spx" duration-ms="36827" started-at="2017-11-09T16:50:59Z" finished-at="2017-11-09T16:51:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：42000 实际：32000】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：42000 实际：32000】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.A_out4_spx(Outbound.java:102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：42000 实际：32000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：42000 实际：32000】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out4_spx -->
        <test-method status="PASS" signature="A_out5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out5_fxo" duration-ms="41460" started-at="2017-11-09T16:51:36Z" finished-at="2017-11-09T16:52:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out5_fxo -->
        <test-method status="PASS" signature="A_out6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out6_bri" duration-ms="39409" started-at="2017-11-09T16:52:18Z" finished-at="2017-11-09T16:52:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_out6_bri -->
        <test-method status="PASS" signature="A_out7_E1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out7_E1" duration-ms="0" started-at="2017-11-09T16:52:57Z" finished-at="2017-11-09T16:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_out7_E1 -->
        <test-method status="PASS" signature="A_out8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="A_out8_gsm" duration-ms="0" started-at="2017-11-09T16:52:57Z" finished-at="2017-11-09T16:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_out8_gsm -->
        <test-method status="PASS" signature="B1_Prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="B1_Prepend" duration-ms="24470" started-at="2017-11-09T16:52:57Z" finished-at="2017-11-09T16:53:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由DialPattern，Pattern:91.，strip：2，Prepend：123456，选择SIP外线/所有分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_Prepend -->
        <test-method status="PASS" signature="B2_Prepend()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="B2_Prepend" duration-ms="40455" started-at="2017-11-09T16:53:22Z" finished-at="2017-11-09T16:54:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打9101通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_Prepend -->
        <test-method status="PASS" signature="C1_password()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="C1_password" duration-ms="54720" started-at="2017-11-09T16:54:02Z" finished-at="2017-11-09T16:54:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由Password，Pattern:92.，strip：2，外线:SPS，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin--123]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_password -->
        <test-method status="FAIL" signature="C2_password()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="C2_password" duration-ms="33730" started-at="2017-11-09T16:54:57Z" finished-at="2017-11-09T16:55:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Answered 实际：No Answer】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Answered 实际：No Answer】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:259)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.C2_password(Outbound.java:221)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打928888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_password -->
        <test-method status="PASS" signature="D1_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="D1_rrmemory_hunt" duration-ms="61415" started-at="2017-11-09T16:55:31Z" finished-at="2017-11-09T16:56:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出路由Rrmemory_hunt，Pattern:93.，strip：2，外线:SPS、SIP，分机：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Rrmemory_hunt，启用循环抓取]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_rrmemory_hunt -->
        <test-method status="FAIL" signature="D2_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="D2_rrmemory_hunt" duration-ms="23638" started-at="2017-11-09T16:56:32Z" finished-at="2017-11-09T16:56:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：933001 实际：928888】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：933001 实际：928888】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.D2_rrmemory_hunt(Outbound.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打933001，第1次预期通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：933001 实际：928888】.jpg" target="_blank">Error: CDR被叫方检测 【预期：933001 实际：928888】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_rrmemory_hunt -->
        <test-method status="FAIL" signature="E_timecondition()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="E_timecondition" duration-ms="111403" started-at="2017-11-09T16:56:56Z" finished-at="2017-11-09T16:58:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：9299999 实际：928888】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：9299999 实际：928888】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound.E_timecondition(Outbound.java:311)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password：取消密码设置，TimeCondition选择Outbound]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为HangUp]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，TimeCondition选择CheckAll]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打929999，通过sps外线呼出，预期：呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：9299999 实际：928888】.jpg" target="_blank">Error: CDR被叫方检测 【预期：9299999 实际：928888】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_timecondition -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="F_delete" duration-ms="81340" started-at="2017-11-09T16:58:47Z" finished-at="2017-11-09T17:00:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Rrmemory_hunt-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Prepend-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Prepend-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound@13f88ab]" name="AfterClass" is-config="true" duration-ms="13685" started-at="2017-11-09T17:00:08Z" finished-at="2017-11-09T17:00:22Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Outbound  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Outbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="BeforeClass" is-config="true" duration-ms="54134" started-at="2017-11-09T16:34:15Z" finished-at="2017-11-09T16:35:09Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Inbound  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="FAIL" signature="A_callfrom1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom1_sip" duration-ms="38305" started-at="2017-11-09T16:35:09Z" finished-at="2017-11-09T16:35:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 录音失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  录音失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom1_sip(Inbound.java:62)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom1_sip -->
        <test-method status="PASS" signature="A_callfrom2_iax()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom2_iax" duration-ms="31299" started-at="2017-11-09T16:35:48Z" finished-at="2017-11-09T16:36:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom2_iax -->
        <test-method status="PASS" signature="A_callfrom3_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom3_sps" duration-ms="31513" started-at="2017-11-09T16:36:19Z" finished-at="2017-11-09T16:36:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom3_sps -->
        <test-method status="FAIL" signature="A_callfrom4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom4_spx" duration-ms="28020" started-at="2017-11-09T16:36:50Z" finished-at="2017-11-09T16:37:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：SPX1 实际：SPS1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：SPX1 实际：SPS1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:261)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound.A_callfrom4_spx(Inbound.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR源中继检测 【预期：SPX1 实际：SPS1】.jpg" target="_blank">Error: CDR源中继检测 【预期：SPX1 实际：SPS1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom4_spx -->
        <test-method status="PASS" signature="A_callfrom5_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom5_fxo" duration-ms="31280" started-at="2017-11-09T16:37:18Z" finished-at="2017-11-09T16:37:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom5_fxo -->
        <test-method status="PASS" signature="A_callfrom6_bri()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom6_bri" duration-ms="31288" started-at="2017-11-09T16:37:50Z" finished-at="2017-11-09T16:38:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_callfrom6_bri -->
        <test-method status="PASS" signature="A_callfrom8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom8_gsm" duration-ms="0" started-at="2017-11-09T16:38:21Z" finished-at="2017-11-09T16:38:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_callfrom8_gsm -->
        <test-method status="PASS" signature="A_callfrom7_e1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="A_callfrom7_e1" duration-ms="0" started-at="2017-11-09T16:38:21Z" finished-at="2017-11-09T16:38:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_callfrom7_e1 -->
        <test-method status="PASS" signature="B1_callerid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="B1_callerid" duration-ms="46345" started-at="2017-11-09T16:38:21Z" finished-at="2017-11-09T16:39:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1，Caller ID：2002]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_callerid -->
        <test-method status="PASS" signature="B2_callerid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="B2_callerid" duration-ms="71095" started-at="2017-11-09T16:39:07Z" finished-at="2017-11-09T16:40:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入--预期：无法呼入，CDR不会生成]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_callerid -->
        <test-method status="PASS" signature="C1_did1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="C1_did1_sps" duration-ms="26576" started-at="2017-11-09T16:40:18Z" finished-at="2017-11-09T16:40:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼入路由DIDtest，DID Pattern：5503301-5503305，选择SPS外线，Extension Range：1101-1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_did1_sps -->
        <test-method status="PASS" signature="C2_did1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="C2_did1_sps" duration-ms="63520" started-at="2017-11-09T16:40:45Z" finished-at="2017-11-09T16:41:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503301通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503305通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_did1_sps -->
        <test-method status="PASS" signature="F_timecondition1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="F_timecondition1" duration-ms="10373" started-at="2017-11-09T16:41:49Z" finished-at="2017-11-09T16:41:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition1 -->
        <test-method status="PASS" signature="F_timecondition2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="F_timecondition2" duration-ms="76079" started-at="2017-11-09T16:41:59Z" finished-at="2017-11-09T16:43:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1,启用时间条件，workday_24hour到分机1101]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition2 -->
        <test-method status="PASS" signature="F_timecondition3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="F_timecondition3" duration-ms="74118" started-at="2017-11-09T16:43:15Z" finished-at="2017-11-09T16:44:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1，添加[Holiday]到会议室Conference1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition3 -->
        <test-method status="PASS" signature="F_timecondition4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="F_timecondition4" duration-ms="55965" started-at="2017-11-09T16:44:29Z" finished-at="2017-11-09T16:45:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*801强制启用工作时间]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到1101]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition4 -->
        <test-method status="PASS" signature="F_timecondition5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="F_timecondition5" duration-ms="62512" started-at="2017-11-09T16:45:25Z" finished-at="2017-11-09T16:46:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑InRoute1禁用时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证禁用时间条件：3001拨打3000通过sip外线呼入，预期呼入到1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_timecondition5 -->
        <test-method status="PASS" signature="G_delete1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="G_delete1" duration-ms="81089" started-at="2017-11-09T16:46:28Z" finished-at="2017-11-09T16:47:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：DIDtest-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：DeleteTest-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：DeleteTest-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：DeleteTest-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：DeleteTest-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_delete1 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound@33cc44]" name="AfterClass" is-config="true" duration-ms="13688" started-at="2017-11-09T16:47:49Z" finished-at="2017-11-09T16:48:02Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Inbound  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Inbound -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="BeforeClass" is-config="true" duration-ms="48938" started-at="2017-11-09T17:11:16Z" finished-at="2017-11-09T17:12:05Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  AutoCLIP  =======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_clip_default()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="A1_clip_default" duration-ms="37889" started-at="2017-11-09T17:12:05Z" finished-at="2017-11-09T17:12:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_clip_default -->
        <test-method status="PASS" signature="A2_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="A2_makeCall" duration-ms="72883" started-at="2017-11-09T17:12:43Z" finished-at="2017-11-09T17:13:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_makeCall -->
        <test-method status="PASS" signature="A3_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="A3_makeCall" duration-ms="53973" started-at="2017-11-09T17:13:56Z" finished-at="2017-11-09T17:14:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除AutoCLIP List的所有记录]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除AutoCLIP List后，3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_makeCall -->
        <test-method status="PASS" signature="B_deleteUsedRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="B_deleteUsedRecords" duration-ms="114900" started-at="2017-11-09T17:14:50Z" finished-at="2017-11-09T17:16:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Delete Used Records----]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线第1次呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线第2次呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_deleteUsedRecords -->
        <test-method status="PASS" signature="C_OnlyKeepMissedCallRecords()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="C_OnlyKeepMissedCallRecords" duration-ms="62396" started-at="2017-11-09T17:16:45Z" finished-at="2017-11-09T17:17:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Only Keep Missed Call Records----]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，被叫接听--预期不会生成cliplist]]>
            </line>
            <line>
              <![CDATA[    Error: 被叫接听，检查AutoCLIP List生成了记录]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，被叫未接--预期生成cliplist]]>
            </line>
            <line>
              <![CDATA[    Pass:  被叫未接，检查AutoCLIP List生成记录]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_OnlyKeepMissedCallRecords -->
        <test-method status="PASS" signature="D_MatchOutgoingTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="D_MatchOutgoingTrunk" duration-ms="114675" started-at="2017-11-09T17:17:47Z" finished-at="2017-11-09T17:19:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----启用Match Outgoing Trunk----]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Extension Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Called Number检测]]>
            </line>
            <line>
              <![CDATA[    Pass: AutoCLIP List--Trunk检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_MatchOutgoingTrunk -->
        <test-method status="PASS" signature="E_Disable_AutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="E_Disable_AutoCLIP" duration-ms="84970" started-at="2017-11-09T17:19:42Z" finished-at="2017-11-09T17:21:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----不启用AutoCLIP----]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期：分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Disable_AutoCLIP -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP@18f65a4]" name="AfterClass" is-config="true" duration-ms="13166" started-at="2017-11-09T17:21:07Z" finished-at="2017-11-09T17:21:20Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======   AutoCLIP   ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.AutoCLIP -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="BeforeClass" is-config="true" duration-ms="35369" started-at="2017-11-09T18:19:08Z" finished-at="2017-11-09T18:19:44Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Callback  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="Register" is-config="true" duration-ms="6157" started-at="2017-11-09T18:19:44Z" finished-at="2017-11-09T18:19:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 被测设备注册分机1000，辅助1：分机3001，辅助2：分机2000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="FAIL" signature="A_add_callback()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="A_add_callback" duration-ms="47140" started-at="2017-11-09T18:19:50Z" finished-at="2017-11-09T18:20:37Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'data' of null
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 23 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'data' of null
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 23 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:649)
	at com.yeastar.swebtest.driver.SwebDriver.listGetId(SwebDriver.java:366)
	at com.yeastar.swebtest.driver.SwebDriver.comboboxSet(SwebDriver.java:461)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.A_add_callback(Callback.java:61)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback2，CallbackThrough：SPS1，DelayBeforeCallback：10，Strip：1，Prepend：311，Destination：IVR1（6500）]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_callback -->
        <test-method status="FAIL" signature="B_editInbound1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="B_editInbound1" duration-ms="15646" started-at="2017-11-09T18:20:37Z" finished-at="2017-11-09T18:20:53Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222852602.11.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.B_editInbound1(Callback.java:69)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 23 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Callback1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editInbound1 -->
        <test-method status="FAIL" signature="C_calldefault1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="C_calldefault1_sip" duration-ms="28672" started-at="2017-11-09T18:20:53Z" finished-at="2017-11-09T18:21:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会响铃 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会响铃 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.C_calldefault1_sip(Callback.java:86)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，等待2秒挂断通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期3001会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会响铃 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_calldefault1_sip -->
        <test-method status="FAIL" signature="C_calldefault2_sps()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="C_calldefault2_sps" duration-ms="28630" started-at="2017-11-09T18:21:21Z" finished-at="2017-11-09T18:21:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期2000会响铃 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期2000会响铃 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.C_calldefault2_sps(Callback.java:101)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期2000会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2000会响铃 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_calldefault2_sps -->
        <test-method status="FAIL" signature="D_editInbound1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="D_editInbound1" duration-ms="16035" started-at="2017-11-09T18:21:50Z" finished-at="2017-11-09T18:22:06Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222925917.12.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.D_editInbound1(Callback.java:117)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 25 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628
	at sun.reflect.GeneratedConstructorAccessor36.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Callback2]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_editInbound1 -->
        <test-method status="FAIL" signature="E_callbackThroughSPS()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="E_callbackThroughSPS" duration-ms="28680" started-at="2017-11-09T18:22:06Z" finished-at="2017-11-09T18:22:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期辅助2的2000分机响铃 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期辅助2的2000分机响铃 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.E_callbackThroughSPS(Callback.java:134)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,等待2秒挂断通话--预期通过sps外线回拨到分机2000]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期辅助2的2000分机响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期辅助2的2000分机响铃 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_callbackThroughSPS -->
        <test-method status="FAIL" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="F_delete" duration-ms="15957" started-at="2017-11-09T18:22:35Z" finished-at="2017-11-09T18:22:51Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222970589.13.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (485, 417). Other element would receive the click: <label id="st-callback-delay-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default x-unselectable" style="padding-right:5px;width:180px;" for="st-callback-delay-inputEl">...</label>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.F_delete(Callback.java:151)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (485, 417). Other element would receive the click: <label id="st-callback-delay-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default x-unselectable" style="padding-right:5px;width:180px;" for="st-callback-delay-inputEl">...</label>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628
	at sun.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="FAIL" signature="G_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="G_Recovery" duration-ms="15678" started-at="2017-11-09T18:22:51Z" finished-at="2017-11-09T18:23:06Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222986234.14.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback.G_Recovery(Callback.java:199)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (484, 387). Other element would receive the click: <div id="form-1811-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 21 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir45124_659}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: cc4665db85d45c26b4942044380fb628
	at sun.reflect.GeneratedConstructorAccessor37.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Recovery -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback@e52dcd]" name="AfterClass" is-config="true" duration-ms="13419" started-at="2017-11-09T18:23:06Z" finished-at="2017-11-09T18:23:20Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Callback  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Callback -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="BeforeClass" is-config="true" duration-ms="64599" started-at="2017-11-09T17:21:20Z" finished-at="2017-11-09T17:22:25Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  PickupGroup  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_pickupgroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="A_add_pickupgroup1" duration-ms="77172" started-at="2017-11-09T17:22:25Z" finished-at="2017-11-09T17:23:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有PickupGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有PickupGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup1 -->
        <test-method status="PASS" signature="A_add_pickupgroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="A_add_pickupgroup2" duration-ms="30412" started-at="2017-11-09T17:23:42Z" finished-at="2017-11-09T17:24:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1105按*4截答--预期截答失败]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup2 -->
        <test-method status="PASS" signature="A_add_pickupgroup3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="A_add_pickupgroup3" duration-ms="30513" started-at="2017-11-09T17:24:12Z" finished-at="2017-11-09T17:24:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1105按*041100截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_pickupgroup3 -->
        <test-method status="PASS" signature="B_add_pickupgroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="B_add_pickupgroup2" duration-ms="54540" started-at="2017-11-09T17:24:43Z" finished-at="2017-11-09T17:25:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupExGroup,成员：ExtensionGroup1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入--预期分机1000响铃]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105按*4截答--预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_pickupgroup2 -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="C_delete" duration-ms="54320" started-at="2017-11-09T17:25:37Z" finished-at="2017-11-09T17:26:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupExGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupExGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupExGroup-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupExGroup-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup@168ddbd]" name="AfterClass" is-config="true" duration-ms="13551" started-at="2017-11-09T17:26:32Z" finished-at="2017-11-09T17:26:45Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  PickupGroup  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PickupGroup -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="BeforeClass" is-config="true" duration-ms="34432" started-at="2017-11-09T18:23:20Z" finished-at="2017-11-09T18:23:54Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Extension  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitFeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="InitFeatureCode" is-config="true" duration-ms="30772" started-at="2017-11-09T18:23:54Z" finished-at="2017-11-09T18:24:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 初始化特征码设置]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitFeatureCode -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="Register" is-config="true" duration-ms="27020" started-at="2017-11-09T18:24:25Z" finished-at="2017-11-09T18:24:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 被测设备注册分机1000,1100,1101,1105，辅助2:2000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="FAIL" signature="A1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="A1_sip" duration-ms="44101" started-at="2017-11-09T18:24:52Z" finished-at="2017-11-09T18:25:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 录音失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  录音失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension.A1_sip(Extension.java:135)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 SIP内部分机互打：1000拨打1105,1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_sip -->
        <test-method status="PASS" signature="A2_sip()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="A2_sip" duration-ms="28006" started-at="2017-11-09T18:25:36Z" finished-at="2017-11-09T18:26:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 SIP内部分机互打：1000拨打1105，1105未接]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_sip -->
        <test-method status="PASS" signature="A3_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="A3_fxs" duration-ms="36297" started-at="2017-11-09T18:26:04Z" finished-at="2017-11-09T18:26:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 FXS分机：1000拨打1106，预期辅助2的2000分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_fxs -->
        <test-method status="PASS" signature="A4_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="A4_fxs" duration-ms="38798" started-at="2017-11-09T18:26:40Z" finished-at="2017-11-09T18:27:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 FXS分机：2000拨打51000，预期1000分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_fxs -->
        <test-method status="PASS" signature="B1_AttendTranfer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="B1_AttendTranfer" duration-ms="51017" started-at="2017-11-09T18:27:19Z" finished-at="2017-11-09T18:28:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1100按*31105转移给分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105为Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AttendTranfer -->
        <test-method status="PASS" signature="B2_AttendTranferTimeout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="B2_AttendTranferTimeout" duration-ms="53963" started-at="2017-11-09T18:28:10Z" finished-at="2017-11-09T18:29:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1100按*31105转移给分机1105，超时恢复通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AttendTranferTimeout -->
        <test-method status="PASS" signature="B3_BlindTransfer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="B3_BlindTransfer" duration-ms="47443" started-at="2017-11-09T18:29:04Z" finished-at="2017-11-09T18:29:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1100按*031105转移给分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期为HangUp状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_BlindTransfer -->
        <test-method status="PASS" signature="C1_callpark()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="C1_callpark" duration-ms="46279" started-at="2017-11-09T18:29:52Z" finished-at="2017-11-09T18:30:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1100按*6将通话停泊]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp状态]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6900,恢复通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_callpark -->
        <test-method status="PASS" signature="C2_callpark()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="C2_callpark" duration-ms="54346" started-at="2017-11-09T18:30:38Z" finished-at="2017-11-09T18:31:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,1100按*066950将通话停泊]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp状态]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105拨打6950,恢复通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_callpark -->
        <test-method status="PASS" signature="D1_callforward()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="D1_callforward" duration-ms="32439" started-at="2017-11-09T18:31:32Z" finished-at="2017-11-09T18:32:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*711105将通话总是转移到1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,预期1105响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_callforward -->
        <test-method status="PASS" signature="D2_cancellForward()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="D2_cancellForward" duration-ms="30483" started-at="2017-11-09T18:32:05Z" finished-at="2017-11-09T18:32:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*071取消通话总是转移]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105为HangUp]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_cancellForward -->
        <test-method status="PASS" signature="E1_whenbusy()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="E1_whenbusy" duration-ms="56347" started-at="2017-11-09T18:32:35Z" finished-at="2017-11-09T18:33:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*721105忙时转移到1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100保持通话，1101拨打1100--预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_whenbusy -->
        <test-method status="FAIL" signature="E2_cancelWhenBusy()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="E2_cancelWhenBusy" duration-ms="53034" started-at="2017-11-09T18:33:32Z" finished-at="2017-11-09T18:34:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1101挂断状态 【预期：4 实际：3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1101挂断状态 【预期：4 实际：3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension.E2_cancelWhenBusy(Extension.java:337)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*072取消忙时转移]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100,预期1100响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Ring]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100保持通话，1101拨打1100--预期1101挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1101挂断状态 【预期：4 实际：3】.jpg" target="_blank">Error: 预期1101挂断状态 【预期：4 实际：3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_cancelWhenBusy -->
        <test-method status="FAIL" signature="F1_NoAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="F1_NoAnswer" duration-ms="58796" started-at="2017-11-09T18:34:25Z" finished-at="2017-11-09T18:35:23Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension.F1_NoAnswer(Extension.java:354)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*731105无应答时转移到1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃状态]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100，超时不接，预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [1105] 实际：1105 [1105(from 1100)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_NoAnswer -->
        <test-method status="PASS" signature="F2_NoAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="F2_NoAnswer" duration-ms="55135" started-at="2017-11-09T18:35:23Z" finished-at="2017-11-09T18:36:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*073取消无应答转移]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100，超时不接，1000被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为HangUp]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_NoAnswer -->
        <test-method status="FAIL" signature="G1_dnd()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="G1_dnd" duration-ms="26769" started-at="2017-11-09T18:36:19Z" finished-at="2017-11-09T18:36:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000为HangUp 【预期：4 实际：3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000为HangUp 【预期：4 实际：3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension.G1_dnd(Extension.java:378)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*74启用免打扰]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100，预期无法呼入]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1000为HangUp 【预期：4 实际：3】.jpg" target="_blank">Error: 预期1000为HangUp 【预期：4 实际：3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_dnd -->
        <test-method status="PASS" signature="G2_canceldnd()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="G2_canceldnd" duration-ms="30313" started-at="2017-11-09T18:36:45Z" finished-at="2017-11-09T18:37:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*074关闭免打扰]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1100，预期正常呼入]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_canceldnd -->
        <test-method status="PASS" signature="H1_resetToDefault()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="H1_resetToDefault" duration-ms="10099" started-at="2017-11-09T18:37:16Z" finished-at="2017-11-09T18:37:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打*70恢复默认值]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_resetToDefault -->
        <test-method status="PASS" signature="I_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="I_Voicemail" duration-ms="78361" started-at="2017-11-09T18:37:26Z" finished-at="2017-11-09T18:38:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1105，1105未接，到voicemail]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_Voicemail -->
        <test-method status="PASS" signature="J_internal()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="J_internal" duration-ms="49326" started-at="2017-11-09T18:38:44Z" finished-at="2017-11-09T18:39:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1105，1105接听，1105按*1进行一键录音]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_internal -->
        <test-method status="PASS" signature="K1_check_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="K1_check_Voicemail" duration-ms="25496" started-at="2017-11-09T18:39:33Z" finished-at="2017-11-09T18:39:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1105登录，查看存在1000留下的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1000(1000)]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_check_Voicemail -->
        <test-method status="PASS" signature="K2_Check_OneTouchRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="K2_Check_OneTouchRecord" duration-ms="4781" started-at="2017-11-09T18:39:59Z" finished-at="2017-11-09T18:40:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1105登录，查看存在1键录音]]>
            </line>
            <line>
              <![CDATA[    Pass:  正确检测到录音文件]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_Check_OneTouchRecord -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension@93d195]" name="AfterClass" is-config="true" duration-ms="13860" started-at="2017-11-09T18:40:04Z" finished-at="2017-11-09T18:40:18Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Extension  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Extension -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@1712b94]" name="BeforeClass" is-config="true" duration-ms="35613" started-at="2017-11-09T16:31:53Z" finished-at="2017-11-09T16:32:28Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  时间条件—Holiday  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addHoliday1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@1712b94]" name="A_addHoliday1" duration-ms="30901" started-at="2017-11-09T16:32:28Z" finished-at="2017-11-09T16:32:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByDay：2017-10-01~2025-12-31]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByMonth：1月1号-12月31号]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByWeek：5月第3个周四]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByWeek2：12月最后1个周日]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addHoliday1 -->
        <test-method status="PASS" signature="B_editHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@1712b94]" name="B_editHoliday" duration-ms="16997" started-at="2017-11-09T16:32:59Z" finished-at="2017-11-09T16:33:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑HolidayByWeek：8月第4个周六]]>
            </line>
            <line>
              <![CDATA[    Pass: 编辑Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editHoliday -->
        <test-method status="PASS" signature="C_deleteHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@1712b94]" name="C_deleteHoliday" duration-ms="45671" started-at="2017-11-09T16:33:16Z" finished-at="2017-11-09T16:34:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：HolidayByWeek-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：HolidayByWeek-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：HolidayByWeek-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：HolidayByWeek-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：HolidayByWeek2-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：HolidayByWeek2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：HolidayByWeek2-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：HolidayByWeek2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_deleteHoliday -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday@1712b94]" name="AfterClass" is-config="true" duration-ms="13460" started-at="2017-11-09T16:34:02Z" finished-at="2017-11-09T16:34:15Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  时间条件-Holiday  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Holiday -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="BeforeClass" is-config="true" duration-ms="36423" started-at="2017-11-09T17:58:34Z" finished-at="2017-11-09T17:59:11Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Queue  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitQueue()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="InitQueue" is-config="true" duration-ms="42534" started-at="2017-11-09T17:59:11Z" finished-at="2017-11-09T17:59:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitQueue -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="Register" is-config="true" duration-ms="29163" started-at="2017-11-09T17:59:53Z" finished-at="2017-11-09T18:00:23Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A_add_queue6701()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="A_add_queue6701" duration-ms="20604" started-at="2017-11-09T18:00:23Z" finished-at="2017-11-09T18:00:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Queue6701,Password:123，FailoverDestination：分机1000，Static Agents：空]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_queue6701 -->
        <test-method status="PASS" signature="A_add_queue6702()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="A_add_queue6702" duration-ms="31123" started-at="2017-11-09T18:00:43Z" finished-at="2017-11-09T18:01:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Queue6702,Ring Strategy：RingAll，Static Agents：ExtensionGroup1，Agent Announcement：prompt1，Caller Max Wait Time:100,按9到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_queue6702 -->
        <test-method status="PASS" signature="A_editInbound()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="A_editInbound" duration-ms="36457" started-at="2017-11-09T18:01:14Z" finished-at="2017-11-09T18:01:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1到Queue6702]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_editInbound -->
        <test-method status="PASS" signature="B_failtoextension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="B_failtoextension" duration-ms="29544" started-at="2017-11-09T18:01:51Z" finished-at="2017-11-09T18:02:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期到FailDestination--1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_failtoextension -->
        <test-method status="PASS" signature="C_agent1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="C_agent1" duration-ms="26021" started-at="2017-11-09T18:02:20Z" finished-at="2017-11-09T18:02:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6701*加入队列6701，密码：123]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1100输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent1 -->
        <test-method status="FAIL" signature="C_agent2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="C_agent2" duration-ms="22332" started-at="2017-11-09T18:02:46Z" finished-at="2017-11-09T18:03:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:257)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.C_agent2(Queue.java:155)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期动态坐席1100接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1105 [1105] 实际：1100 [1100]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent2 -->
        <test-method status="PASS" signature="C_agent3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="C_agent3" duration-ms="13208" started-at="2017-11-09T18:03:09Z" finished-at="2017-11-09T18:03:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6700**退出队列6701]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1100退出队列6701]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent3 -->
        <test-method status="PASS" signature="C_agent4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="C_agent4" duration-ms="28097" started-at="2017-11-09T18:03:22Z" finished-at="2017-11-09T18:03:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6701，预期FailDestina-1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_agent4 -->
        <test-method status="FAIL" signature="D_RingAll1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="D_RingAll1" duration-ms="39274" started-at="2017-11-09T18:03:50Z" finished-at="2017-11-09T18:04:29Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.D_RingAll1(Queue.java:195)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6702,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6702(1100)] 实际：1000 [6702(1100)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_RingAll1 -->
        <test-method status="PASS" signature="E_maxWaitTime()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="E_maxWaitTime" duration-ms="182107" started-at="2017-11-09T18:04:29Z" finished-at="2017-11-09T18:07:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,100s内无人接就挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 2001预期HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_maxWaitTime -->
        <test-method status="PASS" signature="F_key()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="F_key" duration-ms="44938" started-at="2017-11-09T18:07:31Z" finished-at="2017-11-09T18:08:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到Queue6702,按9到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101预期挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_key -->
        <test-method status="FAIL" signature="G1_edit6701_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="G1_edit6701_1" duration-ms="35442" started-at="2017-11-09T18:08:16Z" finished-at="2017-11-09T18:08:52Z">
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should be visible {By.xpath: .//a[starts-with(@class,'css_apply') and text()='Apply']}
Element: '<a class="css_apply" displayed:false></a>']]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should be visible {By.xpath: .//a[starts-with(@class,'css_apply') and text()='Apply']}
Element: '<a class="css_apply" displayed:false></a>'
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222131530.6.png
Timeout: 15 s.
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:66)
	at com.codeborne.selenide.impl.WebElementSource.findAndAssertElementIsVisible(WebElementSource.java:72)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.driver.SwebDriver.ys_apply(SwebDriver.java:625)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.G1_edit6701_1(Queue.java:246)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑Queue6701,启用Empty，不启用Leave When Empty]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_edit6701_1 -->
        <test-method status="FAIL" signature="G2_joinEmpty()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="G2_joinEmpty" duration-ms="24911" started-at="2017-11-09T18:08:52Z" finished-at="2017-11-09T18:09:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.G2_joinEmpty(Queue.java:257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6701--预期：队列无有效坐席，仍可成功呼入队列]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期Talking状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6701 实际：1000 [6701(1000)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_joinEmpty -->
        <test-method status="FAIL" signature="G3_edit6701_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="G3_edit6701_2" duration-ms="16234" started-at="2017-11-09T18:09:17Z" finished-at="2017-11-09T18:09:33Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222172672.7.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.G3_edit6701_2(Queue.java:266)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 19 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38084_9263}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 70a41fa410604e93cd4c104b5fcc7ec5
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑Queue6701，启用Empty，启用Leave When Empty]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_edit6701_2 -->
        <test-method status="PASS" signature="G4_leaveWhenEmpty()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="G4_leaveWhenEmpty" duration-ms="39603" started-at="2017-11-09T18:09:33Z" finished-at="2017-11-09T18:10:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6701--预期：队列无有效坐席--failover 1000分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_leaveWhenEmpty -->
        <test-method status="FAIL" signature="H1_Linear()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="H1_Linear" duration-ms="16112" started-at="2017-11-09T18:10:12Z" finished-at="2017-11-09T18:10:29Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222228451.8.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.H1_Linear(Queue.java:296)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 25 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38084_9263}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 70a41fa410604e93cd4c104b5fcc7ec5
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑6701，成员选择1105，1101,1102，响铃策略线性响铃]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_Linear -->
        <test-method status="FAIL" signature="H2_Linear()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="H2_Linear" duration-ms="11637" started-at="2017-11-09T18:10:29Z" finished-at="2017-11-09T18:10:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1105预期响铃 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1105预期响铃 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.H2_Linear(Queue.java:314)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6701，轮到1102响铃时接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\1105预期响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 1105预期响铃 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_Linear -->
        <test-method status="FAIL" signature="I_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="I_delete" duration-ms="16108" started-at="2017-11-09T18:10:40Z" finished-at="2017-11-09T18:10:56Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222256199.9.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.I_delete(Queue.java:331)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2627-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 21 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38084_9263}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 70a41fa410604e93cd4c104b5fcc7ec5
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I_delete -->
        <test-method status="FAIL" signature="J_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="J_Recovery" duration-ms="15754" started-at="2017-11-09T18:10:56Z" finished-at="2017-11-09T18:11:12Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510222271943.10.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <label id="st-queue-musiconhold-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default  x-unselectable" style="padding-right:5px;width:175px;" for="st-queue-musiconhold-inputEl">...</label>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue.J_Recovery(Queue.java:380)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <label id="st-queue-musiconhold-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default  x-unselectable" style="padding-right:5px;width:175px;" for="st-queue-musiconhold-inputEl">...</label>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38084_9263}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 70a41fa410604e93cd4c104b5fcc7ec5
	at sun.reflect.GeneratedConstructorAccessor33.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_Recovery -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue@f2b07d]" name="AfterClass" is-config="true" duration-ms="13739" started-at="2017-11-09T18:11:12Z" finished-at="2017-11-09T18:11:26Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Queue  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Queue -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="BeforeClass" is-config="true" duration-ms="33994" started-at="2017-11-09T18:11:26Z" finished-at="2017-11-09T18:12:00Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Conference  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="Register" is-config="true" duration-ms="17820" started-at="2017-11-09T18:12:00Z" finished-at="2017-11-09T18:12:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 被测设备注册分机1000、1100、1105，辅助1：分机3001，辅助2：分机2001]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="AA1_InitConference()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="AA1_InitConference" duration-ms="38719" started-at="2017-11-09T18:12:18Z" finished-at="2017-11-09T18:12:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- AA1_InitConference -->
        <test-method status="PASS" signature="A_add_conference1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="A_add_conference1" duration-ms="8017" started-at="2017-11-09T18:12:56Z" finished-at="2017-11-09T18:13:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Conference6401，默认设置]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_conference1 -->
        <test-method status="PASS" signature="A_add_conference2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="A_add_conference2" duration-ms="13408" started-at="2017-11-09T18:13:04Z" finished-at="2017-11-09T18:13:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建Conference6402，与会者密码123，启用等候管理员，提示音：分机号码，Allow Participant to Invite：不启用，管理员密码：456，管理员：1000、1100]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_conference2 -->
        <test-method status="PASS" signature="B_editInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="B_editInRoute1" duration-ms="35664" started-at="2017-11-09T18:13:18Z" finished-at="2017-11-09T18:13:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1到Conference6402]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editInRoute1 -->
        <test-method status="PASS" signature="C_CallIn()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="C_CallIn" duration-ms="76204" started-at="2017-11-09T18:13:53Z" finished-at="2017-11-09T18:15:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有2个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105拨打6401呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有3个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000退出会议室6401]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有2个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallIn -->
        <test-method status="PASS" signature="D_callin1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin1" duration-ms="17884" started-at="2017-11-09T18:15:10Z" finished-at="2017-11-09T18:15:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入6402，输入与会密码123]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有1个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin1 -->
        <test-method status="PASS" signature="D_callin2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin2" duration-ms="17779" started-at="2017-11-09T18:15:28Z" finished-at="2017-11-09T18:15:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入6402，输入管理员密码456]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有2个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin2 -->
        <test-method status="PASS" signature="D_callin3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin3" duration-ms="12778" started-at="2017-11-09T18:15:45Z" finished-at="2017-11-09T18:15:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6402呼入6402，无需密码]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有3个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin3 -->
        <test-method status="PASS" signature="D_callin4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin4" duration-ms="17781" started-at="2017-11-09T18:15:58Z" finished-at="2017-11-09T18:16:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6402呼入6402，输入与会者密码123]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有4个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin4 -->
        <test-method status="PASS" signature="D_callin5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin5" duration-ms="9001" started-at="2017-11-09T18:16:16Z" finished-at="2017-11-09T18:16:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105按#1100，邀请1100加入会议，预期：邀请失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期不会响铃]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin5 -->
        <test-method status="PASS" signature="D_callin6()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="D_callin6" duration-ms="27132" started-at="2017-11-09T18:16:25Z" finished-at="2017-11-09T18:16:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 挂断所有通话,所有成员退出会议室6402]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6402有0个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_callin6 -->
        <test-method status="PASS" signature="E_invite()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="E_invite" duration-ms="34458" started-at="2017-11-09T18:16:52Z" finished-at="2017-11-09T18:17:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105呼入到会议室6401]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105按#...1100邀请分机1100加入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100预期响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_invite -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="F_delete" duration-ms="49235" started-at="2017-11-09T18:17:26Z" finished-at="2017-11-09T18:18:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Conference6401-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6401-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Conference6401-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6401-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Conference6402-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Conference6402-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Conference6402-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Conference6402-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="G_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="G_recovery" duration-ms="33994" started-at="2017-11-09T18:18:16Z" finished-at="2017-11-09T18:18:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_recovery -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference@4a52ec]" name="AfterClass" is-config="true" duration-ms="18645" started-at="2017-11-09T18:18:50Z" finished-at="2017-11-09T18:19:08Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Conference  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Conference -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="BeforeClass" is-config="true" duration-ms="61895" started-at="2017-11-09T17:44:14Z" finished-at="2017-11-09T17:45:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  CustomPrompts  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有提示音]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_record()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="A_record" duration-ms="40952" started-at="2017-11-09T17:45:16Z" finished-at="2017-11-09T17:45:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_record -->
        <test-method status="PASS" signature="B_play()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="B_play" duration-ms="46753" started-at="2017-11-09T17:45:57Z" finished-at="2017-11-09T17:46:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_play -->
        <test-method status="PASS" signature="C_reRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="C_reRecord" duration-ms="46596" started-at="2017-11-09T17:46:44Z" finished-at="2017-11-09T17:47:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_reRecord -->
        <test-method status="PASS" signature="D_upload()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="D_upload" duration-ms="11993" started-at="2017-11-09T17:47:30Z" finished-at="2017-11-09T17:47:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
            </line>
            <line>
              <![CDATA[    Pass: 导入提示音autotestprompt]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_upload -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts@320068]" name="AfterClass" is-config="true" duration-ms="13464" started-at="2017-11-09T17:47:42Z" finished-at="2017-11-09T17:47:56Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  CustomPrompts  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.CustomPrompts -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="BeforeClass" is-config="true" duration-ms="46998" started-at="2017-11-09T18:50:29Z" finished-at="2017-11-09T18:51:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Disa_PinList  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitDisa_PinList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="InitDisa_PinList" is-config="true" duration-ms="16518" started-at="2017-11-09T18:51:16Z" finished-at="2017-11-09T18:51:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】初始化DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化DISA]]>
            </line>
            <line>
              <![CDATA[  【执行操作】初始化PIN LIST]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化PIN LIST]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitDisa_PinList -->
        <test-method status="PASS" signature="A_CreatePin()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="A_CreatePin" duration-ms="17112" started-at="2017-11-09T18:51:32Z" finished-at="2017-11-09T18:51:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--创建PinList--]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_CreatePin -->
        <test-method status="PASS" signature="B_CreateDisa()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="B_CreateDisa" duration-ms="36101" started-at="2017-11-09T18:51:49Z" finished-at="2017-11-09T18:52:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--创建DISA1--]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_CreateDisa -->
        <test-method status="PASS" signature="C_EditInroute()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="C_EditInroute" duration-ms="86510" started-at="2017-11-09T18:52:25Z" finished-at="2017-11-09T18:53:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--编辑呼入路由--]]>
            </line>
            <line>
              <![CDATA[  【执行操作】辅助设备2通过sps呼叫被测设备1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pin1List]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_EditInroute -->
        <test-method status="PASS" signature="D_EditDisa()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="D_EditDisa" duration-ms="98690" started-at="2017-11-09T18:53:52Z" finished-at="2017-11-09T18:55:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--编辑DISA1，Password：选择Single Pin--]]>
            </line>
            <line>
              <![CDATA[  【执行操作】辅助设备1通过SIP1拨打到被测设备，在进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pin1List]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_EditDisa -->
        <test-method status="PASS" signature="E_Disa1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="E_Disa1" duration-ms="26647" started-at="2017-11-09T18:55:31Z" finished-at="2017-11-09T18:55:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】通过SIP1呼入,输入完pin码后，不输人数字等待15s后通话被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pin1List]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Disa1 -->
        <test-method status="PASS" signature="G_Delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="G_Delete" duration-ms="64943" started-at="2017-11-09T18:55:57Z" finished-at="2017-11-09T18:57:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--删除DISA--]]>
            </line>
            <line>
              <![CDATA[  【执行操作】批量删除DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量删除DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Delete -->
        <test-method status="PASS" signature="G_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="G_Recovery" duration-ms="33046" started-at="2017-11-09T18:57:02Z" finished-at="2017-11-09T18:57:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Recovery -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList@17e1b0c]" name="AfterClass" is-config="true" duration-ms="13364" started-at="2017-11-09T18:57:35Z" finished-at="2017-11-09T18:57:49Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  Disa_PinList  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Disa_PinList -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="BeforeClass" is-config="true" duration-ms="70521" started-at="2017-11-09T17:26:45Z" finished-at="2017-11-09T17:27:56Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  PagingIntercom  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_paging1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="A_add_paging1" duration-ms="71912" started-at="2017-11-09T17:27:56Z" finished-at="2017-11-09T17:29:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有广播组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有广播组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6300：单工，不启用*Answer，成员：1100,1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6300，预期分机1100、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_paging1 -->
        <test-method status="PASS" signature="A_add_paging2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="A_add_paging2" duration-ms="66521" started-at="2017-11-09T17:29:08Z" finished-at="2017-11-09T17:30:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6301：双工，启用*Answer成员：ExtensionGroup1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6301，预期分机1100、1101、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101按*Answer--预期1100、1105会挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_paging2 -->
        <test-method status="PASS" signature="B_intercom()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="B_intercom" duration-ms="33803" started-at="2017-11-09T17:30:14Z" finished-at="2017-11-09T17:30:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*51105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_intercom -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="C_delete" duration-ms="60615" started-at="2017-11-09T17:30:48Z" finished-at="2017-11-09T17:31:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Paging6301-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Paging6301-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Paging6301-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Paging6301-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom@6d64ab]" name="AfterClass" is-config="true" duration-ms="13206" started-at="2017-11-09T17:31:49Z" finished-at="2017-11-09T17:32:02Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  PagingIntercom  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.PagingIntercom -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="BeforeClass" is-config="true" duration-ms="33563" started-at="2017-11-09T17:36:08Z" finished-at="2017-11-09T17:36:41Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  RingGroup  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitRingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="InitRingGroup" is-config="true" duration-ms="36568" started-at="2017-11-09T17:36:41Z" finished-at="2017-11-09T17:37:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitRingGroup -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="Register" is-config="true" duration-ms="35021" started-at="2017-11-09T17:37:18Z" finished-at="2017-11-09T17:37:53Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A_add_RingGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="A_add_RingGroup1" duration-ms="56616" started-at="2017-11-09T17:37:53Z" finished-at="2017-11-09T17:38:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建RingGroup6201,Mem:ExtensionGroup1,其它默认]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6201，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1101、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_RingGroup1 -->
        <test-method status="PASS" signature="B_edit_RingGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="B_edit_RingGroup1" duration-ms="76675" started-at="2017-11-09T17:38:49Z" finished-at="2017-11-09T17:40:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑RingGroup6201，成员响铃时间：15s，Failover：分机1102]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6201，预期1100、1101、1105响铃15s后挂断，1102开始响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1102--Idle]]>
            </line>
            <line>
              <![CDATA[    Pass:  1102--Ring]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_edit_RingGroup1 -->
        <test-method status="PASS" signature="C_add_RingGroup2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="C_add_RingGroup2" duration-ms="144167" started-at="2017-11-09T17:40:06Z" finished-at="2017-11-09T17:42:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建响铃组RingSequentially6202，Sequentially,每个成员20s,成员：1000、1100、1101、1105]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inroute1到RingSequentially6202]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到RingSequentially6202]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring20s--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring--Answer]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 轮到1105响铃的时候，1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_add_RingGroup2 -->
        <test-method status="PASS" signature="D_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="D_delete" duration-ms="57214" started-at="2017-11-09T17:42:30Z" finished-at="2017-11-09T17:43:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：RingGroup6201-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：RingGroup6201-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：RingGroup6201-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：RingSequentially6202-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：RingSequentially6202-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：RingSequentially6202-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：RingSequentially6202-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup@16aaa8d]" name="AfterClass" is-config="true" duration-ms="46556" started-at="2017-11-09T17:43:27Z" finished-at="2017-11-09T17:44:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复呼入路由InRoute1到分机1000]]>
            </line>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  RingGroup  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.RingGroup -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="BeforeClass" is-config="true" duration-ms="36832" started-at="2017-11-09T17:47:56Z" finished-at="2017-11-09T17:48:32Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  IVR  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitIVR()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="InitIVR" is-config="true" duration-ms="61010" started-at="2017-11-09T17:48:32Z" finished-at="2017-11-09T17:49:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建IVR6502,默认设置]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitIVR -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="Register" is-config="true" duration-ms="18349" started-at="2017-11-09T17:49:33Z" finished-at="2017-11-09T17:49:52Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="FAIL" signature="A_add()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="A_add" duration-ms="73083" started-at="2017-11-09T17:49:52Z" finished-at="2017-11-09T17:51:05Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//a[starts-with(@class,'css_apply') and text()='Apply']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//a[starts-with(@class,'css_apply') and text()='Apply']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221064800.0.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <a style="cursor: pointer;" class="css_apply">...</a> is not clickable at point (1604, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.driver.SwebDriver.ys_apply(SwebDriver.java:625)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.A_add(IVR.java:107)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <a style="cursor: pointer;" class="css_apply">...</a> is not clickable at point (1604, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 19 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建IVRtest1，提示音选择autotestprompt，勾选Dial Extensions，勾选Dial Outbound Routes，勾选Dial to Check Voicemail按0到分机1000，按1到1000的Voicemail，按5到Dial by Name，按#到hungup，按*到Select an Option，Timeout到customPrompt：prompt1，Invalid到分机1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add -->
        <test-method status="FAIL" signature="B_editInbound1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="B_editInbound1" duration-ms="15550" started-at="2017-11-09T17:51:05Z" finished-at="2017-11-09T17:51:20Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221080364.1.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.B_editInbound1(IVR.java:113)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 24 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到IVRtest1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_editInbound1 -->
        <test-method status="FAIL" signature="C_dialextensions()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="C_dialextensions" duration-ms="35091" started-at="2017-11-09T17:51:20Z" finished-at="2017-11-09T17:51:55Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221115494.2.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.tools.pjsip.PjsipApp.Pj_Answer_Call(PjsipApp.java:243)
	at com.yeastar.swebtest.tools.pjsip.PjsipApp.Pj_Answer_Call(PjsipApp.java:226)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.C_dialextensions(IVR.java:133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨分机1103]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_dialextensions -->
        <test-method status="FAIL" signature="D_dialoutbound()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="D_dialoutbound" duration-ms="45653" started-at="2017-11-09T17:51:55Z" finished-at="2017-11-09T17:52:41Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//*[@src='images/taskbar-main.png']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221161134.3.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:253)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.D_dialoutbound(IVR.java:150)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <img src="images/taskbar-main.png" width="100%" height="100%" id="ext-element-8"> is not clickable at point (55, 23). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-90"></div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 17 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 32 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入IVRtest1,直拨3333通过sps外线呼出]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_dialoutbound -->
        <test-method status="FAIL" signature="E_key0toExtension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="E_key0toExtension" duration-ms="34259" started-at="2017-11-09T17:52:41Z" finished-at="2017-11-09T17:53:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.E_key0toExtension(IVR.java:163)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6501(1000)] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_key0toExtension -->
        <test-method status="FAIL" signature="F_key1toVoicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="F_key1toVoicemail" duration-ms="34977" started-at="2017-11-09T17:53:15Z" finished-at="2017-11-09T17:53:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.F_key1toVoicemail(IVR.java:174)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按1到voicemail-1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6501(1000) 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_key1toVoicemail -->
        <test-method status="FAIL" signature="G_key5toDialName()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="G_key5toDialName" duration-ms="30150" started-at="2017-11-09T17:53:50Z" finished-at="2017-11-09T17:54:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1103为Ring状态 【预期：2 实际：0】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1103为Ring状态 【预期：2 实际：0】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.G_key5toDialName(IVR.java:187)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6501，按5到DialbyName,按957到分机1103]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\预期1103为Ring状态 【预期：2 实际：0】.jpg" target="_blank">Error: 预期1103为Ring状态 【预期：2 实际：0】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_key5toDialName -->
        <test-method status="FAIL" signature="H_keytoHangup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="H_keytoHangup" duration-ms="26604" started-at="2017-11-09T17:54:21Z" finished-at="2017-11-09T17:54:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:257)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.H_keytoHangup(IVR.java:202)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,按#挂断通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_keytoHangup -->
        <test-method status="FAIL" signature="I_keytoSelectOption()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="I_keytoSelectOption" duration-ms="38043" started-at="2017-11-09T17:54:47Z" finished-at="2017-11-09T17:55:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.I_keytoSelectOption(IVR.java:216)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1，按*到SelecttoOption--预期1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_keytoSelectOption -->
        <test-method status="PASS" signature="J_keytoTimeout()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="J_keytoTimeout" duration-ms="69324" started-at="2017-11-09T17:55:25Z" finished-at="2017-11-09T17:56:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6501，超时到prompt1]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_keytoTimeout -->
        <test-method status="FAIL" signature="K_keytoInvalid()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="K_keytoInvalid" duration-ms="35158" started-at="2017-11-09T17:56:34Z" finished-at="2017-11-09T17:57:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.K_keytoInvalid(IVR.java:250)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6501，按a错误按键到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6501(1105)] 实际：6501】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_keytoInvalid -->
        <test-method status="FAIL" signature="L_checkvoicemail()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="L_checkvoicemail" duration-ms="39563" started-at="2017-11-09T17:57:10Z" finished-at="2017-11-09T17:57:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.L_checkvoicemail(IVR.java:266)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入IVRtest1,直接拨打*02查看1000的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：6501(*02) 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_checkvoicemail -->
        <test-method status="FAIL" signature="M_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="M_delete" duration-ms="16121" started-at="2017-11-09T17:57:49Z" finished-at="2017-11-09T17:58:05Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Features"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221485178.4.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2079-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.M_delete(IVR.java:274)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (555, 397). Other element would receive the click: <div id="panel-2079-innerCt" data-ref="innerCt" style="" role="presentation" class="x-autocontainer-innerCt">...</div>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- M_delete -->
        <test-method status="FAIL" signature="N_editInbound2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="N_editInbound2" duration-ms="15688" started-at="2017-11-09T17:58:05Z" finished-at="2017-11-09T17:58:21Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,"control-panel")]//div[starts-with(@id,"set-lefttree")]//span[text()="Call Control"]}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/SwebTest/build/reports/tests/1510221500897.5.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <label id="key1action-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default  x-unselectable" style="padding-right:5px;width:175px;" for="key1action-inputEl">...</label>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy4.click(Unknown Source)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR.N_editInbound2(IVR.java:323)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span class="x-tree-node-text ">...</span> is not clickable at point (554, 367). Other element would receive the click: <label id="key1action-labelEl" data-ref="labelEl" class="x-form-item-label x-form-item-label-default  x-unselectable" style="padding-right:5px;width:175px;" for="key1action-inputEl">...</label>
  (Session info: chrome=57.0.2987.133)
  (Driver info: chromedriver=2.29.461591 (62ebf098771772160f391d75e589dc567915b233),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.29.461591 (62ebf098771772160f391d75e589dc567915b233), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir38236_30215}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=57.0.2987.133, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, unexpectedAlertBehaviour=}]
Session ID: 07aa02a957b74864a213201f75c062f4
	at sun.reflect.GeneratedConstructorAccessor30.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_editInbound2 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR@1f57539]" name="AfterClass" is-config="true" duration-ms="13425" started-at="2017-11-09T17:58:21Z" finished-at="2017-11-09T17:58:34Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  IVR ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.IVR -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="BeforeClass" is-config="true" duration-ms="51628" started-at="2017-11-09T17:00:22Z" finished-at="2017-11-09T17:01:14Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  OutboundRestriction  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="A_add_1" duration-ms="236976" started-at="2017-11-09T17:01:14Z" finished-at="2017-11-09T17:05:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，2分钟不能超过5通]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_1 -->
        <test-method status="PASS" signature="A_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="A_add_2" duration-ms="23683" started-at="2017-11-09T17:05:11Z" finished-at="2017-11-09T17:05:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 检查分机1100被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[    Pass:  查看分机1100状态已被限制，并取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_2 -->
        <test-method status="PASS" signature="A_add_3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="A_add_3" duration-ms="31395" started-at="2017-11-09T17:05:34Z" finished-at="2017-11-09T17:06:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_3 -->
        <test-method status="PASS" signature="B_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="B_add_1" duration-ms="175747" started-at="2017-11-09T17:06:06Z" finished-at="2017-11-09T17:09:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制：OutRestriction2，分机1102，2分钟呼出不能超过2通]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_1 -->
        <test-method status="PASS" signature="B_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="B_add_2" duration-ms="29624" started-at="2017-11-09T17:09:01Z" finished-at="2017-11-09T17:09:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 检查分机1102被限制呼出，取消呼出限制]]>
            </line>
            <line>
              <![CDATA[    Pass:  查看分机1102状态已被限制，并取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_2 -->
        <test-method status="PASS" signature="B_add_3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="B_add_3" duration-ms="31258" started-at="2017-11-09T17:09:31Z" finished-at="2017-11-09T17:10:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1102取消呼出限制后能正常呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_add_3 -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="C_delete" duration-ms="60432" started-at="2017-11-09T17:10:02Z" finished-at="2017-11-09T17:11:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：OutRestriction1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：OutRestriction2-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：OutRestriction2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction@1a8c74e]" name="AfterClass" is-config="true" duration-ms="13660" started-at="2017-11-09T17:11:03Z" finished-at="2017-11-09T17:11:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  OutboundRestriction  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.OutboundRestriction -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="BeforeClass" is-config="true" duration-ms="54196" started-at="2017-11-09T18:57:49Z" finished-at="2017-11-09T18:58:43Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  EmergencyNumber  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitEmergencyNumberTest()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="InitEmergencyNumberTest" is-config="true" duration-ms="11160" started-at="2017-11-09T18:58:43Z" finished-at="2017-11-09T18:58:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】初始化EmergencyNumber]]>
            </line>
            <line>
              <![CDATA[    Pass: 初始化EmergencyNumber]]>
            </line>
          </reporter-output>
        </test-method> <!-- InitEmergencyNumberTest -->
        <test-method status="PASS" signature="A_EmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="A_EmergencyNumber" duration-ms="118458" started-at="2017-11-09T18:58:54Z" finished-at="2017-11-09T19:00:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】----新增紧急号码----]]>
            </line>
            <line>
              <![CDATA[  【执行操作】分机B通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 进入紧急呼叫]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_EmergencyNumber -->
        <test-method status="PASS" signature="B_EditEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="B_EditEmergencyNumber" duration-ms="80318" started-at="2017-11-09T19:00:52Z" finished-at="2017-11-09T19:02:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---编辑紧急号码---]]>
            </line>
            <line>
              <![CDATA[  【执行操作】分机B通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 进入紧急呼叫]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_EditEmergencyNumber -->
        <test-method status="PASS" signature="C_DeleteEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="C_DeleteEmergencyNumber" duration-ms="54355" started-at="2017-11-09T19:02:13Z" finished-at="2017-11-09T19:03:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---删除紧急号码列表---]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除紧急呼叫]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除紧急呼叫]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_DeleteEmergencyNumber -->
        <test-method status="PASS" signature="D_BlukDelete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="D_BlukDelete" duration-ms="44854" started-at="2017-11-09T19:03:07Z" finished-at="2017-11-09T19:03:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---批量删除紧急号码---]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_BlukDelete -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber@32c52b]" name="AfterClass" is-config="true" duration-ms="8152" started-at="2017-11-09T19:03:52Z" finished-at="2017-11-09T19:04:00Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  EmergencyNumber  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.EmergencyNumber -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="BeforeClass" is-config="true" duration-ms="48767" started-at="2017-11-09T16:15:52Z" finished-at="2017-11-09T16:16:41Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======前置环境设置—BeforeTest======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="A1_addExtension" duration-ms="65766" started-at="2017-11-09T16:16:41Z" finished-at="2017-11-09T16:17:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量创建分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_addExtension -->
        <test-method status="PASS" signature="A2_editExtenName1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="A2_editExtenName1" duration-ms="25385" started-at="2017-11-09T16:17:46Z" finished-at="2017-11-09T16:18:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_editExtenName1 -->
        <test-method status="PASS" signature="A3_editExtenName2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="A3_editExtenName2" duration-ms="26735" started-at="2017-11-09T16:18:12Z" finished-at="2017-11-09T16:18:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_editExtenName2 -->
        <test-method status="PASS" signature="A4_addExtensionGroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="A4_addExtensionGroup" duration-ms="24812" started-at="2017-11-09T16:18:38Z" finished-at="2017-11-09T16:19:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_addExtensionGroup -->
        <test-method status="PASS" signature="B_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="B_addtrunk" duration-ms="53723" started-at="2017-11-09T16:19:03Z" finished-at="2017-11-09T16:19:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有VoIP外线]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip外线SIP1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_addtrunk -->
        <test-method status="FAIL" signature="C_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="C_addtrunk" duration-ms="39444" started-at="2017-11-09T16:19:57Z" finished-at="2017-11-09T16:20:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[IAX1注册失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: IAX1注册失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertNotEquals(YsAssert.java:912)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.assertTrunkStatus(YS_Trunk.java:233)
	at com.yeastar.swebtest.driver.YSMethod.YS_Trunk.addTrunk(YS_Trunk.java:191)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest.C_addtrunk(BeforeTest.java:104)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax外线IAX1]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\IAX1注册失败.jpg" target="_blank">Error: IAX1注册失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_addtrunk -->
        <test-method status="PASS" signature="D_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="D_addtrunk" duration-ms="40969" started-at="2017-11-09T16:20:36Z" finished-at="2017-11-09T16:21:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps外线SPS1]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_addtrunk -->
        <test-method status="PASS" signature="E_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="E_addtrunk" duration-ms="44459" started-at="2017-11-09T16:21:17Z" finished-at="2017-11-09T16:22:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx外线SPX1]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_addtrunk -->
        <test-method status="PASS" signature="F_addInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="F_addInRoute" duration-ms="54190" started-at="2017-11-09T16:22:02Z" finished-at="2017-11-09T16:22:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_addInRoute -->
        <test-method status="PASS" signature="G_addOutRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute1" duration-ms="31882" started-at="2017-11-09T16:22:56Z" finished-at="2017-11-09T16:23:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute1 -->
        <test-method status="PASS" signature="G_addOutRoute2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute2" duration-ms="14354" started-at="2017-11-09T16:23:28Z" finished-at="2017-11-09T16:23:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute2 -->
        <test-method status="PASS" signature="G_addOutRoute3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute3" duration-ms="12563" started-at="2017-11-09T16:23:42Z" finished-at="2017-11-09T16:23:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute3 -->
        <test-method status="PASS" signature="G_addOutRoute4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute4" duration-ms="14426" started-at="2017-11-09T16:23:55Z" finished-at="2017-11-09T16:24:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute4 -->
        <test-method status="PASS" signature="G_addOutRoute5()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute5" duration-ms="14663" started-at="2017-11-09T16:24:09Z" finished-at="2017-11-09T16:24:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute5 -->
        <test-method status="PASS" signature="G_addOutRoute6()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute6" duration-ms="14736" started-at="2017-11-09T16:24:24Z" finished-at="2017-11-09T16:24:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute6 -->
        <test-method status="PASS" signature="G_addOutRoute8()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute8" duration-ms="0" started-at="2017-11-09T16:24:39Z" finished-at="2017-11-09T16:24:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_addOutRoute8 -->
        <test-method status="PASS" signature="G_addOutRoute7()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="G_addOutRoute7" duration-ms="0" started-at="2017-11-09T16:24:39Z" finished-at="2017-11-09T16:24:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_addOutRoute7 -->
        <test-method status="PASS" signature="H_addivr()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="H_addivr" duration-ms="49903" started-at="2017-11-09T16:24:39Z" finished-at="2017-11-09T16:25:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_addivr -->
        <test-method status="PASS" signature="I_addringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="I_addringgroup" duration-ms="32585" started-at="2017-11-09T16:25:29Z" finished-at="2017-11-09T16:26:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_addringgroup -->
        <test-method status="PASS" signature="J_addqueue()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="J_addqueue" duration-ms="39308" started-at="2017-11-09T16:26:01Z" finished-at="2017-11-09T16:26:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_addqueue -->
        <test-method status="PASS" signature="K_addconference()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="K_addconference" duration-ms="35720" started-at="2017-11-09T16:26:40Z" finished-at="2017-11-09T16:27:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_addconference -->
        <test-method status="PASS" signature="L_setRecord()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="L_setRecord" duration-ms="63756" started-at="2017-11-09T16:27:16Z" finished-at="2017-11-09T16:28:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加网络磁盘netdisk1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 设置录音存储在：TF/SD]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_setRecord -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest@1579e0f]" name="AfterClass" is-config="true" duration-ms="13388" started-at="2017-11-09T16:28:20Z" finished-at="2017-11-09T16:28:33Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======前置环境设置—BeforeTest======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.BeforeTest -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="BeforeClass" is-config="true" duration-ms="36547" started-at="2017-11-09T16:28:33Z" finished-at="2017-11-09T16:29:10Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  时间条件—TimeCondition  ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="addTimeCondition1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="addTimeCondition1" duration-ms="41198" started-at="2017-11-09T16:29:10Z" finished-at="2017-11-09T16:29:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_test：每天05:05~22:39]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Outbound：00:00-00:01,周日]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition1 -->
        <test-method status="PASS" signature="addTimeCondition2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="addTimeCondition2" duration-ms="24344" started-at="2017-11-09T16:29:51Z" finished-at="2017-11-09T16:30:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_Advanced:周日/二/四，12:30~18:45]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑workday_Advanced，启用高级设置，1/6/12月的1/10/20/31号]]>
            </line>
            <line>
              <![CDATA[    Pass: 月份编辑]]>
            </line>
            <line>
              <![CDATA[    Pass: 日期编辑]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition2 -->
        <test-method status="PASS" signature="addTimeCondition3()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="addTimeCondition3" duration-ms="25295" started-at="2017-11-09T16:30:15Z" finished-at="2017-11-09T16:30:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件CheckAll]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑CheckAl，启用高级设置，Month:All，Day:All]]>
            </line>
            <line>
              <![CDATA[    Pass: Week编辑页面显示检查]]>
            </line>
            <line>
              <![CDATA[    Pass: Month编辑页面显示检查]]>
            </line>
            <line>
              <![CDATA[    Pass: Day编辑页面显示检查]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition3 -->
        <test-method status="PASS" signature="addTimeCondition4()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="addTimeCondition4" duration-ms="58187" started-at="2017-11-09T16:30:41Z" finished-at="2017-11-09T16:31:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：workday_Advanced，取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：workday_Advanced，确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：workday_test，取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：workday_test，取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：workday_test，确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：workday_Advanced，确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- addTimeCondition4 -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition@d41cee]" name="AfterClass" is-config="true" duration-ms="13614" started-at="2017-11-09T16:31:39Z" finished-at="2017-11-09T16:31:53Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  时间条件—TimeCondition  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.TimeCondition -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="BeforeClass" is-config="true" duration-ms="41677" started-at="2017-11-09T17:32:02Z" finished-at="2017-11-09T17:32:44Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  SpeedDial  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_add_1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="A_add_1" duration-ms="100242" started-at="2017-11-09T17:32:44Z" finished-at="2017-11-09T17:34:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有速拨码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 设置速拨特征码为*999]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建速拨码：dialcode:1,PhoneNumber：13001]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建速拨码：dialcode:1234567,PhoneNumber：31234567]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*9991通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_1 -->
        <test-method status="FAIL" signature="A_add_2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="A_add_2" duration-ms="23897" started-at="2017-11-09T17:34:24Z" finished-at="2017-11-09T17:34:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：31234567 实际：13001】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：31234567 实际：13001】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:258)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:250)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial.A_add_2(SpeedDial.java:71)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*9991234567通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\SwebTest\pic\CDR被叫方检测 【预期：31234567 实际：13001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：31234567 实际：13001】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_add_2 -->
        <test-method status="PASS" signature="B_export()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="B_export" duration-ms="1117" started-at="2017-11-09T17:34:48Z" finished-at="2017-11-09T17:34:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 导出速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_export -->
        <test-method status="PASS" signature="C_delete()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="C_delete" duration-ms="54261" started-at="2017-11-09T17:34:49Z" finished-at="2017-11-09T17:35:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：速拨码为1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：速拨码为1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：速拨码为1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：速拨码为1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：速拨码为1234567-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：速拨码为1234567-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：速拨码为1234567-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：速拨码为1234567-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_delete -->
        <test-method status="PASS" signature="D_import()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="D_import" duration-ms="11150" started-at="2017-11-09T17:35:43Z" finished-at="2017-11-09T17:35:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 导入速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass: 导入速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_import -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial@19e5ddf]" name="AfterClass" is-config="true" duration-ms="13224" started-at="2017-11-09T17:35:54Z" finished-at="2017-11-09T17:36:08Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  SpeedDial  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.SpeedDial -->
      <class name="com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="BeforeClass" is-config="true" duration-ms="63187" started-at="2017-11-09T18:40:18Z" finished-at="2017-11-09T18:41:21Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  Blacklist_Whitelist  =======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="InitBlackList_WhiteList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="InitBlackList_WhiteList" is-config="true" duration-ms="27962" started-at="2017-11-09T18:41:21Z" finished-at="2017-11-09T18:41:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- InitBlackList_WhiteList -->
        <test-method status="PASS" signature="A_SetInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="A_SetInRoute" duration-ms="33006" started-at="2017-11-09T18:41:49Z" finished-at="2017-11-09T18:42:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---设置呼入路由---]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_SetInRoute -->
        <test-method status="PASS" signature="B_BlackListSPS()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="B_BlackListSPS" duration-ms="58382" started-at="2017-11-09T18:42:22Z" finished-at="2017-11-09T18:43:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---黑名单Inroute,SPS---]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
            <line>
              <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打进入黑名单]]>
            </line>
            <line>
              <![CDATA[    Pass: SPS通话进入黑名单列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_BlackListSPS -->
        <test-method status="PASS" signature="C_BlackListSIP1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="C_BlackListSIP1" duration-ms="59030" started-at="2017-11-09T18:43:20Z" finished-at="2017-11-09T18:44:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】---黑名单OutRoute,SIP---]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
            <line>
              <![CDATA[  【执行操作】被测设备分机1100通过SIP拨打进入黑名单]]>
            </line>
            <line>
              <![CDATA[    Pass: SIP通话进入黑名单列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_BlackListSIP1 -->
        <test-method status="PASS" signature="D_WhiteListSPS()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="D_WhiteListSPS" duration-ms="59783" started-at="2017-11-09T18:44:19Z" finished-at="2017-11-09T18:45:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】白名单SPS1，Both ]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
            <line>
              <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打]]>
            </line>
            <line>
              <![CDATA[    Pass: SPS白名单呼入]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_WhiteListSPS -->
        <test-method status="PASS" signature="E_WhiteListSIP()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="E_WhiteListSIP" duration-ms="61169" started-at="2017-11-09T18:45:19Z" finished-at="2017-11-09T18:46:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--白名单SIP，OutRoute--]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
            <line>
              <![CDATA[  【执行操作】被测设备分机1100通过SIP拨打]]>
            </line>
            <line>
              <![CDATA[    Pass: SIP白名单呼入]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_WhiteListSIP -->
        <test-method status="PASS" signature="F_EditBlackList2()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="F_EditBlackList2" duration-ms="89722" started-at="2017-11-09T18:46:20Z" finished-at="2017-11-09T18:47:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--编辑blackList2 为Inbound--]]>
            </line>
            <line>
              <![CDATA[    Pass: blackList2 编辑为Inbound]]>
            </line>
            <line>
              <![CDATA[  【执行操作】通过sip1外线呼叫分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: blackList2 编辑为Inbound呼入]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_EditBlackList2 -->
        <test-method status="PASS" signature="G_EditWhiteList1()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="G_EditWhiteList1" duration-ms="64193" started-at="2017-11-09T18:47:50Z" finished-at="2017-11-09T18:48:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--编辑whiteList1 为Outbound--]]>
            </line>
            <line>
              <![CDATA[    Pass: whiteList1 编辑为Outbound]]>
            </line>
            <line>
              <![CDATA[  【执行操作】辅助设备分机2000通过SPS拨打]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_EditWhiteList1 -->
        <test-method status="PASS" signature="I_DeleteBlackList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="I_DeleteBlackList" duration-ms="40709" started-at="2017-11-09T18:48:54Z" finished-at="2017-11-09T18:49:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--删除黑名单--]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除黑名单blackList1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】批量删除黑名单]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量删除黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_DeleteBlackList -->
        <test-method status="PASS" signature="H_Export()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="H_Export" duration-ms="0" started-at="2017-11-09T18:48:54Z" finished-at="2017-11-09T18:48:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- H_Export -->
        <test-method status="PASS" signature="J_DeleteWhiteList()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="J_DeleteWhiteList" duration-ms="40671" started-at="2017-11-09T18:49:35Z" finished-at="2017-11-09T18:50:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】--删除白名单--]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除黑名单blackList1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】批量删除黑名单]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量删除黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_DeleteWhiteList -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist@181e022]" name="AfterClass" is-config="true" duration-ms="13361" started-at="2017-11-09T18:50:15Z" finished-at="2017-11-09T18:50:29Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======   Blacklist_Whitelist  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.RegressionCase.pbxcore.Blacklist_Whitelist -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
