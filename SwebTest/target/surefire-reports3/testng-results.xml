<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="165" total="1089" passed="924">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======前置环境设置—BeforeTest======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 批量创建分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1000的邮箱为1000@yeastar.com]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1105的邮箱为autotest@yeastar.com]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有VoIP外线]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip外线SIP1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip2外线SIP2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax外线IAX1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps外线SPS1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx外线SPX1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有PIN码]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有PIN码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机1105具有管理员权限]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======前置环境设置—BeforeTest======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：======  VoicePrompts  ======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有提示音]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音satisfaction]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音agentid]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音Join]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000录制提示音AgentAnnouncement]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 生成自定义提示音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[    Pass: 导入提示音autotestprompt]]>
    </line>
    <line>
      <![CDATA[  【执行操作】选择Music on Hold提示音列表的第一个提示音，点击“Play”在1000播放]]>
    </line>
    <line>
      <![CDATA[    Pass: 等待音乐播放]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建一个新的Autotest]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\Autotest未自动显示 【预期：Autotest 实际：default】.jpg" target="_blank">Error: Autotest未自动显示 【预期：Autotest 实际：default】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】新的Autotest上传音乐molihua.wav]]>
    </line>
    <line>
      <![CDATA[    Pass: Autotest等待音乐播放]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  VoicePrompts  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  Pickup Group  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 初始化Pickup Group的特征码为*4 、*04]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有PickupGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建截答组PickupGroup2,成员分机组ExtensionGroup1、分机1103]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑截答组PickupGroup1,成员分机1000、1105、1106（fxs）]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会HangUp]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1102按*4截答，预期截答失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1103按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1103按*041000截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1102按*041000截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1000,1105按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1106按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6500呼入到IVR，按1到分机1000,1100按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6200呼入到RingGroup，1103按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6700呼入到队列，1103按*4截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑截答的特征码为*4004,指定截答的特征码为*0401]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1000,1105按*4004截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1000,1102按*04011000截答，预期截答成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑特征码：不启用截答*4、指定截答*04]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答，预期截答失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1105,1102按*041105截答，预期截答失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupGroup2-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupGroup2-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：PickupGroup2-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：PickupGroup2-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复截答特征码设置]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  Pickup Group  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  PagingGroup & Intercom  =======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 注册分机1000、1100、1103、1105、2000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置对讲的特征码为*5]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 初始化广播组设置：删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有广播组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6300--单工、不启用*Answer、成员分机：1100、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组AutoPag6301--双工、启用*Answer、成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组NewPage6302--双工、不启用*Answer、成员分机：1100、1103、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建广播组Paging6303--单工、启用*Answer、成员1100、1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*716300将通话总是转移到广播组6300]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6300--预期分机1100、1105自动应答，AMI不会打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期：AMI不会打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答，AMI打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期：AMI会打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答后，1105按*Answer，1100、1101自动被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按*Answer--预期1100、1101会挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6302--预期分机1100、1103、1105自动应答，1105按*，分机1100、1103不会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105按*Answer--预期1100、1103不会挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，总是转移到广播组6300，预期：分机1100、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1100、1105自动应答失败.jpg" target="_blank">Error:  1100、1105自动应答失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*51105，1105自动应答]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\1105预期：自动应答 【预期：3 实际：4】.jpg" target="_blank">Error: 1105预期：自动应答 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑对讲的特征码为*055]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*0551105，预期1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期：自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：AutoPag6301-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：AutoPag6301-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：AutoPag6301-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：AutoPag6301-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*071将通话总是转移到广播组6300]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  PagingGroup & Intercom  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  Conference  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加会议室Conference6400：6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加会议室6401：6401]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加会议室a：6402]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Conference6400，DID：，Destination：Conference6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：6401，DID：5503301，Destination：6401]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：a，DID：5503302，Destination：a]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000呼入会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有1个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有2个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有3个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有4个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3003拨打3100通过iax外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有5个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2003拨打2010通过pstn外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有6个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2004拨打66666通过BRI外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有7个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有6个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有5个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有4个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3003退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2003退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2004退出会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入与会者密码：789]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入与会者密码前，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入与会者密码后，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入错误的与会密码：123，再次输入正确的与会者密码：789]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入错误的与会密码123后，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入正确的与会密码789后，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室，保持通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改会议室的与会密码为空,立即生效]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000进入会议室，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100加入会议室，预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: 所有成员退出会议室，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】所有成员退出会议室6401， 1100再次拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100进入会议室，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 AMI未打印提示音相关信息--请手动验证]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6402呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打6402呼入到会议室6402，管理员进入会议室---判断方法：AMI不会打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402等到管理员，进行通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6402呼入到会议室6402，输入管理员密码：456---判断方法：AMI不会打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100成为会议室6402的管理员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到会议室6400，按#邀请成员1100加入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000进入会议室，预期会议室6400有1个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100被2000邀请进入会议室，预期会议室6400有2个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100按#13001邀请外线号码加入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 3001被1100邀请进入会议室，预期会议室6400有3个成员]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100按#1000邀请管理员加入会议室]]>
    </line>
    <line>
      <![CDATA[    Pass: 管理员1000被1100邀请进入会议室，预期会议室6400有4个成员]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 语音菜单--AMI未打印相关信息--请手动测试]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Conference6400-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6400-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Conference6400-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：conference6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：a-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：a-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：a-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：a-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复初始化环境]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  Conference  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  RingGroup  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组a：6201]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组Yeastar202：6202]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组12345abcdefghijklmnopqrstuvwxyz：6203]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组*.*：6204]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组RingGroup6205：6205]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组さようなら：6206]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组Досвидания：6207]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加响铃组viszontlátasra：6208]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建RingGroup：xxx，点击取消]]>
    </line>
    <line>
      <![CDATA[    Pass:  取消成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑RingGroup：viszontlátasra，新增成员分机1106（FXS分机）]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1，到RingGroup：a]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打999999通过sps外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打888888通过spx外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  2001拨打2010通过fxo外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  2001拨打66666通过bri外线呼入到RingGroup:a，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1000状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1100状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1101状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1103状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1105状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1000状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1100状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1101状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1103状态为Ring]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1105状态为Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6208呼入到响铃组viszontlátasra，到分机1101响铃时，1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  2000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6201呼入到响铃组a，分机1105接听，预期其它分机停止响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打999999通过sps外线呼入到RingGroup:a，无人接听，60s后通话挂断]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  2001--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6202呼入到响铃组Yeastar202，无人接听，20s后分机1000响铃接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6204呼入到响铃组*.*，无人接听，20S后到IVR1按1到1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6205呼入到响铃组RingGroup6205，顺序响铃10s，无人接听，转到响铃组Yeastar202，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6206呼入到响铃组さようなら，顺序响铃10s，无人接听，转到队列Queue1，1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1103--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打6207呼入到响铃组Досвидания，顺序响铃30s，无人接听，转到Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Ring]]>
    </line>
    <line>
      <![CDATA[    Pass:  1000--Hang up]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6203呼入到响铃组，同时响铃10s，无人接听，预期到1105的voicemail]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1105登录，查看存在1102留下的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1102(1102)]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Yeastar202-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Yeastar202-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Yeastar202-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：さようなら-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：さようなら-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：さようなら-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：さようなら-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复初始化环境]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=====  RingGroup =====

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  Callback  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_SPS，Through：SPS1外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_SIP，Through：SIP1外线，Destination：1100]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_IAX，Through：IAX1外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_SPX，Through：SPX1外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_FXO，Through：FXO7外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_BRI，Through：BRI1外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback_fxs，Through：SPS1外线，Destination：1106]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback1_Hangup，Destination：]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback2_Extension，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback3_Voicemail，Destination：1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback4_IVR，Destination：IVR1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback5_RingGroup，Destination：RingGroup1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback6_Queue，Destination：Queue1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback7_Conference，Destination：Conference1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Callback：Callback8_DISA，Destination：DISA1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_SPS，DID：3000，Destination：Callback_SPS]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_SIP，DID：6603302，Destination：Callback_SIP]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_IAX，DID：6603303，Destination：Callback_IAX]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_SPX，DID：3100，Destination：Callback_SPX]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_FXO，DID：6603305，Destination：Callback_FXO]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_BRI，DID：6603306，Destination：Callback_BRI]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由：Callback_fxs，DID：6603301，Destination：Callback_fxs]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback1_HangupDID：5503301，Destination：Callback1_Hangup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback2_ExtensionDID：，Destination：Callback2_Extension]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback3_VoicemailDID：5503303，Destination：Callback3_Voicemail]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback4_IVRDID：5503304，Destination：Callback4_IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback5_RingGroupDID：5503305，Destination：Callback5_RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback6_QueueDID：5503306，Destination：Callback6_Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback7_ConferenceDID：5503307，Destination：Callback7_Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Callback8_DISADID：5503308，Destination：Callback8_DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，预期通过sps回拨，2000分机响铃接听后，分机1000响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会被挂断 【预期：4 实际：3】.jpg" target="_blank">Error: 预期3001会被挂断 【预期：4 实际：3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打996603302通过sps外线呼入，预期通过sip回拨，3001分机响铃接听后，分机1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打996603303通过sps外线呼入，预期通过iax回拨，3001分机响铃接听后，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，预期通过spx回拨，2000分机响铃接听后，分机1000响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会被挂断 【预期：4 实际：3】.jpg" target="_blank">Error: 预期3001会被挂断 【预期：4 实际：3】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打996603305通过sps外线呼入，预期通过fxo回拨，2001分机响铃接听，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2001会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2001会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打996603306通过sps外线呼入，预期通过bri回拨，2000分机响铃接听，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打996603307通过sps外线呼入，预期通过E1回拨，2000分机响铃接听，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR源中继检测 【预期：null 实际：SPS1】.jpg" target="_blank">Error: CDR源中继检测 【预期：null 实际：SPS1】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打996603308通过sps外线呼入，预期通过GSM回拨，2000分机响铃接听，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入，预期通过sps回拨，回拨Destination：Hangup]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期通过sps回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入，预期通过sps回拨，回拨Destination：IVR1，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入，预期通过sps外线回拨，回拨Destination：RingGroup1，成员都响铃，1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Queue1，坐席都响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会延迟响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入，预期通过sps外线回拨，回拨Destination：DISA1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会延迟响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 转入DISA后，2000发送DTMF：13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期3001会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打996603301通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1106（fxs）--通过pstn线会呼入到2000分机]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2002会被挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期2002会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2002会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入，预期通过spx外线回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入，预期通过pstn外线回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行检查】分机:2000未接通]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入，预期通过bri外线回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Callback7_Conference-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Callback7_Conference-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：Callback7_Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Callback7_Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Callback5_RingGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Callback5_RingGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Callback5_RingGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Callback5_RingGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  Callback  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  Queue  =======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】注册分机1000/1100/1101/1102/1103/1105/3001/2000/2001]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列a：6701]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列队列6702：6702]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列FailtoExtension：6703]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列12345abcdefghijklmnopqrstuvwxyz：6704]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列*.*：6705]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Queue6705：6706]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列さようなら：6707]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Досвидания：6708]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列viszontlátasra：6709]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Autotest：6710]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Queue_fewstcalls：6711]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Queue_random：6712]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Queue_rrmemory：6713]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加队列Queue_linear：6714]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：aDID：，Destination：a]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：队列6702DID：5503301，Destination：队列6702]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：FailtoExtensionDID：5503302，Destination：FailtoExtension]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：12345abcdefghijklmnopqrstuvwxyzDID：5503303，Destination：12345abcdefghijklmnopqrstuvwxyz]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：*.*DID：5503304，Destination：*.*]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Queue6705DID：5503305，Destination：Queue6705]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：さようならDID：5503306，Destination：さようなら]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：ДосвиданияDID：5503307，Destination：Досвидания]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：viszontlátasraDID：5503308，Destination：viszontlátasra]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：AutotestDID：5503309，Destination：Autotest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Queue_fewstcallsDID：5503310，Destination：Queue_fewstcalls]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Queue_randomDID：5503311，Destination：Queue_random]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Queue_rrmemoryDID：5503312，Destination：Queue_rrmemory]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加呼入路由：Queue_linearDID：5503313，Destination：Queue_linear]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到队列6702，预期到Failover：Hangup]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会HangUp]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到队列6703，预期到Failover：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503303通过sps外线呼入到队列6704，预期到Failover：分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1105登录，查看存在2000留下的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第2行的CallerID为2000(2000)]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入到队列6705，预期到Failover：IVR1，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入到队列6706，预期到Failover：RingGroup，所有成员1000、1100、1105同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入到队列6707，预期到Failover：Queue6701，所有成员都同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入到队列6708，预期Failover：Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入到队列6709，预期Failover：DialByName]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701，按0，预期被挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会HangUp]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到队列6703，按1，预期分机1000响铃，接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503303通过sps外线呼入到队列6704，按2，预期到分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1105登录，查看存在2001留下的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第3行的CallerID为2001(2001)]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入到队列6705，按3，预期到IVR1，按1到分机1000，接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入到队列6706，按4，预期到RingGroup1，分机1000、1100、1105同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入到队列6707，按5，预期到Queue：a，所有成员同时响铃，分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入到队列6708，按6，预期到Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Talking]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入到队列6709，按7，预期到DialbyName，按957，按1确认，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6701*加入队列6701，密码：空]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期所有坐席同时响铃，1102接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6701**退出队列6701]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102退出队列6701]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期1102不会响铃，其它坐席同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102不会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6710*加入队列6710，密码123]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1103输入密码123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6711*加入队列6711，密码123]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102输入密码123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打6712*加入队列6712，密码1234567890]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1101输入密码1234567890]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打6713*加入队列6713，密码1--1101已经是该队列的静态坐席]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\动态坐席1101输入密码1 【预期：true 实际：false】.jpg" target="_blank">Error: 动态坐席1101输入密码1 【预期：true 实际：false】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打6714*加入队列6714，密码0]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1101输入密码0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6714*加入队列6714，密码0]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1103输入密码0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503313通过sps外线呼入，预期呼入到队列6714,2000会听到进入队列的提示音Join，无坐席应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000呼入时播放提示音“Join”]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期呼入到队列6701，预期播放Music on Hold：Autotest]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000呼入时播放Music on hold ：Autotest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打6710呼入队列6710，预期播放Music on Hold：default]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103呼入6710时播放Music on hold ：default]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 坐席播报工号提示音----AMI未打印相关信息------请手动测试]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，1100先挂断，预期2000会听到满意度调查提示音：satisfaction]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】.jpg" target="_blank">Error: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 用户公告----AMI未打印相关信息---请手动测试]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 系统公告----AMI未打印相关信息---请手动测试 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701，坐席响铃15s后挂断，20s左右会再次响铃,坐席循环第3次响铃时，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103响铃结束]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，挂断；再次呼入队列，预期1100会马上响铃（warp time：0）]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503311呼入到队列6712，动态坐席1101应答后，挂断；再次呼入队列，预期1101不会马上响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101不会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会再次Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503309呼入到队列6710，预期1103第1个响铃，无应答，1103会再次响铃，应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103结束Ring，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会再次Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000再次拨打995503309呼入到队列6710，预期1105第1个响铃，接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000再次拨打995503309呼入到队列6710，预期1100第1个响铃，接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503310呼入到队列6711，预期1102响铃，无应答，1102会再次响铃，应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102结束Ring，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会再次Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503310再次呼入到队列6711，预期1105响铃，接听保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503310再次呼入队列6711，预期1000响铃，接听保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 响铃策略：random没有规律，无法自动化测试--请手动验证]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503312呼入到队列6713，预期1000第1个响铃,轮到1101响铃时接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会第1个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000结束Ring，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会第2个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100结束Ring，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会第3个Ring，应答]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503312呼入到队列6713，预期1105第一个响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503313通过sps外线呼入到队列6714，预期按线性响铃，1100第2次响铃时接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000第1个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100第2个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105第3个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101第4个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103第5个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000第6个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100第7个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打995503313通过sps外线再次呼入到队列6714，预期按线性响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000第1个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100第2个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105第3个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101第4个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103第5个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701,1100接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100在Talking]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701,1103接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6701呼入到队列6701,1105接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑队列6702，MaxWaitTime：1800，LeaveWhenEmpty：启用，JoinEmpty：启用]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：启用，JoinEmpty：不启用]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：不启用]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：启用]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打6702，预期：1102不会被直接挂断]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102不会被直接挂断 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1102不会被直接挂断 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：队列6702-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：队列6702-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：队列6702-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：queue6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Досвидания-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Досвидания-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：Досвидания-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Досвидания-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 恢复初始化环境]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  Queue  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== PINList ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】编辑DISA1：选择pin码——ABCDE~*_-+.?123456789012345678901234567890~~~》《》？、“：+-——）（*……）”]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的目的地到DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后正确的Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pinList]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改ABCDE~*_-+.?123456789012345678901234567890~~~》《》？、“：+-——）（*……）”的PIN_Value为12,123,456,12345678]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后先输入错误pin码，接着输入正确Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pinList]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个PIN——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除PIN——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的目的地到DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】新增Pin——test1、test2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】新增DISA——DISA1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  PINList  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== SpeedDial ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加速拨码，speedDialCode=1，phoneNumber=1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*991，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改速拨码，speedDialCode=2，phoneNumber=1101]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*991，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*991，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*992，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改speedDialPrefix为*999]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*992，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*992，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*99992，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*99992，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*9992，预期呼出成功，分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改speedDialPrefix为*******]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机1000拨打*******2，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改speedDialPrefix为0987654]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机1000拨打09876542，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改speedDialPrefix为*123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机1000拨打*1234562，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导入speedDial]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加外线速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Code：0000000；Number：23001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Code：*2；Number：42000]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Code：0；Number：62000]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Code：*******；Number：52000]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加一个SPS呼出路由前缀不对的速拨码,Code:111,Number:932000]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_code]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证SIP外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证SPS外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证ACCOUNT外线速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证IAX外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证SPX外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：42000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：42000 实际：23001】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证BRI外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：62000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：62000 实际：23001】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证PSTN外线速拨码]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：52000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：52000 实际：23001】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证E1外线速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证GSM外线速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证不正确的呼出前缀SPS外线速拨码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*12345#111，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps,分机不选择1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证分机1000没有SPS呼出权限时，是否可成功呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打*12345#890*#，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】验证有SPS呼出权限时，是否可成功呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个SpeedDial——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除PIN——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改速拨码的prefix为*99]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps,分机选择全部]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  SpeedDial  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== AutoCLIP ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2006]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----所有选项默认----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，是呼入到路由目的地，而不是1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打3+DEVICE_ASSIST_GSM通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打2010通过fxo外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除AutoCLIP记录 && digitsMatch设置为31]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打301234501234567890123456789通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2006（CallerID为01234567890123456789）通过sps外线呼入到分机1100,而不会到达路由目的地——1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2006状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000通过sps外线呼入到路由目的地——1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除AutoCLIP记录 && digitsMatch设置为7 && 勾选 匹配呼出中继]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 取消勾选 匹配呼出中继]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 勾选 只记录未接电话 && 删除AutoCLIP记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出到分机2000，分机拒接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为IDLE，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 取消勾选 只记录未接电话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 勾选  删除使用过的记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 再呼入一次，验证UsedRecord生效]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 取消勾选 删除使用过的记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----所有选项默认----]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼入到分机2002（因为辅助设备有一个呼入路由DID是2002，所以会匹配这条，导致呼入到2002），分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2002状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32003通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32004通过sps外线呼入到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个AutoCLIP记录——选择no]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个AutoCLIP记录——选择yes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 ----所有选项默认----]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：====== AutoCLIP ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== Blacklist/Whitelist ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1106]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3005]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2006]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1105呼入到1000——内部分机互打，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】辅助设备分机2001通过SPS呼入到1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打30123通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打30123,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1105——内部分机互打，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1105,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打1105——内部分机互打，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打13004通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3004状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33004通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33004,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3004拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打33004通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打1105——内部分机互打，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打1105,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打1105——内部分机互打，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32002,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13004通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打13004,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3004拨打3000通过sip外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3004拨打3000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [1000] 实际：1000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [1000] 实际：1000】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打33004通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打3123通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32234,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打312345通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打312345,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991234通过sip外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改白名单——whitelist]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新增紧急号码：3001，trunk选择SPS]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打3001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选紧急号码-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出,预期呼出成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32001,预期呼出成功,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1100拨打32001,预期呼出成功,实际呼出失败.jpg" target="_blank">Error:  1100拨打32001,预期呼出成功,实际呼出失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改黑名单——black_me]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改me白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改me白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：====== Blacklist/Whitelist ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：=======  IVR  =======]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：a：6501]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：Yeastar202：6502]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：12345abcdefghijklmnopqrstuvwxyz：6503]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：*.*：6504]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：IVR6505：6505]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：さようなら：6506]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：Досвидания：6507]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IVR：viszontlátasra：6508]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR：Yeastar202，Prompt：选择prompt1，按2到Voicemail:1105，按3到RingGroup1，按4到Queue1，按5到Conference1，按6到prompt1，按7到分机到IVR：*.*，按8到1106（fxs），按9到Dial by Name，按#到分机1100，按*到分机1101，Timeout到分机1102，Invalid到prompt1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1，到IVR：Yeastar202]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到IVR：6502,按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到IVR：6502，按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到IVR：6502，按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到IVR：6502，按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按1到Callback1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按2到1105的Voicemail]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105登录查看存在CallerID为2000的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为2000(2000)]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 admin重新登录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按3到RingGroup1,1100应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR:6502，按4到Queue1，1105应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按5到Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按6到prompt1,提示音播放完就挂断]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按7到IVR6504：*.*，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按8到分机1106（fxs）]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按9到DialByName按957到分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按*到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，Timeout到分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按A到Custom Prompt：prompt1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播分机号码1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播响铃组号码6200,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6508呼入到IVR：6508，直播分机号1103，预期：走到key 1到分机1000，即1000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期3001为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打23001通过iax外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期3001为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打42000通过spx外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打52000通过pstn外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打62000通过bri外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Ring状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6503，按32000（未启用Dial Outbound Routes)，预期1100被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Hang up状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按*02查看分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6506，按*02查看语音留言（未启用Dial to Check Voicemail）]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Hang up状态]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，检查播放4次的prompt1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：*.*-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：*.*-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：*.*-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：*.*-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 IVR恢复BeforeTest设置]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：=======  IVR  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== Emergency Number ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加不可用的sip外线SIP4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加紧急号码2000，通过SPS外线，通知人为1100]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 验证紧急号码可正常使用，分机1000拨打2000，预期1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码，2000修改为001，trunk前缀为3，将SPS改为SIP，Notification改为1000分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打无效的紧急号码2000，预期呼出失败，分机1100为Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100通过SIP拨打001号码，预期3001响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000和分机3001状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码001，号码改为2000，删除trunk前缀，线路改为SIP4，通知人为1100分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打2000，预期分机1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码2000，号码改为1234567890123456789012345678901，呼出前缀为#*+0123456789qw，trunk顺序为：SIP4、SPS、SIP；通知人为1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100拨打1234567890123456789012345678901，预期被通知分机1000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000和分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100先通过SPS外线呼出，让SPS外线处于正忙状态]]>
    </line>
    <line>
      <![CDATA[    Error:  预期2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 接着分机1102也通过SPS外线呼出，分机1100不会被迫挂断电话，软件层面会再新增一条通道让1102通过SPS呼出；预期分机1100为TALKING状态，分机1000为RING]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码，号码改为3001，删除一条Trunk——SIP，新增一个通知人1101]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100拨打3001，预期分机1000和1101为RING状态]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000状态和1101状态--RING，分机3001的状态也为RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码，删除通知人1101]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1100拨打3001，预期分机1000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000和分机3001状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 验证紧急号码可以通过各物理外线正常呼出，添加经过各物理外线呼出的紧急号码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加SPS]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IAX和SPX]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加FXO_1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加BRI]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过IAX拨打3004号码，预期3004分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和分机3004状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过SPX拨打444号码，预期2000分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过BRI拨打666号码，预期2000分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过PSTN拨打2001号码，预期2001分机响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和分机2001状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码——验证第一条sip外线不可用时，走到第二条FXO外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100通过BRI拨打2000号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000和分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码——验证第一条FXO外线在忙时，走到第二条SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过PSTN拨打52001号码，预期2001响铃]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Error:  预期2000状态为RING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：SPS1 实际：FXO7】.jpg" target="_blank">Error: CDR目的中继检测 【预期：SPS1 实际：FXO7】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑紧急号码——验证第一条FXO外线在忙时，走到第二条BRI外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100通过PSTN拨打52001号码，预期2001响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102通过BRI拨打2000号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Error:  预期1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Error:  预期2000状态为RING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：BRI1 实际：FXO7】.jpg" target="_blank">Error: CDR目的中继检测 【预期：BRI1 实际：FXO7】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加事件中心中的通知联系人——分机1103，通知方法为Call Extension]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000通过SPS拨打111号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和1103状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass:  呼入路由目的地的分机2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】最近的一通紧急号码拨打时间为：2018-04-22 06:37:08]]>
    </line>
    <line>
      <![CDATA[  【执行操作】查看Event log]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Event log获取到的time为：2018-04-22 06:37:08]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】事件中心的紧急号码——不勾选Record，勾选Notification]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102通过SPS拨打111号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1100和1103和2000状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】事件中心的紧急号码——不勾选Record，不勾选Notification]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101通过SPS拨打111号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Error:  预期被通知的分机1100状态为RING，实际状态为2;分机1103状态为IDLE，实际状态为4;分机2000状态为RING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】事件中心的紧急号码——勾选Record，不勾选Notification]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102通过SPS拨打111号码，预期2000响铃]]>
    </line>
    <line>
      <![CDATA[    Error:  预期被通知的分机1100状态为RING，实际状态为2;分机1103状态为IDLE，实际状态为4;分机2000状态为RING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CDR显示最近的一通紧急号码拨打时间为：2018-04-22 06:41:43]]>
    </line>
    <line>
      <![CDATA[  【执行操作】查看Event log]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Event log获取到的time为：2018-04-22 06:41:43]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
    </line>
    <line>
      <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1102 has made an emergency call to 111.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】事件中心的紧急号码——勾选Record，勾选Notification]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】实际row2:0]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个紧急号码111——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个紧急号码111-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个紧急号码111——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个紧急号码111——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】实际row:2]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除SIP4——选择yes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】实际值row2:9]]>
    </line>
    <line>
      <![CDATA[  【执行操作】期望值row3:9]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除SIP4——确定删除]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：====== Emergency Number ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== Disa ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加不可用的sip外线SIP3]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由Out_All]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由Out_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1——呼入目的地到DISA ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨31111通过SPS呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88999通过SPX外线呼入，进入DISA，拨23001通过IAX1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，进入DISA，拨42000通过SPX呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨66666通过E1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨52000通过E1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由目的地为DISA3]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨31111通过SPS呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨93111]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由：修改OutRoute1_sip前缀为92.  Strip 2位]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨923001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨923001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由：修改OutRoute1_sip前缀为1.  Strip 1位]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑DISA3：password改为test1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后第三次输入正确的Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后正确输入Pin码后不加#]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为IDLE，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CDR最新记录的Call to是：DISA3]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA输入pin码后不加#,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改Out_All呼出路由的呼出密码为123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】3001拨打3000通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号,最后正确输入呼出路由的呼出密码]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2002拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改DISA3的SinglePin为135]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2002拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA超过设置的ResponseTimeout后被挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改DISA3：responseTimeout设置为20]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，超过设置的ResponseTimeout后被挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过设置的ResponseTimeout后被挂断通话,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001的分机状态为：4,预期是HANGUP状态]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过Digit时间,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 修改DISA3：responseTimeout设置为15，digitTimeout设置为10]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001的分机状态为：4,预期是HANGUP状态]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过Digit时间,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】新增DISA1——用于后面的删除操作，外线选择sip和sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个DISA1——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除DISA1——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除DISA1——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到hangup,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到hangup,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个呼出路由Out_sip、Out_ALL——选择yes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除SIP3——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除SIP3——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有DISA]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  DISA  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== OutboundRoutes ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加不可用的sip外线SIP3]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 勾选全部的呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 确定删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择多条呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打13001，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打13001，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001，第1次预期通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择1104+分机组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择SPS呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打902000，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打912000，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由：删除patterns]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、1、0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、2、012]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打203456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、3、0123]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打311456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、4、01234]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打412356789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、6、012345]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打5123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、6、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打612345789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、7、01234567]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打712345689]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、8、012345678]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打812345679]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、10、0123456789]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打9123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打10123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、2、0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打10123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打2789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打3789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打4789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打5789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打7789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打8789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打9789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打2789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打3789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打4789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打5789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打7789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打8789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打9789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：XZN.、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：0123456789、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：X0123456789、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打00123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：9.、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打90123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345!、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：6789!、、012345]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打6789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打10123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打20123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打10123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打30123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打40123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打50123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打60123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：123456789123456789123456789123456789123456789123456789123456789、54、0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打123456789123456789123456789123456789123456789123456789123456789]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：ZXN.、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345678、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：X0123456789、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：0123456789.、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345!、、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打01234,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打01234，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打30123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打30123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打20123456789,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打20123456789，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：PIN List--test1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：PIN List--test2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 NotInWorkday：00:00-00:01,周日]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由：勾选time condition——验证在time condition时间内能够呼出成功，取消password]]>
    </line>
    <line>
      <![CDATA[  【执行操作】进入TimeCondition——workday_24hour的勾选]]>
    </line>
    <line>
      <![CDATA[  【执行操作】进入Password——None的选择]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1111]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由：勾选time condition——验证不在time condition时间内无法成功呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1111，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打1111，预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个呼出路由OutboundRoute1——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个呼出路由OutboundRoute1——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个呼出路由OutboundRoute1——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除SIP3——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除SIP3——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有DISA]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有DISA]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  OutboundRoutes  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== InboundRoutes ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1106]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2005]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打999a]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：X.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9999]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打999]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：N.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9929]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9919]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9919,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：Z.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9919]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99aa]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99aa,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：NZXNZX.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打992202101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99220210]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99220210,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：[12-6].]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9969]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9979]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9979,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：[158]X9ZN[1-5]X.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9950912501]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9950812501]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9950812501,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：+12abc06032456N]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99+12abc06032456N]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99+12abc06032456a]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99+12abc06032456a,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：XXXNZ!]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99xxx21]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B2_checkDID()99xxx21.jpg" target="_blank">Error: B2_checkDID()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99aaa21]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99aaa21,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：13950174296!]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9913950174296]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9913950174295]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9913950174295,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为：0123456789]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打990123456789]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打990123456786]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打990123456786,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的Caller ID为[128]X[0-6]12]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的Caller ID为NXZ1!]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001（CallerID为2001）拨打99999，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID为5503301-5503305，CallerID为NXZ1!
2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打995503302，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001（CallerID为2001）拨打995503305，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】2005（CallerID为2X612）拨打99999，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2005拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由的DID和CallerID为空]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute2——呼入目的地到HangUp ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute3——呼入目的地到sip分机1100 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute4——呼入目的地到fxs_Extension ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute5——呼入目的地到Extension Range ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute6——呼入目的地到voicemail ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute7——呼入目的地到IVR ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute9——呼入目的地到Queue ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute10——呼入目的地到Conference ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute11——呼入目的地到DISA ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute12——呼入目的地到Callback ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute13——呼入目的地到Outbound Route_sip ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute14——呼入目的地到Outbound Route_iax ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute15——呼入目的地到Outbound Route_spx ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute16——呼入目的地到Outbound Route_bri ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991105通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第10行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第9行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000呼入到响铃组，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000/1100和1105响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态——TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到响铃组，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000和1100响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态——TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除呼入路由InRoute8（RingGroup）——选择yes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第3行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第5行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1106，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第6行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第7行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第12行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9913001通过sps外线呼入转sip外线呼出到分机3001]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第13行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9923001通过sps外线呼入转iax外线到分机3001，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第14行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9942000通过sps外线呼入转spx外线到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第15行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件workday2_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建HolidayByDay：2018-01-01~2200-12-31]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 移动第9行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:勾选TimeCondition]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:otherTime的目的地选择分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000，预期呼入成功，分机1000未接]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6700,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 当前的时间为：2018-04-22 09:38:08]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 今天星期：sun]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件NoWorkday:当前时间不是上班时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改NoWorkday：取消勾选当前的星期]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:编辑workday当前时间不是上班时间]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件threeMinuteWork:三分钟后为上班时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增threeMinuteWork]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由目的地]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，IVR6500接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由顺序]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，Conference6400接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由顺序]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】检查时间特征码+修改InRoute10_Conference呼入路由：将workday_24hour改为NoWorkday]]>
    </line>
    <line>
      <![CDATA[    Pass:  特征码生成正确]]>
    </line>
    <line>
      <![CDATA[  【执行操作】检查时间特征码]]>
    </line>
    <line>
      <![CDATA[    Pass:  特征码生成正确]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*803强制启用非工作时间]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到ivr]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*802强制启用工作时间]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800重置]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999，预期呼入到响铃组，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改TimeCondition的目的地]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*802]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000和1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*805]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1106，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*803]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9913001通过SPS外线呼入转sip呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9923001通过sps外线呼入转iax外线到分机3001，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9942000通过sps外线呼入转spx外线到分机2000，分机未接]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改第三时间条件目的地到ExtensionRange]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1101状态为TALKING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】取消勾选TimeConditon]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除全部的Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】期望值row1:16]]>
    </line>
    <line>
      <![CDATA[  【执行操作】要取消勾选的row2:9]]>
    </line>
    <line>
      <![CDATA[  【执行操作】要取消勾选的row3:11]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】F:\MyProject\SwebTest\exportFile\InboundRoute.csv]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9992999]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9982999]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3000通话状态为：0]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打9991999]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个呼入路由InRoute3——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个呼入路由InRoute3——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个呼入路由InRoute3——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute1:DID清空，CallerID设置为3.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改InRoute2:DID清空，CallerID设置为X.]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打991105通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打881000通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 取消分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：======  InboundRoutes  ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== TimeCondition ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Q_ABC: 00:00~01:00]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Q_ABC，新增10个Time，勾选高级设置，All Month,All Day]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件*:2月2号周一，00:59~23:59]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑*，勾选高级设置，february,day2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件1234567890123456789012345678901:7月7号周六，17:00~20:00]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑1234567890123456789012345678901，勾选高级设置，july,day7]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件あリがとゥ:8月8号周日，20:10~22:30]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑あリがとゥ，勾选高级设置，august,september,day8,day9,day10,day11]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件?????????:10月29号周一到周五，00:00~23:59]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑?????????，勾选高级设置，october,day29]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Спасибо：12月31号周二、四、六，00:00~23:59]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Спасибо，勾选高级设置，december,day31]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件 时间条件7：1月1号周一到周日，00:00~23:59]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑时间条件7，勾选高级设置，january,day1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test2]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test3]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test5]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test6]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼出路由OutRoute_test7]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼入路由InRoute1，启用时间条件，并且新增八个Time Condition]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*802强制启用工作时间_Q_ABC]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C3_makeCall_Out()分机1000.jpg" target="_blank">Error: C3_makeCall_Out()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C4_makeCall_In()分机1000.jpg" target="_blank">Error: C4_makeCall_In()分机1000调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C7_makeCall_In()分机1000.jpg" target="_blank">Error: C7_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800重置]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C8_FeatureCode()分机1000.jpg" target="_blank">Error: C8_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*802]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D1_setSystemTime1_FeatureCode()分机1000.jpg" target="_blank">Error: D1_setSystemTime1_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D2_makeCall_Out()分机1000.jpg" target="_blank">Error: D2_makeCall_Out()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D3_makeCall_In()分机1000.jpg" target="_blank">Error: D3_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除TimeCondition_Q_ABC的Time]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D5_makeCall_Out()分机1000.jpg" target="_blank">Error: D5_makeCall_Out()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D6_makeCall_In()分机1000.jpg" target="_blank">Error: D6_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打922000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D9_makeCall_In()分机1000.jpg" target="_blank">Error: D9_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*803强制启用工作时间_*]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E1_FeatureCode()分机1000.jpg" target="_blank">Error: E1_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打932000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E3_makeCall_Out()分机1100.jpg" target="_blank">Error: E3_makeCall_Out()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E4_makeCall_In()分机1100.jpg" target="_blank">Error: E4_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打932000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打932000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E7_makeCall_In()分机1100.jpg" target="_blank">Error: E7_makeCall_In()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：6400】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：6400】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E8_FeatureCode()分机1000.jpg" target="_blank">Error: E8_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*804强制启用工作时间_1234567890123456789012345678901]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\F2_FeatureCode()分机1000.jpg" target="_blank">Error: F2_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打942000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1101，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打932000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1101拨打932000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1101，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*805强制启用工作时间_あリがとゥ]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G1_FeatureCode()分机1000.jpg" target="_blank">Error: G1_FeatureCode()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打952000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H7_FeatureCode()分机1000.jpg" target="_blank">Error: H7_FeatureCode()分机1000</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*806强制启用工作时间_?????????]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\I1_FeatureCode()分机1000.jpg" target="_blank">Error: I1_FeatureCode()分机1000</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打962000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1103，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打962000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打962000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1103，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*807强制启用工作时间_Спасибо]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打972000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1104，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打972000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打972000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1104，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\J8_FeatureCode()分机1000.jpg" target="_blank">Error: J8_FeatureCode()分机1000</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*808强制启用工作时间_时间条件7]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\K1_FeatureCode()分机1000.jpg" target="_blank">Error: K1_FeatureCode()分机1000</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打982000通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1105，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打982000通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1105拨打982000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1105，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [1105] 实际：6400】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [1105] 实际：6400】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\K8_FeatureCode()分机1000.jpg" target="_blank">Error: K8_FeatureCode()分机1000</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个holiday——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除holiday-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个holiday——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个holiday——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个timeConditions——选择no]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个timeConditions-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除单个timeConditions——选择yes]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个timeConditions——确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑Workday]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 取消分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[    Pass: waitReboot重启]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：====== TimeCondition ======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】开始执行：====== OutboundRestriction ======]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1104]]>
    </line>
    <line>
      <![CDATA[    Pass: 1104分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制_?.~12349012345678901！~·……*（）——，2分钟不能超过4通]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第1次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第2次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第3次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第4次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第5次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第6次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期第7次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打62000通过bri外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打52000通过pstn外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打881000通过spx外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1103状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：_?.~12349012345678901！~·……*（）——-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：_?.~12349012345678901！~·……*（）——-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 表格删除：_?.~12349012345678901！~·……*（）——-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：_?.~12349012345678901！~·……*（）——-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1000状态已被限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1000状态已被取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有Outbound Restriction]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，1分钟不能超过1通]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction1()第2次分机1000.jpg" target="_blank">Error: E2_Restriction1()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为2]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第1次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第2次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第3次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打3333通过sps外线呼出,预期呼出成功,实际呼出成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass:  被通知的分机1103状态--RING]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机1000和1102]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑分机1000的邮箱为1000@yeastar.com]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有分机组]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有分机组]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute2_iax]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute4_spx]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute5_fxo]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼出路由OutRoute6_bri]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1102拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】修改呼出限制的已选分机——1103;3min内不超过1通电话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】编辑分机1100——取消勾选呼出限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】编辑分机1100——勾选呼出限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制OutRestriction2，1分钟不能超过5通]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打32000通过sps外线呼出,预期第3次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制OutRestriction3，1分钟不能超过1通]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打32000通过sps外线呼出,预期第3次呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1100状态已被取消限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1103状态已被取消限制]]>
    </line>
    <line>
      <![CDATA[    Pass:  查看分机1104状态已被取消限制]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1103拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 1104拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 新建呼出限制default，1分钟不能超过5通]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 EmergencyNumber全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
    </line>
    <line>
      <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】执行完毕：====== OutboundRestriction ======

]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="44880660" started-at="2018-04-21T16:28:56Z" finished-at="2018-04-22T04:56:56Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="44880660" started-at="2018-04-21T16:28:56Z" finished-at="2018-04-22T04:56:56Z">
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="BeforeClass" is-config="true" duration-ms="27879" started-at="2018-04-22T04:16:36Z" finished-at="2018-04-22T04:17:04Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== AutoCLIP ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="A_addExtension" duration-ms="33317" started-at="2018-04-22T04:17:04Z" finished-at="2018-04-22T04:17:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2006]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:17:37Z" finished-at="2018-04-22T04:17:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_default()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="B1_default" duration-ms="37476" started-at="2018-04-22T04:17:37Z" finished-at="2018-04-22T04:18:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----所有选项默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_default -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T04:18:14Z" finished-at="2018-04-22T04:18:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDefault()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="B2_checkDefault" duration-ms="63456" started-at="2018-04-22T04:18:14Z" finished-at="2018-04-22T04:19:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDefault -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T04:19:18Z" finished-at="2018-04-22T04:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_checkDefault()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="B3_checkDefault" duration-ms="31681" started-at="2018-04-22T04:19:18Z" finished-at="2018-04-22T04:19:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，是呼入到路由目的地，而不是1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_checkDefault -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T04:19:50Z" finished-at="2018-04-22T04:19:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_addAllTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="C_addAllTrunk" duration-ms="11351" started-at="2018-04-22T04:19:50Z" finished-at="2018-04-22T04:20:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----AutoCLIP选择所有外线,其它默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_addAllTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:20:01Z" finished-at="2018-04-22T04:20:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D1_makeCall1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D1_makeCall1" duration-ms="39406" started-at="2018-04-22T04:20:01Z" finished-at="2018-04-22T04:20:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D1_makeCall1(AutoCLIP.java:171)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_makeCall1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2076" started-at="2018-04-22T04:20:40Z" finished-at="2018-04-22T04:20:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D1_makeCall2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D1_makeCall2" duration-ms="39586" started-at="2018-04-22T04:20:42Z" finished-at="2018-04-22T04:21:22Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D1_makeCall2(AutoCLIP.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_makeCall2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:21:22Z" finished-at="2018-04-22T04:21:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D1_makeCall4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D1_makeCall4" duration-ms="39508" started-at="2018-04-22T04:21:24Z" finished-at="2018-04-22T04:22:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D1_makeCall4(AutoCLIP.java:214)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打3+DEVICE_ASSIST_GSM通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_makeCall4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2076" started-at="2018-04-22T04:22:04Z" finished-at="2018-04-22T04:22:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk1_SPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk1_SPS" duration-ms="24002" started-at="2018-04-22T04:22:06Z" finished-at="2018-04-22T04:22:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk1_SPS(AutoCLIP.java:228)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk1_SPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2077" started-at="2018-04-22T04:22:30Z" finished-at="2018-04-22T04:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk2_SIP()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk2_SIP" duration-ms="26644" started-at="2018-04-22T04:22:32Z" finished-at="2018-04-22T04:22:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk2_SIP(AutoCLIP.java:241)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk2_SIP -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2099" started-at="2018-04-22T04:22:58Z" finished-at="2018-04-22T04:23:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk4_IAX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk4_IAX" duration-ms="23983" started-at="2018-04-22T04:23:00Z" finished-at="2018-04-22T04:23:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk4_IAX(AutoCLIP.java:269)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk4_IAX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2097" started-at="2018-04-22T04:23:24Z" finished-at="2018-04-22T04:23:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk5_SPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk5_SPX" duration-ms="24205" started-at="2018-04-22T04:23:27Z" finished-at="2018-04-22T04:23:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk5_SPX(AutoCLIP.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk5_SPX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2084" started-at="2018-04-22T04:23:51Z" finished-at="2018-04-22T04:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk6_BRI()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk6_BRI" duration-ms="24026" started-at="2018-04-22T04:23:53Z" finished-at="2018-04-22T04:24:17Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk6_BRI(AutoCLIP.java:302)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk6_BRI -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2081" started-at="2018-04-22T04:24:17Z" finished-at="2018-04-22T04:24:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_checkTrunk7_PSTN()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk7_PSTN" duration-ms="27045" started-at="2018-04-22T04:24:19Z" finished-at="2018-04-22T04:24:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D2_checkTrunk7_PSTN(AutoCLIP.java:320)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打2010通过fxo外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk7_PSTN -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2089" started-at="2018-04-22T04:24:46Z" finished-at="2018-04-22T04:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_checkTrunk8_E1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk8_E1" duration-ms="0" started-at="2018-04-22T04:24:48Z" finished-at="2018-04-22T04:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk8_E1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T04:24:48Z" finished-at="2018-04-22T04:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_checkTrunk9_GSM()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D2_checkTrunk9_GSM" duration-ms="0" started-at="2018-04-22T04:24:48Z" finished-at="2018-04-22T04:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D2_checkTrunk9_GSM -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:24:48Z" finished-at="2018-04-22T04:24:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_diffNum1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D3_diffNum1" duration-ms="31700" started-at="2018-04-22T04:24:48Z" finished-at="2018-04-22T04:25:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_diffNum1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T04:25:20Z" finished-at="2018-04-22T04:25:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D3_diffNum2_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D3_diffNum2_makeCall" duration-ms="36653" started-at="2018-04-22T04:25:20Z" finished-at="2018-04-22T04:25:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D3_diffNum2_makeCall(AutoCLIP.java:383)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_diffNum2_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-04-22T04:25:57Z" finished-at="2018-04-22T04:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D3_diffNum3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="D3_diffNum3" duration-ms="20966" started-at="2018-04-22T04:25:59Z" finished-at="2018-04-22T04:26:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.D3_diffNum3(AutoCLIP.java:396)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_diffNum3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2087" started-at="2018-04-22T04:26:20Z" finished-at="2018-04-22T04:26:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_editAutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="E1_editAutoCLIP" duration-ms="26412" started-at="2018-04-22T04:26:22Z" finished-at="2018-04-22T04:26:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除AutoCLIP记录 && digitsMatch设置为31]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_editAutoCLIP -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T04:26:48Z" finished-at="2018-04-22T04:26:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E2_checkDigits_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="E2_checkDigits_makeCall" duration-ms="36528" started-at="2018-04-22T04:26:48Z" finished-at="2018-04-22T04:27:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.E2_checkDigits_makeCall(AutoCLIP.java:437)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打301234501234567890123456789通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkDigits_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T04:27:25Z" finished-at="2018-04-22T04:27:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E3_checkDigits1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="E3_checkDigits1" duration-ms="20935" started-at="2018-04-22T04:27:27Z" finished-at="2018-04-22T04:27:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.E3_checkDigits1(AutoCLIP.java:450)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2006（CallerID为01234567890123456789）通过sps外线呼入到分机1100,而不会到达路由目的地——1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2006状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_checkDigits1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2071" started-at="2018-04-22T04:27:48Z" finished-at="2018-04-22T04:27:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_checkDigits2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="E3_checkDigits2" duration-ms="30023" started-at="2018-04-22T04:27:50Z" finished-at="2018-04-22T04:28:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000通过sps外线呼入到路由目的地——1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_checkDigits2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T04:28:20Z" finished-at="2018-04-22T04:28:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_matchOutTrunk_edit()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F1_matchOutTrunk_edit" duration-ms="27473" started-at="2018-04-22T04:28:20Z" finished-at="2018-04-22T04:28:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除AutoCLIP记录 && digitsMatch设置为7 && 勾选 匹配呼出中继]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_matchOutTrunk_edit -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:28:47Z" finished-at="2018-04-22T04:28:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F2_matchOutTrunk_makeCall1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F2_matchOutTrunk_makeCall1" duration-ms="36295" started-at="2018-04-22T04:28:47Z" finished-at="2018-04-22T04:29:24Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.F2_matchOutTrunk_makeCall1(AutoCLIP.java:505)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_matchOutTrunk_makeCall1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2101" started-at="2018-04-22T04:29:24Z" finished-at="2018-04-22T04:29:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F2_matchOutTrunk_makeCall2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F2_matchOutTrunk_makeCall2" duration-ms="36575" started-at="2018-04-22T04:29:26Z" finished-at="2018-04-22T04:30:02Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.F2_matchOutTrunk_makeCall2(AutoCLIP.java:519)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_matchOutTrunk_makeCall2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:30:02Z" finished-at="2018-04-22T04:30:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F3_matchOutTrunk1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F3_matchOutTrunk1" duration-ms="21152" started-at="2018-04-22T04:30:04Z" finished-at="2018-04-22T04:30:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.F3_matchOutTrunk1(AutoCLIP.java:532)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_matchOutTrunk1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2141" started-at="2018-04-22T04:30:25Z" finished-at="2018-04-22T04:30:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_matchOutTrunk2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F3_matchOutTrunk2" duration-ms="28781" started-at="2018-04-22T04:30:28Z" finished-at="2018-04-22T04:30:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_matchOutTrunk2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:30:56Z" finished-at="2018-04-22T04:30:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_disMatchOutTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F4_disMatchOutTrunk" duration-ms="12577" started-at="2018-04-22T04:30:56Z" finished-at="2018-04-22T04:31:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 取消勾选 匹配呼出中继]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_disMatchOutTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T04:31:09Z" finished-at="2018-04-22T04:31:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F5_matchOutTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="F5_matchOutTrunk" duration-ms="21020" started-at="2018-04-22T04:31:09Z" finished-at="2018-04-22T04:31:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.F5_matchOutTrunk(AutoCLIP.java:570)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_matchOutTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2069" started-at="2018-04-22T04:31:30Z" finished-at="2018-04-22T04:31:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_OnlyMissedRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="G1_OnlyMissedRecord" duration-ms="29510" started-at="2018-04-22T04:31:32Z" finished-at="2018-04-22T04:32:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 勾选 只记录未接电话 && 删除AutoCLIP记录]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_OnlyMissedRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:32:02Z" finished-at="2018-04-22T04:32:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G2_makeCall1_sps_accept()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="G2_makeCall1_sps_accept" duration-ms="36415" started-at="2018-04-22T04:32:02Z" finished-at="2018-04-22T04:32:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.G2_makeCall1_sps_accept(AutoCLIP.java:620)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_makeCall1_sps_accept -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2146" started-at="2018-04-22T04:32:38Z" finished-at="2018-04-22T04:32:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G3_makeCall_sps_reject()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="G3_makeCall_sps_reject" duration-ms="59624" started-at="2018-04-22T04:32:40Z" finished-at="2018-04-22T04:33:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.G3_makeCall_sps_reject(AutoCLIP.java:644)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出到分机2000，分机拒接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为IDLE，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_makeCall_sps_reject -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2084" started-at="2018-04-22T04:33:40Z" finished-at="2018-04-22T04:33:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_checkMissRecord_SPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="H1_checkMissRecord_SPS" duration-ms="28776" started-at="2018-04-22T04:33:42Z" finished-at="2018-04-22T04:34:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_checkMissRecord_SPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:34:11Z" finished-at="2018-04-22T04:34:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkMissRecord_SPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="H2_checkMissRecord_SPX" duration-ms="28797" started-at="2018-04-22T04:34:11Z" finished-at="2018-04-22T04:34:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkMissRecord_SPX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:34:39Z" finished-at="2018-04-22T04:34:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_checkMissRecord_BRI()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="H3_checkMissRecord_BRI" duration-ms="28645" started-at="2018-04-22T04:34:39Z" finished-at="2018-04-22T04:35:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_checkMissRecord_BRI -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:35:08Z" finished-at="2018-04-22T04:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:35:08Z" finished-at="2018-04-22T04:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_checkMissRecord_E1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="H4_checkMissRecord_E1" duration-ms="0" started-at="2018-04-22T04:35:08Z" finished-at="2018-04-22T04:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- H4_checkMissRecord_E1 -->
        <test-method status="FAIL" signature="I1_makeCall_SPS_noAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I1_makeCall_SPS_noAnswer" duration-ms="36427" started-at="2018-04-22T04:35:08Z" finished-at="2018-04-22T04:35:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I1_makeCall_SPS_noAnswer(AutoCLIP.java:757)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_makeCall_SPS_noAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2072" started-at="2018-04-22T04:35:45Z" finished-at="2018-04-22T04:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I3_checkMissRecord_SPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I3_checkMissRecord_SPS" duration-ms="21017" started-at="2018-04-22T04:35:47Z" finished-at="2018-04-22T04:36:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I3_checkMissRecord_SPS(AutoCLIP.java:790)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_checkMissRecord_SPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:36:08Z" finished-at="2018-04-22T04:36:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I4_checkMissRecord_SPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I4_checkMissRecord_SPX" duration-ms="20982" started-at="2018-04-22T04:36:10Z" finished-at="2018-04-22T04:36:31Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I4_checkMissRecord_SPX(AutoCLIP.java:806)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打881100通过spx外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I4_checkMissRecord_SPX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2081" started-at="2018-04-22T04:36:31Z" finished-at="2018-04-22T04:36:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I5_checkMissRecord_BRI()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I5_checkMissRecord_BRI" duration-ms="21005" started-at="2018-04-22T04:36:33Z" finished-at="2018-04-22T04:36:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I5_checkMissRecord_BRI(AutoCLIP.java:824)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I5_checkMissRecord_BRI -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2074" started-at="2018-04-22T04:36:54Z" finished-at="2018-04-22T04:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I6_checkMissRecord_E1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I6_checkMissRecord_E1" duration-ms="0" started-at="2018-04-22T04:36:56Z" finished-at="2018-04-22T04:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I6_checkMissRecord_E1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:36:56Z" finished-at="2018-04-22T04:36:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I8_disMissRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I8_disMissRecord" duration-ms="12240" started-at="2018-04-22T04:36:56Z" finished-at="2018-04-22T04:37:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 取消勾选 只记录未接电话]]>
            </line>
          </reporter-output>
        </test-method> <!-- I8_disMissRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:37:08Z" finished-at="2018-04-22T04:37:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I9_checkMissRecord1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I9_checkMissRecord1" duration-ms="36382" started-at="2018-04-22T04:37:08Z" finished-at="2018-04-22T04:37:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I9_checkMissRecord1(AutoCLIP.java:875)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I9_checkMissRecord1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2072" started-at="2018-04-22T04:37:44Z" finished-at="2018-04-22T04:37:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I9_checkMissRecord2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="I9_checkMissRecord2" duration-ms="21001" started-at="2018-04-22T04:37:47Z" finished-at="2018-04-22T04:38:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.I9_checkMissRecord2(AutoCLIP.java:888)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I9_checkMissRecord2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2077" started-at="2018-04-22T04:38:08Z" finished-at="2018-04-22T04:38:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_deleteUsedRecords()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J1_deleteUsedRecords" duration-ms="13338" started-at="2018-04-22T04:38:10Z" finished-at="2018-04-22T04:38:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 勾选  删除使用过的记录]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_deleteUsedRecords -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T04:38:23Z" finished-at="2018-04-22T04:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J2_checkUsedRecord_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J2_checkUsedRecord_makeCall" duration-ms="21151" started-at="2018-04-22T04:38:23Z" finished-at="2018-04-22T04:38:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.J2_checkUsedRecord_makeCall(AutoCLIP.java:915)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_checkUsedRecord_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2065" started-at="2018-04-22T04:38:44Z" finished-at="2018-04-22T04:38:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J3_checkUsedRecord_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J3_checkUsedRecord_makeCall" duration-ms="28759" started-at="2018-04-22T04:38:46Z" finished-at="2018-04-22T04:39:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 再呼入一次，验证UsedRecord生效]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_checkUsedRecord_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T04:39:15Z" finished-at="2018-04-22T04:39:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J4_disUsedRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J4_disUsedRecord" duration-ms="13243" started-at="2018-04-22T04:39:15Z" finished-at="2018-04-22T04:39:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 取消勾选 删除使用过的记录]]>
            </line>
          </reporter-output>
        </test-method> <!-- J4_disUsedRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:39:28Z" finished-at="2018-04-22T04:39:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J5_makeCall_SPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J5_makeCall_SPS" duration-ms="36485" started-at="2018-04-22T04:39:28Z" finished-at="2018-04-22T04:40:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.J5_makeCall_SPS(AutoCLIP.java:953)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J5_makeCall_SPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:40:05Z" finished-at="2018-04-22T04:40:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J6_checkUsedRecord_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J6_checkUsedRecord_makeCall" duration-ms="21002" started-at="2018-04-22T04:40:07Z" finished-at="2018-04-22T04:40:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.J6_checkUsedRecord_makeCall(AutoCLIP.java:966)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J6_checkUsedRecord_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T04:40:28Z" finished-at="2018-04-22T04:40:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J7_checkUsedRecord_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="J7_checkUsedRecord_makeCall" duration-ms="20896" started-at="2018-04-22T04:40:30Z" finished-at="2018-04-22T04:40:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.J7_checkUsedRecord_makeCall(AutoCLIP.java:980)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J7_checkUsedRecord_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2071" started-at="2018-04-22T04:40:51Z" finished-at="2018-04-22T04:40:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_combine()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K1_combine" duration-ms="31489" started-at="2018-04-22T04:40:53Z" finished-at="2018-04-22T04:41:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----所有选项默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_combine -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:41:24Z" finished-at="2018-04-22T04:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K2_makeCall_sps_accept()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K2_makeCall_sps_accept" duration-ms="36275" started-at="2018-04-22T04:41:24Z" finished-at="2018-04-22T04:42:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K2_makeCall_sps_accept(AutoCLIP.java:1025)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出到分机2000,分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_makeCall_sps_accept -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2107" started-at="2018-04-22T04:42:01Z" finished-at="2018-04-22T04:42:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K3_checkTrunk_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K3_checkTrunk_sps" duration-ms="28690" started-at="2018-04-22T04:42:03Z" finished-at="2018-04-22T04:42:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_checkTrunk_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T04:42:31Z" finished-at="2018-04-22T04:42:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K4_makeCall1_SPS_noAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K4_makeCall1_SPS_noAnswer" duration-ms="36474" started-at="2018-04-22T04:42:31Z" finished-at="2018-04-22T04:43:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K4_makeCall1_SPS_noAnswer(AutoCLIP.java:1052)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_makeCall1_SPS_noAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:43:08Z" finished-at="2018-04-22T04:43:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K4_makeCall2_SPS_noAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K4_makeCall2_SPS_noAnswer" duration-ms="36483" started-at="2018-04-22T04:43:10Z" finished-at="2018-04-22T04:43:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K4_makeCall2_SPS_noAnswer(AutoCLIP.java:1066)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打33001通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_makeCall2_SPS_noAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2092" started-at="2018-04-22T04:43:47Z" finished-at="2018-04-22T04:43:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K5_checkTrunk_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K5_checkTrunk_sip" duration-ms="28732" started-at="2018-04-22T04:43:49Z" finished-at="2018-04-22T04:44:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K5_checkTrunk_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:44:17Z" finished-at="2018-04-22T04:44:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K6_checkTrunk_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K6_checkTrunk_sps" duration-ms="21029" started-at="2018-04-22T04:44:17Z" finished-at="2018-04-22T04:44:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K6_checkTrunk_sps(AutoCLIP.java:1093)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K6_checkTrunk_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2074" started-at="2018-04-22T04:44:38Z" finished-at="2018-04-22T04:44:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K7_checkUsedRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K7_checkUsedRecord" duration-ms="28597" started-at="2018-04-22T04:44:40Z" finished-at="2018-04-22T04:45:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到路由目的地——分机1000，而不是呼入到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K7_checkUsedRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:45:09Z" finished-at="2018-04-22T04:45:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K8_makeCall_sip_noAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K8_makeCall_sip_noAnswer" duration-ms="36421" started-at="2018-04-22T04:45:09Z" finished-at="2018-04-22T04:45:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K8_makeCall_sip_noAnswer(AutoCLIP.java:1120)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K8_makeCall_sip_noAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2068" started-at="2018-04-22T04:45:45Z" finished-at="2018-04-22T04:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K9_checkTrunk_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="K9_checkTrunk_sip" duration-ms="20947" started-at="2018-04-22T04:45:48Z" finished-at="2018-04-22T04:46:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.K9_checkTrunk_sip(AutoCLIP.java:1133)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1100，而不是呼入到路由目的地——分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K9_checkTrunk_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2079" started-at="2018-04-22T04:46:08Z" finished-at="2018-04-22T04:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L_addCallRecord1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="L_addCallRecord1" duration-ms="36450" started-at="2018-04-22T04:46:11Z" finished-at="2018-04-22T04:46:47Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.L_addCallRecord1(AutoCLIP.java:1148)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addCallRecord1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2079" started-at="2018-04-22T04:46:47Z" finished-at="2018-04-22T04:46:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L_addCallRecord2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="L_addCallRecord2" duration-ms="36509" started-at="2018-04-22T04:46:49Z" finished-at="2018-04-22T04:47:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.L_addCallRecord2(AutoCLIP.java:1162)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addCallRecord2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2097" started-at="2018-04-22T04:47:26Z" finished-at="2018-04-22T04:47:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L_addCallRecord3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="L_addCallRecord3" duration-ms="36529" started-at="2018-04-22T04:47:28Z" finished-at="2018-04-22T04:48:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.L_addCallRecord3(AutoCLIP.java:1176)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼入到分机2002（因为辅助设备有一个呼入路由DID是2002，所以会匹配这条，导致呼入到2002），分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2002状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addCallRecord3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T04:48:04Z" finished-at="2018-04-22T04:48:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L_addCallRecord4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="L_addCallRecord4" duration-ms="36514" started-at="2018-04-22T04:48:06Z" finished-at="2018-04-22T04:48:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.L_addCallRecord4(AutoCLIP.java:1190)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32003通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addCallRecord4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2066" started-at="2018-04-22T04:48:43Z" finished-at="2018-04-22T04:48:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L_addCallRecord5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="L_addCallRecord5" duration-ms="36473" started-at="2018-04-22T04:48:45Z" finished-at="2018-04-22T04:49:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.L_addCallRecord5(AutoCLIP.java:1204)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32004通过sps外线呼入到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addCallRecord5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-04-22T04:49:21Z" finished-at="2018-04-22T04:49:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M1_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M1_deleteOne_no" duration-ms="12331" started-at="2018-04-22T04:49:23Z" finished-at="2018-04-22T04:49:36Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:669)
	at com.yeastar.swebtest.driver.SwebDriver.gridClick(SwebDriver.java:165)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M1_deleteOne_no(AutoCLIP.java:1220)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个AutoCLIP记录——选择no]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:49:36Z" finished-at="2018-04-22T04:49:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M2_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M2_deleteOne_yes" duration-ms="8020" started-at="2018-04-22T04:49:36Z" finished-at="2018-04-22T04:49:44Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:669)
	at com.yeastar.swebtest.driver.SwebDriver.gridClick(SwebDriver.java:165)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M2_deleteOne_yes(AutoCLIP.java:1233)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个AutoCLIP记录——选择yes]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T04:49:44Z" finished-at="2018-04-22T04:49:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M3_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M3_deletePart_no" duration-ms="7537" started-at="2018-04-22T04:49:44Z" finished-at="2018-04-22T04:49:51Z">
          <exception class="org.openqa.selenium.WebDriverException">
            <message>
              <![CDATA[unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.WebDriverException: unknown error: Cannot read property 'id' of undefined
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 8 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.executeScript(RemoteWebDriver.java:577)
	at com.yeastar.swebtest.driver.SwebDriver.executeJs(SwebDriver.java:669)
	at com.yeastar.swebtest.driver.SwebDriver.gridCheck(SwebDriver.java:189)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M3_deletePart_no(AutoCLIP.java:1257)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.WebDriverException -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M3_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:49:51Z" finished-at="2018-04-22T04:49:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M4_deltePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M4_deltePart_yes" duration-ms="15698" started-at="2018-04-22T04:49:51Z" finished-at="2018-04-22T04:50:07Z">
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should be visible {By.xpath: .//div[starts-with(@id,'messagebox-')]//span[text()='Yes']}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="button-1006-btnInnerEl" unselectable="on" displayed:false></span>']]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should be visible {By.xpath: .//div[starts-with(@id,'messagebox-')]//span[text()='Yes']}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="button-1006-btnInnerEl" unselectable="on" displayed:false></span>'
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524343807083.1.png
Timeout: 15 s.
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:66)
	at com.codeborne.selenide.impl.WebElementSource.findAndAssertElementIsVisible(WebElementSource.java:72)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M4_deltePart_yes(AutoCLIP.java:1272)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M4_deltePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T04:50:07Z" finished-at="2018-04-22T04:50:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M5_delteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M5_delteAll_no" duration-ms="20108" started-at="2018-04-22T04:50:07Z" finished-at="2018-04-22T04:50:27Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'cliplist-')]//span[text()='Delete']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'cliplist-')]//span[text()='Delete']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524343827216.2.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span id="button-7127-btnInnerEl" data-ref="btnInnerEl" unselectable="on" class="x-btn-inner x-btn-inner-ys-theme-small">...</span> is not clickable at point (561, 305). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M5_delteAll_no(AutoCLIP.java:1286)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span id="button-7127-btnInnerEl" data-ref="btnInnerEl" unselectable="on" class="x-btn-inner x-btn-inner-ys-theme-small">...</span> is not clickable at point (561, 305). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 22 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M5_delteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:50:27Z" finished-at="2018-04-22T04:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M6_delteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="M6_delteAll_yes" duration-ms="15549" started-at="2018-04-22T04:50:27Z" finished-at="2018-04-22T04:50:43Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'cliplist-')]//span[text()='Delete']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'cliplist-')]//span[text()='Delete']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524343842776.3.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <span id="button-7127-btnInnerEl" data-ref="btnInnerEl" unselectable="on" class="x-btn-inner x-btn-inner-ys-theme-small">...</span> is not clickable at point (561, 305). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.M6_delteAll_yes(AutoCLIP.java:1296)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <span id="button-7127-btnInnerEl" data-ref="btnInnerEl" unselectable="on" class="x-btn-inner x-btn-inner-ys-theme-small">...</span> is not clickable at point (561, 305). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 23 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M6_delteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:50:43Z" finished-at="2018-04-22T04:50:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="N_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="N_recovery" duration-ms="20860" started-at="2018-04-22T04:50:43Z" finished-at="2018-04-22T04:51:04Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-clip-trunkinfo']//a[@data-qtip='Remove All from Selected']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-clip-trunkinfo']//a[@data-qtip='Remove All from Selected']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524343863643.4.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-1403" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-1403">...</a> is not clickable at point (1012, 672). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP.N_recovery(AutoCLIP.java:1313)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-1403" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-1403">...</a> is not clickable at point (1012, 672). Other element would receive the click: <div role="presentation" class="x-mask x-border-box" style="height: 948px; width: 1904px; z-index: 28996; right: auto; left: 0px; top: 0px;" id="ext-element-81"></div>
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 28 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14220_1138}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: de03d6ac101a254087f13687fbb7c387
	at sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 ----所有选项默认----]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:51:04Z" finished-at="2018-04-22T04:51:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP@1438d26]" name="AfterClass" is-config="true" duration-ms="14276" started-at="2018-04-22T04:51:04Z" finished-at="2018-04-22T04:51:18Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：====== AutoCLIP ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.AutoCLIP -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="BeforeClass" is-config="true" duration-ms="48023" started-at="2018-04-22T00:28:56Z" finished-at="2018-04-22T00:29:44Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======前置环境设置—BeforeTest======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A1_addExtension" duration-ms="79772" started-at="2018-04-22T00:29:44Z" finished-at="2018-04-22T00:31:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 批量创建分机1100~1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 批量创建分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T00:31:04Z" finished-at="2018-04-22T00:31:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_editExtenName1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A2_editExtenName1" duration-ms="27142" started-at="2018-04-22T00:31:04Z" finished-at="2018-04-22T00:31:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1103的名字为xlq]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_editExtenName1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T00:31:31Z" finished-at="2018-04-22T00:31:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_editExtenEmail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A3_editExtenEmail1" duration-ms="21742" started-at="2018-04-22T00:31:31Z" finished-at="2018-04-22T00:31:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1000的邮箱为1000@yeastar.com]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_editExtenEmail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T00:31:53Z" finished-at="2018-04-22T00:31:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_editExtenEmail2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A3_editExtenEmail2" duration-ms="30959" started-at="2018-04-22T00:31:53Z" finished-at="2018-04-22T00:32:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1105的邮箱为autotest@yeastar.com]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_editExtenEmail2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T00:32:24Z" finished-at="2018-04-22T00:32:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_editExtenName2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A3_editExtenName2" duration-ms="28521" started-at="2018-04-22T00:32:24Z" finished-at="2018-04-22T00:32:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑分机1104的名字为xll]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_editExtenName2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T00:32:52Z" finished-at="2018-04-22T00:32:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_addExtensionGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="A4_addExtensionGroup" duration-ms="33982" started-at="2018-04-22T00:32:52Z" finished-at="2018-04-22T00:33:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_addExtensionGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T00:33:26Z" finished-at="2018-04-22T00:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="B1_addtrunk" duration-ms="56687" started-at="2018-04-22T00:33:26Z" finished-at="2018-04-22T00:34:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有VoIP外线]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip外线SIP1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="2133" started-at="2018-04-22T00:34:23Z" finished-at="2018-04-22T00:34:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="B_addtrunk" duration-ms="43625" started-at="2018-04-22T00:34:25Z" finished-at="2018-04-22T00:35:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sip2外线SIP2]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="2083" started-at="2018-04-22T00:35:09Z" finished-at="2018-04-22T00:35:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="C1_addtrunk" duration-ms="0" started-at="2018-04-22T00:35:11Z" finished-at="2018-04-22T00:35:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C1_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T00:35:11Z" finished-at="2018-04-22T00:35:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="C_addtrunk" duration-ms="43999" started-at="2018-04-22T00:35:11Z" finished-at="2018-04-22T00:35:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax外线IAX1]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="2088" started-at="2018-04-22T00:35:55Z" finished-at="2018-04-22T00:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="D_addtrunk" duration-ms="40940" started-at="2018-04-22T00:35:57Z" finished-at="2018-04-22T00:36:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps外线SPS1]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="2085" started-at="2018-04-22T00:36:38Z" finished-at="2018-04-22T00:36:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E_addtrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="E_addtrunk" duration-ms="42145" started-at="2018-04-22T00:36:40Z" finished-at="2018-04-22T00:37:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx外线SPX1]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_addtrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="2069" started-at="2018-04-22T00:37:22Z" finished-at="2018-04-22T00:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_addInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="F_addInRoute" duration-ms="51959" started-at="2018-04-22T00:37:24Z" finished-at="2018-04-22T00:38:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_addInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T00:38:16Z" finished-at="2018-04-22T00:38:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute1" duration-ms="32374" started-at="2018-04-22T00:38:16Z" finished-at="2018-04-22T00:38:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T00:38:49Z" finished-at="2018-04-22T00:38:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute2" duration-ms="14906" started-at="2018-04-22T00:38:49Z" finished-at="2018-04-22T00:39:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:39:04Z" finished-at="2018-04-22T00:39:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute3" duration-ms="14993" started-at="2018-04-22T00:39:04Z" finished-at="2018-04-22T00:39:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T00:39:19Z" finished-at="2018-04-22T00:39:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute4" duration-ms="14844" started-at="2018-04-22T00:39:19Z" finished-at="2018-04-22T00:39:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T00:39:34Z" finished-at="2018-04-22T00:39:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute5" duration-ms="14988" started-at="2018-04-22T00:39:34Z" finished-at="2018-04-22T00:39:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T00:39:49Z" finished-at="2018-04-22T00:39:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute6" duration-ms="14934" started-at="2018-04-22T00:39:49Z" finished-at="2018-04-22T00:40:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_addOutRoute6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T00:40:03Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute7" duration-ms="1" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_addOutRoute7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute8()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute8" duration-ms="0" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_addOutRoute8 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_addOutRoute9()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="G_addOutRoute9" duration-ms="0" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_addOutRoute9 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_addivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="H_addivr" duration-ms="48288" started-at="2018-04-22T00:40:04Z" finished-at="2018-04-22T00:40:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_addivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="158" started-at="2018-04-22T00:40:52Z" finished-at="2018-04-22T00:40:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_addringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="I_addringgroup" duration-ms="33408" started-at="2018-04-22T00:40:52Z" finished-at="2018-04-22T00:41:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_addringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T00:41:25Z" finished-at="2018-04-22T00:41:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J_addqueue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="J_addqueue" duration-ms="38894" started-at="2018-04-22T00:41:25Z" finished-at="2018-04-22T00:42:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_addqueue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T00:42:04Z" finished-at="2018-04-22T00:42:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K_addconference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="K_addconference" duration-ms="25529" started-at="2018-04-22T00:42:04Z" finished-at="2018-04-22T00:42:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_addconference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T00:42:30Z" finished-at="2018-04-22T00:42:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L_addcallback()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="L_addcallback" duration-ms="40521" started-at="2018-04-22T00:42:30Z" finished-at="2018-04-22T00:43:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_addcallback -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T00:43:10Z" finished-at="2018-04-22T00:43:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M_adddisa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="M_adddisa" duration-ms="37787" started-at="2018-04-22T00:43:10Z" finished-at="2018-04-22T00:43:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除所有DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- M_adddisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T00:43:48Z" finished-at="2018-04-22T00:43:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_addPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="N_addPin" duration-ms="49344" started-at="2018-04-22T00:43:48Z" finished-at="2018-04-22T00:44:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除所有PIN码]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有PIN码]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_addPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T00:44:38Z" finished-at="2018-04-22T00:44:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O1_setRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="O1_setRecord" duration-ms="9581" started-at="2018-04-22T00:44:38Z" finished-at="2018-04-22T00:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- O1_setRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:44:47Z" finished-at="2018-04-22T00:44:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O2_setRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="O2_setRecord" duration-ms="48380" started-at="2018-04-22T00:44:47Z" finished-at="2018-04-22T00:45:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
            </line>
          </reporter-output>
        </test-method> <!-- O2_setRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T00:45:36Z" finished-at="2018-04-22T00:45:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_setRegistrationTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="P1_setRegistrationTime" duration-ms="7181" started-at="2018-04-22T00:45:36Z" finished-at="2018-04-22T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- P1_setRegistrationTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-04-22T00:45:43Z" finished-at="2018-04-22T00:45:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_setCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="P2_setCode" duration-ms="7401" started-at="2018-04-22T00:45:43Z" finished-at="2018-04-22T00:45:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- P2_setCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="94" started-at="2018-04-22T00:45:50Z" finished-at="2018-04-22T00:45:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_setAMI()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="Q_setAMI" duration-ms="20819" started-at="2018-04-22T00:45:50Z" finished-at="2018-04-22T00:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Q_setAMI -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T00:46:11Z" finished-at="2018-04-22T00:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="R_UserPermission()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="R_UserPermission" duration-ms="36596" started-at="2018-04-22T00:46:11Z" finished-at="2018-04-22T00:46:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加分机1105具有管理员权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- R_UserPermission -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:46:48Z" finished-at="2018-04-22T00:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="S_setSystemTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="S_setSystemTime" duration-ms="121795" started-at="2018-04-22T00:46:48Z" finished-at="2018-04-22T00:48:50Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- S_setSystemTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:48:50Z" finished-at="2018-04-22T00:48:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest@f2b07d]" name="AfterClass" is-config="true" duration-ms="13582" started-at="2018-04-22T00:48:50Z" finished-at="2018-04-22T00:49:03Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======前置环境设置—BeforeTest======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.BeforeTest -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="BeforeClass" is-config="true" duration-ms="29687" started-at="2018-04-22T05:35:43Z" finished-at="2018-04-22T05:36:13Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  IVR  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="Register" is-config="true" duration-ms="49138" started-at="2018-04-22T05:36:13Z" finished-at="2018-04-22T05:37:02Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A1_Init" duration-ms="22072" started-at="2018-04-22T05:37:02Z" finished-at="2018-04-22T05:37:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T05:37:24Z" finished-at="2018-04-22T05:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="20153" started-at="2018-04-22T05:37:24Z" data-provider="add" finished-at="2018-04-22T05:37:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=5, RepeatCount=3, DialOutbound=false, CheckVoicemail=false, Key1=D, Digit=5, DialExtension=false, Key0=h, Number=6501, Des0=, Name=a, Des1=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：a：6501]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:37:44Z" finished-at="2018-04-22T05:37:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="39308" started-at="2018-04-22T05:37:44Z" data-provider="add" finished-at="2018-04-22T05:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=10, RepeatCount=4, DialOutbound=true, CheckVoicemail=true, Key1=C, Digit=10, DialExtension=true, Key0=e, Number=6502, Des0=1000, Name=Yeastar202, Des1=Callback1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：Yeastar202：6502]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T05:38:24Z" finished-at="2018-04-22T05:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="30362" started-at="2018-04-22T05:38:24Z" data-provider="add" finished-at="2018-04-22T05:38:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=15, RepeatCount=1, DialOutbound=false, CheckVoicemail=false, Key1=d, Digit=15, DialExtension=true, Key0=v, Number=6503, Des0=1105, Name=12345abcdefghijklmnopqrstuvwxyz, Des1=DISA1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：12345abcdefghijklmnopqrstuvwxyz：6503]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:38:54Z" finished-at="2018-04-22T05:38:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="37863" started-at="2018-04-22T05:38:54Z" data-provider="add" finished-at="2018-04-22T05:39:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=3, RepeatCount=2, DialOutbound=true, CheckVoicemail=true, Key1=e, Digit=3, DialExtension=false, Key0=i, Number=6504, Des0=a, Name=*.*, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：*.*：6504]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:39:32Z" finished-at="2018-04-22T05:39:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="30081" started-at="2018-04-22T05:39:32Z" data-provider="add" finished-at="2018-04-22T05:40:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=5, RepeatCount=5, DialOutbound=false, CheckVoicemail=true, Key1=e, Digit=5, DialExtension=true, Key0=r, Number=6505, Des0=RingGroup1, Name=IVR6505, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：IVR6505：6505]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T05:40:02Z" finished-at="2018-04-22T05:40:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="37853" started-at="2018-04-22T05:40:02Z" data-provider="add" finished-at="2018-04-22T05:40:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=10, RepeatCount=3, DialOutbound=true, CheckVoicemail=false, Key1=e, Digit=10, DialExtension=false, Key0=q, Number=6506, Des0=Queue1, Name=さようなら, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：さようなら：6506]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T05:40:40Z" finished-at="2018-04-22T05:40:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="36671" started-at="2018-04-22T05:40:40Z" data-provider="add" finished-at="2018-04-22T05:41:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=15, RepeatCount=3, DialOutbound=true, CheckVoicemail=false, Key1=e, Digit=15, DialExtension=true, Key0=c, Number=6507, Des0=Conference1, Name=Досвидания, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：Досвидания：6507]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:41:17Z" finished-at="2018-04-22T05:41:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A2_AddIVR" duration-ms="30132" started-at="2018-04-22T05:41:17Z" data-provider="add" finished-at="2018-04-22T05:41:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=3, RepeatCount=3, DialOutbound=false, CheckVoicemail=true, Key1=e, Digit=3, DialExtension=false, Key0=p, Number=6508, Des0=prompt1, Name=viszontlátasra, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IVR：viszontlátasra：6508]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T05:41:47Z" finished-at="2018-04-22T05:41:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_EditKeys()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="A3_EditKeys" duration-ms="89198" started-at="2018-04-22T05:41:47Z" finished-at="2018-04-22T05:43:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑IVR：Yeastar202，Prompt：选择prompt1，按2到Voicemail:1105，按3到RingGroup1，按4到Queue1，按5到Conference1，按6到prompt1，按7到分机到IVR：*.*，按8到1106（fxs），按9到Dial by Name，按#到分机1100，按*到分机1101，Timeout到分机1102，Invalid到prompt1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_EditKeys -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T05:43:16Z" finished-at="2018-04-22T05:43:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_EditInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="B_EditInRoute1" duration-ms="35661" started-at="2018-04-22T05:43:16Z" finished-at="2018-04-22T05:43:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1，到IVR：Yeastar202]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_EditInRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T05:43:52Z" finished-at="2018-04-22T05:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_sip_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C1_sip_key0_1000" duration-ms="57167" started-at="2018-04-22T05:43:52Z" finished-at="2018-04-22T05:44:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_sip_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:44:49Z" finished-at="2018-04-22T05:44:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sps_keyj_1100()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C2_sps_keyj_1100" duration-ms="64935" started-at="2018-04-22T05:44:49Z" finished-at="2018-04-22T05:45:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sps_keyj_1100 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:45:54Z" finished-at="2018-04-22T05:45:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_iax_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C3_iax_key0_1000" duration-ms="49020" started-at="2018-04-22T05:45:54Z" finished-at="2018-04-22T05:46:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到IVR：6502,按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_iax_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:46:43Z" finished-at="2018-04-22T05:46:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C4_spx_key0_1000" duration-ms="78730" started-at="2018-04-22T05:46:43Z" finished-at="2018-04-22T05:48:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到IVR：6502，按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_spx_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:48:02Z" finished-at="2018-04-22T05:48:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_fxo_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C5_fxo_key0_1000" duration-ms="39053" started-at="2018-04-22T05:48:02Z" finished-at="2018-04-22T05:48:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到IVR：6502，按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_fxo_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:48:41Z" finished-at="2018-04-22T05:48:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_bri_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C6_bri_key0_1000" duration-ms="41347" started-at="2018-04-22T05:48:41Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到IVR：6502，按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_bri_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_e1_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C7_e1_key0_1000" duration-ms="0" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_e1_key0_1000 -->
        <test-method status="PASS" signature="C8_gsm_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="C8_gsm_key0_1000" duration-ms="0" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_gsm_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:49:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_key1_callback()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D1_key1_callback" duration-ms="56577" started-at="2018-04-22T05:49:22Z" finished-at="2018-04-22T05:50:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按1到Callback1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_key1_callback -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:50:19Z" finished-at="2018-04-22T05:50:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_key2_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D2_key2_voicemail1" duration-ms="67918" started-at="2018-04-22T05:50:19Z" finished-at="2018-04-22T05:51:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按2到1105的Voicemail]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:51:27Z" finished-at="2018-04-22T05:51:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_key2_voicemail2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D2_key2_voicemail2" duration-ms="26168" started-at="2018-04-22T05:51:27Z" finished-at="2018-04-22T05:51:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105登录查看存在CallerID为2000的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为2000(2000)]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T05:51:53Z" finished-at="2018-04-22T05:51:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_key2_voicemail3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D2_key2_voicemail3" duration-ms="22898" started-at="2018-04-22T05:51:53Z" finished-at="2018-04-22T05:52:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 admin重新登录]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T05:52:16Z" finished-at="2018-04-22T05:52:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_key3_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D3_key3_ringgroup" duration-ms="49240" started-at="2018-04-22T05:52:16Z" finished-at="2018-04-22T05:53:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按3到RingGroup1,1100应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_key3_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:53:05Z" finished-at="2018-04-22T05:53:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_key4_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D4_key4_queue" duration-ms="47441" started-at="2018-04-22T05:53:05Z" finished-at="2018-04-22T05:53:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR:6502，按4到Queue1，1105应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_key4_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T05:53:52Z" finished-at="2018-04-22T05:53:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_key5_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D5_key5_conference" duration-ms="37577" started-at="2018-04-22T05:53:52Z" finished-at="2018-04-22T05:54:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按5到Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_key5_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:54:30Z" finished-at="2018-04-22T05:54:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_key6_custom_prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D6_key6_custom_prompt" duration-ms="49839" started-at="2018-04-22T05:54:30Z" finished-at="2018-04-22T05:55:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按6到prompt1,提示音播放完就挂断]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_key6_custom_prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T05:55:20Z" finished-at="2018-04-22T05:55:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_key7_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D7_key7_ivr" duration-ms="49206" started-at="2018-04-22T05:55:20Z" finished-at="2018-04-22T05:56:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按7到IVR6504：*.*，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000按1到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_key7_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:56:09Z" finished-at="2018-04-22T05:56:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_key8_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D8_key8_fxs" duration-ms="35600" started-at="2018-04-22T05:56:09Z" finished-at="2018-04-22T05:56:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按8到分机1106（fxs）]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_key8_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T05:56:45Z" finished-at="2018-04-22T05:56:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D90_key9_dialbyname()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D90_key9_dialbyname" duration-ms="57557" started-at="2018-04-22T05:56:45Z" finished-at="2018-04-22T05:57:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按9到DialByName按957到分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D90_key9_dialbyname -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:57:42Z" finished-at="2018-04-22T05:57:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D91_keyj_1100()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D91_keyj_1100" duration-ms="40617" started-at="2018-04-22T05:57:42Z" finished-at="2018-04-22T05:58:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D91_keyj_1100 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:58:23Z" finished-at="2018-04-22T05:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D92_keyx_1101()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D92_keyx_1101" duration-ms="48561" started-at="2018-04-22T05:58:23Z" finished-at="2018-04-22T05:59:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按*到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D92_keyx_1101 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T05:59:11Z" finished-at="2018-04-22T05:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D93_TimeOut()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D93_TimeOut" duration-ms="96864" started-at="2018-04-22T05:59:11Z" finished-at="2018-04-22T06:00:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，Timeout到分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D93_TimeOut -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T06:00:48Z" finished-at="2018-04-22T06:00:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D94_Invalid()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="D94_Invalid" duration-ms="53004" started-at="2018-04-22T06:00:48Z" finished-at="2018-04-22T06:01:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按A到Custom Prompt：prompt1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D94_Invalid -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:01:41Z" finished-at="2018-04-22T06:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_DialExtension_1103()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="E1_DialExtension_1103" duration-ms="44795" started-at="2018-04-22T06:01:41Z" finished-at="2018-04-22T06:02:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播分机号码1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_DialExtension_1103 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:02:26Z" finished-at="2018-04-22T06:02:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_DialExtension_ringgroup1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="E2_DialExtension_ringgroup1" duration-ms="44957" started-at="2018-04-22T06:02:26Z" finished-at="2018-04-22T06:03:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播响铃组号码6200,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_DialExtension_ringgroup1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T06:03:11Z" finished-at="2018-04-22T06:03:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_DialExtension_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="E3_DialExtension_disable" duration-ms="39454" started-at="2018-04-22T06:03:11Z" finished-at="2018-04-22T06:03:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6508呼入到IVR：6508，直播分机号1103，预期：走到key 1到分机1000，即1000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_DialExtension_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:03:51Z" finished-at="2018-04-22T06:03:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_DialOut_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F1_DialOut_sip" duration-ms="37553" started-at="2018-04-22T06:03:51Z" finished-at="2018-04-22T06:04:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期3001为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_DialOut_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:04:28Z" finished-at="2018-04-22T06:04:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_DialOut_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F2_DialOut_sps" duration-ms="40661" started-at="2018-04-22T06:04:28Z" finished-at="2018-04-22T06:05:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_DialOut_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:05:09Z" finished-at="2018-04-22T06:05:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_DialOut_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F3_DialOut_iax" duration-ms="37575" started-at="2018-04-22T06:05:09Z" finished-at="2018-04-22T06:05:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打23001通过iax外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期3001为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_DialOut_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:05:46Z" finished-at="2018-04-22T06:05:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_DialOut_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F4_DialOut_spx" duration-ms="37549" started-at="2018-04-22T06:05:46Z" finished-at="2018-04-22T06:06:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打42000通过spx外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_DialOut_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:06:24Z" finished-at="2018-04-22T06:06:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_DialOut_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F5_DialOut_fxo" duration-ms="41713" started-at="2018-04-22T06:06:24Z" finished-at="2018-04-22T06:07:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打52000通过pstn外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_DialOut_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:07:06Z" finished-at="2018-04-22T06:07:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_DialOut_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F6_DialOut_bri" duration-ms="37579" started-at="2018-04-22T06:07:06Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打62000通过bri外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_DialOut_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F7_DialOut_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F7_DialOut_e1" duration-ms="0" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F7_DialOut_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F8_DialOut_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F8_DialOut_gsm" duration-ms="1" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F8_DialOut_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F9_DialOut_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="F9_DialOut_disable" duration-ms="32623" started-at="2018-04-22T06:07:43Z" finished-at="2018-04-22T06:08:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6503，按32000（未启用Dial Outbound Routes)，预期1100被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Hang up状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F9_DialOut_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:08:16Z" finished-at="2018-04-22T06:08:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_voicemail_enable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="G1_voicemail_enable" duration-ms="53025" started-at="2018-04-22T06:08:16Z" finished-at="2018-04-22T06:09:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按*02查看分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_voicemail_enable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:09:09Z" finished-at="2018-04-22T06:09:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_voicemail_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="G2_voicemail_disable" duration-ms="30951" started-at="2018-04-22T06:09:09Z" finished-at="2018-04-22T06:09:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打6506，按*02查看语音留言（未启用Dial to Check Voicemail）]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Hang up状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_voicemail_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T06:09:40Z" finished-at="2018-04-22T06:09:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="H_prompt" duration-ms="90262" started-at="2018-04-22T06:09:40Z" finished-at="2018-04-22T06:11:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，检查播放4次的prompt1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:11:10Z" finished-at="2018-04-22T06:11:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="I_delete" duration-ms="57376" started-at="2018-04-22T06:11:10Z" finished-at="2018-04-22T06:12:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：*.*-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：*.*-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：*.*-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：*.*-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:12:08Z" finished-at="2018-04-22T06:12:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="J_recovery" duration-ms="58797" started-at="2018-04-22T06:12:08Z" finished-at="2018-04-22T06:13:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 IVR恢复BeforeTest设置]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T06:13:06Z" finished-at="2018-04-22T06:13:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K_editInbound2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="K_editInbound2" duration-ms="34934" started-at="2018-04-22T06:13:06Z" finished-at="2018-04-22T06:13:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_editInbound2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:13:41Z" finished-at="2018-04-22T06:13:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@1ebcd8]" name="AfterClass" is-config="true" duration-ms="13544" started-at="2018-04-22T06:13:41Z" finished-at="2018-04-22T06:13:55Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  IVR  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="BeforeClass" is-config="true" duration-ms="27570" started-at="2018-04-22T02:43:18Z" finished-at="2018-04-22T02:43:46Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  Queue  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="Register" is-config="true" duration-ms="46927" started-at="2018-04-22T02:43:46Z" finished-at="2018-04-22T02:44:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】注册分机1000/1100/1101/1102/1103/1105/3001/2000/2001]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A1_Init" duration-ms="30732" started-at="2018-04-22T02:44:33Z" finished-at="2018-04-22T02:45:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:45:03Z" finished-at="2018-04-22T02:45:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="41154" started-at="2018-04-22T02:45:04Z" data-provider="add" finished-at="2018-04-22T02:45:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=ExtensionGroup1,1103, Satisfaction=satisfaction, AgentTimeout=15, Name=a, HoldTime=false, Number=6701, RingStrategy=ringall, PeriodicFrequency=60, DID=, Password=, MusicOnHold=Autotest, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=[None], Retry=20, AgentID=[Default], AgentAnnouncement=AgentAnnouncement, Key=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列a：6701]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T02:45:45Z" finished-at="2018-04-22T02:45:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="37461" started-at="2018-04-22T02:45:45Z" data-provider="add" finished-at="2018-04-22T02:46:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=队列6702, HoldTime=false, Number=6702, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503301, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=10, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列队列6702：6702]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:46:22Z" finished-at="2018-04-22T02:46:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="50136" started-at="2018-04-22T02:46:22Z" data-provider="add" finished-at="2018-04-22T02:47:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=20, Name=FailtoExtension, HoldTime=false, Number=6703, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503302, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=e, FailoverDes2=1000, KeyDes2=1000, FailoverDes1=e, MaxWaitTime=15, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列FailtoExtension：6703]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:47:12Z" finished-at="2018-04-22T02:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="50466" started-at="2018-04-22T02:47:12Z" data-provider="add" finished-at="2018-04-22T02:48:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=30, Name=12345abcdefghijklmnopqrstuvwxyz, HoldTime=true, Number=6704, RingStrategy=random, PeriodicFrequency=60, DID=5503303, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=v, FailoverDes2=1105, KeyDes2=1105, FailoverDes1=v, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列12345abcdefghijklmnopqrstuvwxyz：6704]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T02:48:03Z" finished-at="2018-04-22T02:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="49928" started-at="2018-04-22T02:48:03Z" data-provider="add" finished-at="2018-04-22T02:48:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=10, Name=*.*, HoldTime=false, Number=6705, RingStrategy=rrmemory, PeriodicFrequency=30, DID=5503304, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=i, FailoverDes2=IVR1, KeyDes2=IVR1, FailoverDes1=i, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=[None], Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列*.*：6705]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T02:48:53Z" finished-at="2018-04-22T02:48:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="47194" started-at="2018-04-22T02:48:53Z" data-provider="add" finished-at="2018-04-22T02:49:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=Queue6705, HoldTime=true, Number=6706, RingStrategy=linear, PeriodicFrequency=30, DID=5503305, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=r, FailoverDes2=RingGroup1, KeyDes2=RingGroup1, FailoverDes1=r, MaxWaitTime=10, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Queue6705：6706]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T02:49:40Z" finished-at="2018-04-22T02:49:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="46622" started-at="2018-04-22T02:49:40Z" data-provider="add" finished-at="2018-04-22T02:50:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=さようなら, HoldTime=true, Number=6707, RingStrategy=ringall, PeriodicFrequency=30, DID=5503306, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=q, FailoverDes2=a, KeyDes2=a, FailoverDes1=q, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列さようなら：6707]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T02:50:27Z" finished-at="2018-04-22T02:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="47125" started-at="2018-04-22T02:50:27Z" data-provider="add" finished-at="2018-04-22T02:51:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Досвидания, HoldTime=false, Number=6708, RingStrategy=ringall, PeriodicFrequency=30, DID=5503307, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=c, FailoverDes2=Conference1, KeyDes2=Conference1, FailoverDes1=c, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Досвидания：6708]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T02:51:14Z" finished-at="2018-04-22T02:51:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="38100" started-at="2018-04-22T02:51:14Z" data-provider="add" finished-at="2018-04-22T02:51:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=viszontlátasra, HoldTime=false, Number=6709, RingStrategy=ringall, PeriodicFrequency=30, DID=5503308, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=D, FailoverDes2=, KeyDes2=, FailoverDes1=D, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=7}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列viszontlátasra：6709]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:51:52Z" finished-at="2018-04-22T02:51:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="50360" started-at="2018-04-22T02:51:52Z" data-provider="add" finished-at="2018-04-22T02:52:42Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=1100,1105, Satisfaction=[None], AgentTimeout=10, Name=Autotest, HoldTime=false, Number=6710, RingStrategy=leastrecent, PeriodicFrequency=30, DID=5503309, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1103, KeyDes1=e, FailoverDes2=1100, KeyDes2=1100, FailoverDes1=e, MaxWaitTime=1800, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=8}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Autotest：6710]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="52" started-at="2018-04-22T02:52:42Z" finished-at="2018-04-22T02:52:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="45385" started-at="2018-04-22T02:52:42Z" data-provider="add" finished-at="2018-04-22T02:53:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_fewstcalls, HoldTime=false, Number=6711, RingStrategy=fewestcalls, PeriodicFrequency=60, DID=5503310, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Queue_fewstcalls：6711]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T02:53:28Z" finished-at="2018-04-22T02:53:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="42724" started-at="2018-04-22T02:53:28Z" data-provider="add" finished-at="2018-04-22T02:54:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Queue_random, HoldTime=false, Number=6712, RingStrategy=random, PeriodicFrequency=60, DID=5503311, Password=1234567890, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Queue_random：6712]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T02:54:11Z" finished-at="2018-04-22T02:54:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="44100" started-at="2018-04-22T02:54:11Z" data-provider="add" finished-at="2018-04-22T02:54:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=ExtensionGroup1, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_rrmemory, HoldTime=false, Number=6713, RingStrategy=rrmemory, PeriodicFrequency=60, DID=5503312, Password=1, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Queue_rrmemory：6713]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:54:55Z" finished-at="2018-04-22T02:54:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="A2_AddQueues" duration-ms="46802" started-at="2018-04-22T02:54:55Z" data-provider="add" finished-at="2018-04-22T02:55:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1100,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_linear, HoldTime=false, Number=6714, RingStrategy=linear, PeriodicFrequency=60, DID=5503313, Password=0, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101,1103, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加队列Queue_linear：6714]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:55:41Z" finished-at="2018-04-22T02:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AddInbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B1_AddInbound" duration-ms="20408" started-at="2018-04-22T02:55:41Z" finished-at="2018-04-22T02:56:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:56:02Z" finished-at="2018-04-22T02:56:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="30348" started-at="2018-04-22T02:56:02Z" data-provider="add" finished-at="2018-04-22T02:56:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=ExtensionGroup1,1103, Satisfaction=satisfaction, AgentTimeout=15, Name=a, HoldTime=false, Number=6701, RingStrategy=ringall, PeriodicFrequency=60, DID=, Password=, MusicOnHold=Autotest, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=[None], Retry=20, AgentID=[Default], AgentAnnouncement=AgentAnnouncement, Key=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：aDID：，Destination：a]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:56:32Z" finished-at="2018-04-22T02:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="30883" started-at="2018-04-22T02:56:32Z" data-provider="add" finished-at="2018-04-22T02:57:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=队列6702, HoldTime=false, Number=6702, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503301, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=10, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：队列6702DID：5503301，Destination：队列6702]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T02:57:03Z" finished-at="2018-04-22T02:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="30213" started-at="2018-04-22T02:57:03Z" data-provider="add" finished-at="2018-04-22T02:57:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=20, Name=FailtoExtension, HoldTime=false, Number=6703, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503302, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=e, FailoverDes2=1000, KeyDes2=1000, FailoverDes1=e, MaxWaitTime=15, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：FailtoExtensionDID：5503302，Destination：FailtoExtension]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:57:33Z" finished-at="2018-04-22T02:57:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31818" started-at="2018-04-22T02:57:34Z" data-provider="add" finished-at="2018-04-22T02:58:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=30, Name=12345abcdefghijklmnopqrstuvwxyz, HoldTime=true, Number=6704, RingStrategy=random, PeriodicFrequency=60, DID=5503303, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=v, FailoverDes2=1105, KeyDes2=1105, FailoverDes1=v, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：12345abcdefghijklmnopqrstuvwxyzDID：5503303，Destination：12345abcdefghijklmnopqrstuvwxyz]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T02:58:05Z" finished-at="2018-04-22T02:58:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31029" started-at="2018-04-22T02:58:05Z" data-provider="add" finished-at="2018-04-22T02:58:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=10, Name=*.*, HoldTime=false, Number=6705, RingStrategy=rrmemory, PeriodicFrequency=30, DID=5503304, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=i, FailoverDes2=IVR1, KeyDes2=IVR1, FailoverDes1=i, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=[None], Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：*.*DID：5503304，Destination：*.*]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T02:58:36Z" finished-at="2018-04-22T02:58:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31007" started-at="2018-04-22T02:58:36Z" data-provider="add" finished-at="2018-04-22T02:59:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=Queue6705, HoldTime=true, Number=6706, RingStrategy=linear, PeriodicFrequency=30, DID=5503305, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=r, FailoverDes2=RingGroup1, KeyDes2=RingGroup1, FailoverDes1=r, MaxWaitTime=10, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Queue6705DID：5503305，Destination：Queue6705]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T02:59:07Z" finished-at="2018-04-22T02:59:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="30897" started-at="2018-04-22T02:59:07Z" data-provider="add" finished-at="2018-04-22T02:59:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=さようなら, HoldTime=true, Number=6707, RingStrategy=ringall, PeriodicFrequency=30, DID=5503306, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=q, FailoverDes2=a, KeyDes2=a, FailoverDes1=q, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：さようならDID：5503306，Destination：さようなら]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:59:38Z" finished-at="2018-04-22T02:59:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31258" started-at="2018-04-22T02:59:38Z" data-provider="add" finished-at="2018-04-22T03:00:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Досвидания, HoldTime=false, Number=6708, RingStrategy=ringall, PeriodicFrequency=30, DID=5503307, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=c, FailoverDes2=Conference1, KeyDes2=Conference1, FailoverDes1=c, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：ДосвиданияDID：5503307，Destination：Досвидания]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T03:00:10Z" finished-at="2018-04-22T03:00:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31303" started-at="2018-04-22T03:00:10Z" data-provider="add" finished-at="2018-04-22T03:00:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=viszontlátasra, HoldTime=false, Number=6709, RingStrategy=ringall, PeriodicFrequency=30, DID=5503308, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=D, FailoverDes2=, KeyDes2=, FailoverDes1=D, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=7}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：viszontlátasraDID：5503308，Destination：viszontlátasra]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T03:00:41Z" finished-at="2018-04-22T03:00:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="30972" started-at="2018-04-22T03:00:41Z" data-provider="add" finished-at="2018-04-22T03:01:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=1100,1105, Satisfaction=[None], AgentTimeout=10, Name=Autotest, HoldTime=false, Number=6710, RingStrategy=leastrecent, PeriodicFrequency=30, DID=5503309, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1103, KeyDes1=e, FailoverDes2=1100, KeyDes2=1100, FailoverDes1=e, MaxWaitTime=1800, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=8}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：AutotestDID：5503309，Destination：Autotest]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:01:12Z" finished-at="2018-04-22T03:01:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31355" started-at="2018-04-22T03:01:12Z" data-provider="add" finished-at="2018-04-22T03:01:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_fewstcalls, HoldTime=false, Number=6711, RingStrategy=fewestcalls, PeriodicFrequency=60, DID=5503310, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Queue_fewstcallsDID：5503310，Destination：Queue_fewstcalls]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:01:43Z" finished-at="2018-04-22T03:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31128" started-at="2018-04-22T03:01:43Z" data-provider="add" finished-at="2018-04-22T03:02:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Queue_random, HoldTime=false, Number=6712, RingStrategy=random, PeriodicFrequency=60, DID=5503311, Password=1234567890, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Queue_randomDID：5503311，Destination：Queue_random]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T03:02:14Z" finished-at="2018-04-22T03:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31305" started-at="2018-04-22T03:02:14Z" data-provider="add" finished-at="2018-04-22T03:02:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=ExtensionGroup1, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_rrmemory, HoldTime=false, Number=6713, RingStrategy=rrmemory, PeriodicFrequency=60, DID=5503312, Password=1, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Queue_rrmemoryDID：5503312，Destination：Queue_rrmemory]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T03:02:46Z" finished-at="2018-04-22T03:02:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B2_AddInbound" duration-ms="31230" started-at="2018-04-22T03:02:46Z" data-provider="add" finished-at="2018-04-22T03:03:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1100,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_linear, HoldTime=false, Number=6714, RingStrategy=linear, PeriodicFrequency=60, DID=5503313, Password=0, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101,1103, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Queue_linearDID：5503313，Destination：Queue_linear]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T03:03:17Z" finished-at="2018-04-22T03:03:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="B3_Apply" duration-ms="8106" started-at="2018-04-22T03:03:17Z" finished-at="2018-04-22T03:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:03:25Z" finished-at="2018-04-22T03:03:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_sps_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C1_sps_6701" duration-ms="44788" started-at="2018-04-22T03:03:25Z" finished-at="2018-04-22T03:04:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_sps_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T03:04:10Z" finished-at="2018-04-22T03:04:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sip_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C2_sip_6701" duration-ms="47037" started-at="2018-04-22T03:04:10Z" finished-at="2018-04-22T03:04:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sip_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T03:04:57Z" finished-at="2018-04-22T03:04:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_iax_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C3_iax_6701" duration-ms="46968" started-at="2018-04-22T03:04:57Z" finished-at="2018-04-22T03:05:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_iax_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:05:44Z" finished-at="2018-04-22T03:05:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C4_spx_6701" duration-ms="49577" started-at="2018-04-22T03:05:44Z" finished-at="2018-04-22T03:06:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_spx_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T03:06:34Z" finished-at="2018-04-22T03:06:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_fxo_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C5_fxo_6701" duration-ms="47520" started-at="2018-04-22T03:06:34Z" finished-at="2018-04-22T03:07:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_fxo_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:07:21Z" finished-at="2018-04-22T03:07:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_bri_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C6_bri_6701" duration-ms="46933" started-at="2018-04-22T03:07:21Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_bri_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_e1_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C7_e1_6701" duration-ms="0" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_e1_6701 -->
        <test-method status="PASS" signature="C8_gsm_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="C8_gsm_6701" duration-ms="0" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_gsm_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_fail_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D1_fail_hangup" duration-ms="11087" started-at="2018-04-22T03:08:08Z" finished-at="2018-04-22T03:08:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到队列6702，预期到Failover：Hangup]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_fail_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T03:08:19Z" finished-at="2018-04-22T03:08:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_fail_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D2_fail_extension" duration-ms="50322" started-at="2018-04-22T03:08:19Z" finished-at="2018-04-22T03:09:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到队列6703，预期到Failover：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_fail_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T03:09:10Z" finished-at="2018-04-22T03:09:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D3_fail_voicemail1" duration-ms="61533" started-at="2018-04-22T03:09:10Z" finished-at="2018-04-22T03:10:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503303通过sps外线呼入到队列6704，预期到Failover：分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T03:10:11Z" finished-at="2018-04-22T03:10:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail2_check()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D3_fail_voicemail2_check" duration-ms="26612" started-at="2018-04-22T03:10:11Z" finished-at="2018-04-22T03:10:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1105登录，查看存在2000留下的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第2行的CallerID为2000(2000)]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail2_check -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="79" started-at="2018-04-22T03:10:38Z" finished-at="2018-04-22T03:10:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail3_login()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D3_fail_voicemail3_login" duration-ms="23058" started-at="2018-04-22T03:10:38Z" finished-at="2018-04-22T03:11:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail3_login -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:11:01Z" finished-at="2018-04-22T03:11:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_fail_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D4_fail_ivr" duration-ms="49362" started-at="2018-04-22T03:11:01Z" finished-at="2018-04-22T03:11:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入到队列6705，预期到Failover：IVR1，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_fail_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:11:50Z" finished-at="2018-04-22T03:11:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_fail_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D5_fail_ringgroup" duration-ms="45560" started-at="2018-04-22T03:11:50Z" finished-at="2018-04-22T03:12:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入到队列6706，预期到Failover：RingGroup，所有成员1000、1100、1105同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_fail_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T03:12:36Z" finished-at="2018-04-22T03:12:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_fail_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D6_fail_queue" duration-ms="49208" started-at="2018-04-22T03:12:36Z" finished-at="2018-04-22T03:13:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入到队列6707，预期到Failover：Queue6701，所有成员都同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_fail_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T03:13:25Z" finished-at="2018-04-22T03:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_fail_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D7_fail_conference" duration-ms="52142" started-at="2018-04-22T03:13:25Z" finished-at="2018-04-22T03:14:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入到队列6708，预期Failover：Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_fail_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T03:14:17Z" finished-at="2018-04-22T03:14:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_fail_DialbyName()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="D8_fail_DialbyName" duration-ms="55230" started-at="2018-04-22T03:14:17Z" finished-at="2018-04-22T03:15:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入到队列6709，预期Failover：DialByName]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_fail_DialbyName -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:15:13Z" finished-at="2018-04-22T03:15:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_key0_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E1_key0_hangup" duration-ms="30675" started-at="2018-04-22T03:15:13Z" finished-at="2018-04-22T03:15:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701，按0，预期被挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会HangUp]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_key0_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:15:43Z" finished-at="2018-04-22T03:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_key1_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E2_key1_extension" duration-ms="38597" started-at="2018-04-22T03:15:43Z" finished-at="2018-04-22T03:16:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到队列6703，按1，预期分机1000响铃，接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_key1_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T03:16:22Z" finished-at="2018-04-22T03:16:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E3_key2_voicemail1" duration-ms="59691" started-at="2018-04-22T03:16:22Z" finished-at="2018-04-22T03:17:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503303通过sps外线呼入到队列6704，按2，预期到分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T03:17:22Z" finished-at="2018-04-22T03:17:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail2_check()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E3_key2_voicemail2_check" duration-ms="26527" started-at="2018-04-22T03:17:22Z" finished-at="2018-04-22T03:17:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1105登录，查看存在2001留下的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第3行的CallerID为2001(2001)]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail2_check -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T03:17:48Z" finished-at="2018-04-22T03:17:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail3_login()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E3_key2_voicemail3_login" duration-ms="20882" started-at="2018-04-22T03:17:48Z" finished-at="2018-04-22T03:18:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail3_login -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:18:09Z" finished-at="2018-04-22T03:18:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_key3_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E4_key3_ivr" duration-ms="45786" started-at="2018-04-22T03:18:09Z" finished-at="2018-04-22T03:18:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入到队列6705，按3，预期到IVR1，按1到分机1000，接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_key3_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:18:55Z" finished-at="2018-04-22T03:18:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_key4_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E5_key4_ringgroup" duration-ms="45569" started-at="2018-04-22T03:18:55Z" finished-at="2018-04-22T03:19:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入到队列6706，按4，预期到RingGroup1，分机1000、1100、1105同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_key4_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T03:19:40Z" finished-at="2018-04-22T03:19:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_key5_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E6_key5_queue" duration-ms="42557" started-at="2018-04-22T03:19:40Z" finished-at="2018-04-22T03:20:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入到队列6707，按5，预期到Queue：a，所有成员同时响铃，分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_key5_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:20:23Z" finished-at="2018-04-22T03:20:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_key6_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E7_key6_conference" duration-ms="50639" started-at="2018-04-22T03:20:23Z" finished-at="2018-04-22T03:21:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入到队列6708，按6，预期到Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_key6_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:21:14Z" finished-at="2018-04-22T03:21:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E8_key7_DialbyName()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="E8_key7_DialbyName" duration-ms="53714" started-at="2018-04-22T03:21:14Z" finished-at="2018-04-22T03:22:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入到队列6709，按7，预期到DialbyName，按957，按1确认，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E8_key7_DialbyName -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:22:07Z" finished-at="2018-04-22T03:22:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_dynamic_login6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F1_dynamic_login6701" duration-ms="15675" started-at="2018-04-22T03:22:07Z" finished-at="2018-04-22T03:22:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6701*加入队列6701，密码：空]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_dynamic_login6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:22:23Z" finished-at="2018-04-22T03:22:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_dynamic_call6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F2_dynamic_call6701" duration-ms="37474" started-at="2018-04-22T03:22:23Z" finished-at="2018-04-22T03:23:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期所有坐席同时响铃，1102接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_dynamic_call6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T03:23:01Z" finished-at="2018-04-22T03:23:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_dynamic_logoff6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F3_dynamic_logoff6701" duration-ms="13178" started-at="2018-04-22T03:23:01Z" finished-at="2018-04-22T03:23:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6701**退出队列6701]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102退出队列6701]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_dynamic_logoff6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T03:23:14Z" finished-at="2018-04-22T03:23:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_dynamic_call6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F4_dynamic_call6701" duration-ms="35969" started-at="2018-04-22T03:23:14Z" finished-at="2018-04-22T03:23:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期1102不会响铃，其它坐席同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102不会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_dynamic_call6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:23:50Z" finished-at="2018-04-22T03:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_dynamic_login6710()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F5_dynamic_login6710" duration-ms="13481" started-at="2018-04-22T03:23:50Z" finished-at="2018-04-22T03:24:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6710*加入队列6710，密码123]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1103输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_dynamic_login6710 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:24:03Z" finished-at="2018-04-22T03:24:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_dynamic_login6711()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F6_dynamic_login6711" duration-ms="15886" started-at="2018-04-22T03:24:03Z" finished-at="2018-04-22T03:24:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6711*加入队列6711，密码123]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_dynamic_login6711 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T03:24:19Z" finished-at="2018-04-22T03:24:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F7_dynamic_login6712()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F7_dynamic_login6712" duration-ms="19403" started-at="2018-04-22T03:24:19Z" finished-at="2018-04-22T03:24:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打6712*加入队列6712，密码1234567890]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1101输入密码1234567890]]>
            </line>
          </reporter-output>
        </test-method> <!-- F7_dynamic_login6712 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:24:39Z" finished-at="2018-04-22T03:24:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F8_dynamic_login6713()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F8_dynamic_login6713" duration-ms="121640" started-at="2018-04-22T03:24:39Z" finished-at="2018-04-22T03:26:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[动态坐席1101输入密码1 【预期：true 实际：false】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 动态坐席1101输入密码1 【预期：true 实际：false】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:333)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.F8_dynamic_login6713(Queue.java:728)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打6713*加入队列6713，密码1--1101已经是该队列的静态坐席]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\动态坐席1101输入密码1 【预期：true 实际：false】.jpg" target="_blank">Error: 动态坐席1101输入密码1 【预期：true 实际：false】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F8_dynamic_login6713 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T03:26:40Z" finished-at="2018-04-22T03:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F9_dynamic_login6714()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="F9_dynamic_login6714" duration-ms="9198" started-at="2018-04-22T03:26:40Z" finished-at="2018-04-22T03:26:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打6714*加入队列6714，密码0]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1101输入密码0]]>
            </line>
          </reporter-output>
        </test-method> <!-- F9_dynamic_login6714 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:26:49Z" finished-at="2018-04-22T03:26:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Fa_dynamic_login6714()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="Fa_dynamic_login6714" duration-ms="19140" started-at="2018-04-22T03:26:49Z" finished-at="2018-04-22T03:27:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6714*加入队列6714，密码0]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1103输入密码0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Fa_dynamic_login6714 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T03:27:09Z" finished-at="2018-04-22T03:27:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_JoinAnnouncement()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G2_JoinAnnouncement" duration-ms="11072" started-at="2018-04-22T03:27:09Z" finished-at="2018-04-22T03:27:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503313通过sps外线呼入，预期呼入到队列6714,2000会听到进入队列的提示音Join，无坐席应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000呼入时播放提示音“Join”]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_JoinAnnouncement -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:27:20Z" finished-at="2018-04-22T03:27:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_MusicOnHold1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G3_MusicOnHold1" duration-ms="6079" started-at="2018-04-22T03:27:20Z" finished-at="2018-04-22T03:27:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期呼入到队列6701，预期播放Music on Hold：Autotest]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000呼入时播放Music on hold ：Autotest]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_MusicOnHold1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:27:26Z" finished-at="2018-04-22T03:27:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_MusicOnHold2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G3_MusicOnHold2" duration-ms="5323" started-at="2018-04-22T03:27:26Z" finished-at="2018-04-22T03:27:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6710呼入队列6710，预期播放Music on Hold：default]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103呼入6710时播放Music on hold ：default]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_MusicOnHold2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T03:27:31Z" finished-at="2018-04-22T03:27:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_AgentID()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G4_AgentID" duration-ms="1" started-at="2018-04-22T03:27:31Z" finished-at="2018-04-22T03:27:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 坐席播报工号提示音----AMI未打印相关信息------请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_AgentID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T03:27:31Z" finished-at="2018-04-22T03:27:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G5_Satisfaction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G5_Satisfaction" duration-ms="116975" started-at="2018-04-22T03:27:31Z" finished-at="2018-04-22T03:29:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:333)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.G5_Satisfaction(Queue.java:850)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，1100先挂断，预期2000会听到满意度调查提示音：satisfaction]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】.jpg" target="_blank">Error: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_Satisfaction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:29:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_CallerPosition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G6_CallerPosition" duration-ms="1" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:29:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 用户公告----AMI未打印相关信息---请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_CallerPosition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:29:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_PeriodicAnnouncements()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G7_PeriodicAnnouncements" duration-ms="0" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:29:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 系统公告----AMI未打印相关信息---请手动测试 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_PeriodicAnnouncements -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:29:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G8_AgentTimeout_Retry()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G8_AgentTimeout_Retry" duration-ms="119721" started-at="2018-04-22T03:29:28Z" finished-at="2018-04-22T03:31:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701，坐席响铃15s后挂断，20s左右会再次响铃,坐席循环第3次响铃时，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103响铃结束]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G8_AgentTimeout_Retry -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T03:31:28Z" finished-at="2018-04-22T03:31:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_warp_time0()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G9_warp_time0" duration-ms="32615" started-at="2018-04-22T03:31:28Z" finished-at="2018-04-22T03:32:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，挂断；再次呼入队列，预期1100会马上响铃（warp time：0）]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_warp_time0 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:32:00Z" finished-at="2018-04-22T03:32:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_warp_time20()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="G9_warp_time20" duration-ms="92955" started-at="2018-04-22T03:32:00Z" finished-at="2018-04-22T03:33:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503311呼入到队列6712，动态坐席1101应答后，挂断；再次呼入队列，预期1101不会马上响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101不会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会再次Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_warp_time20 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:33:33Z" finished-at="2018-04-22T03:33:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="H1_leastRecent" duration-ms="71120" started-at="2018-04-22T03:33:33Z" finished-at="2018-04-22T03:34:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503309呼入到队列6710，预期1103第1个响铃，无应答，1103会再次响铃，应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103结束Ring，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会再次Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:34:45Z" finished-at="2018-04-22T03:34:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="H2_leastRecent" duration-ms="37632" started-at="2018-04-22T03:34:45Z" finished-at="2018-04-22T03:35:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000再次拨打995503309呼入到队列6710，预期1105第1个响铃，接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-04-22T03:35:22Z" finished-at="2018-04-22T03:35:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="H3_leastRecent" duration-ms="38029" started-at="2018-04-22T03:35:22Z" finished-at="2018-04-22T03:36:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000再次拨打995503309呼入到队列6710，预期1100第1个响铃，接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:36:00Z" finished-at="2018-04-22T03:36:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="I1_fewestcalls" duration-ms="73020" started-at="2018-04-22T03:36:00Z" finished-at="2018-04-22T03:37:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503310呼入到队列6711，预期1102响铃，无应答，1102会再次响铃，应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102结束Ring，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会再次Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T03:37:13Z" finished-at="2018-04-22T03:37:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I2_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="I2_fewestcalls" duration-ms="48588" started-at="2018-04-22T03:37:13Z" finished-at="2018-04-22T03:38:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503310再次呼入到队列6711，预期1105响铃，接听保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T03:38:02Z" finished-at="2018-04-22T03:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I3_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="I3_fewestcalls" duration-ms="48512" started-at="2018-04-22T03:38:02Z" finished-at="2018-04-22T03:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503310再次呼入队列6711，预期1000响铃，接听保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:38:50Z" finished-at="2018-04-22T03:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_random()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="J1_random" duration-ms="1" started-at="2018-04-22T03:38:50Z" finished-at="2018-04-22T03:38:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 响铃策略：random没有规律，无法自动化测试--请手动验证]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_random -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T03:38:50Z" finished-at="2018-04-22T03:38:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_rrmemory()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="K1_rrmemory" duration-ms="93103" started-at="2018-04-22T03:38:50Z" finished-at="2018-04-22T03:40:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503312呼入到队列6713，预期1000第1个响铃,轮到1101响铃时接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会第1个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000结束Ring，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会第2个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100结束Ring，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会第3个Ring，应答]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_rrmemory -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T03:40:24Z" finished-at="2018-04-22T03:40:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_rrmemory()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="K2_rrmemory" duration-ms="43098" started-at="2018-04-22T03:40:24Z" finished-at="2018-04-22T03:41:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503312呼入到队列6713，预期1105第一个响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_rrmemory -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T03:41:07Z" finished-at="2018-04-22T03:41:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_linear()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="L1_linear" duration-ms="179662" started-at="2018-04-22T03:41:07Z" finished-at="2018-04-22T03:44:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503313通过sps外线呼入到队列6714，预期按线性响铃，1100第2次响铃时接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000第1个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100第2个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105第3个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101第4个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103第5个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000第6个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100第7个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_linear -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:44:06Z" finished-at="2018-04-22T03:44:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L2_linear()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="L2_linear" duration-ms="136125" started-at="2018-04-22T03:44:06Z" finished-at="2018-04-22T03:46:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503313通过sps外线再次呼入到队列6714，预期按线性响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000第1个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100第2个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105第3个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101第4个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103第5个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_linear -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:46:23Z" finished-at="2018-04-22T03:46:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M1_ringall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="M1_ringall" duration-ms="100789" started-at="2018-04-22T03:46:23Z" finished-at="2018-04-22T03:48:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入到队列6701,1100接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100在Talking]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到队列6701,1103接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打6701呼入到队列6701,1105接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_ringall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T03:48:03Z" finished-at="2018-04-22T03:48:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N1_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N1_leave_join_empty" duration-ms="31498" started-at="2018-04-22T03:48:03Z" finished-at="2018-04-22T03:48:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑队列6702，MaxWaitTime：1800，LeaveWhenEmpty：启用，JoinEmpty：启用]]>
            </line>
          </reporter-output>
        </test-method> <!-- N1_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T03:48:35Z" finished-at="2018-04-22T03:48:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N2_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N2_leave_join_empty" duration-ms="10092" started-at="2018-04-22T03:48:35Z" finished-at="2018-04-22T03:48:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N2_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T03:48:45Z" finished-at="2018-04-22T03:48:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N3_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N3_leave_join_empty" duration-ms="28916" started-at="2018-04-22T03:48:45Z" finished-at="2018-04-22T03:49:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：启用，JoinEmpty：不启用]]>
            </line>
          </reporter-output>
        </test-method> <!-- N3_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T03:49:14Z" finished-at="2018-04-22T03:49:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N4_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N4_leave_join_empty" duration-ms="1085" started-at="2018-04-22T03:49:14Z" finished-at="2018-04-22T03:49:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N4_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:49:15Z" finished-at="2018-04-22T03:49:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N5_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N5_leave_join_empty" duration-ms="28905" started-at="2018-04-22T03:49:15Z" finished-at="2018-04-22T03:49:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：不启用]]>
            </line>
          </reporter-output>
        </test-method> <!-- N5_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T03:49:44Z" finished-at="2018-04-22T03:49:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N6_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N6_leave_join_empty" duration-ms="1084" started-at="2018-04-22T03:49:44Z" finished-at="2018-04-22T03:49:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N6_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:49:45Z" finished-at="2018-04-22T03:49:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N7_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N7_leave_join_empty" duration-ms="28957" started-at="2018-04-22T03:49:45Z" finished-at="2018-04-22T03:50:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：启用]]>
            </line>
          </reporter-output>
        </test-method> <!-- N7_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:50:14Z" finished-at="2018-04-22T03:50:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="N8_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="N8_leave_join_empty" duration-ms="12012" started-at="2018-04-22T03:50:14Z" finished-at="2018-04-22T03:50:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1102不会被直接挂断 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1102不会被直接挂断 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.N8_leave_join_empty(Queue.java:1326)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6702，预期：1102不会被直接挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102不会被直接挂断 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1102不会被直接挂断 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- N8_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:50:26Z" finished-at="2018-04-22T03:50:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O1_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="O1_delete" duration-ms="70130" started-at="2018-04-22T03:50:26Z" finished-at="2018-04-22T03:51:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：队列6702-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：队列6702-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：队列6702-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：queue6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Досвидания-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Досвидания-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Досвидания-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Досвидания-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- O1_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T03:51:36Z" finished-at="2018-04-22T03:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="P1_recovery" duration-ms="37918" started-at="2018-04-22T03:51:36Z" finished-at="2018-04-22T03:52:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复初始化环境]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- P1_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T03:52:14Z" finished-at="2018-04-22T03:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="P2_recovery" duration-ms="58897" started-at="2018-04-22T03:52:14Z" finished-at="2018-04-22T03:53:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- P2_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T03:53:13Z" finished-at="2018-04-22T03:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@77ab81]" name="AfterClass" is-config="true" duration-ms="13296" started-at="2018-04-22T03:53:13Z" finished-at="2018-04-22T03:53:26Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  Queue  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="BeforeClass" is-config="true" duration-ms="28497" started-at="2018-04-22T00:57:17Z" finished-at="2018-04-22T00:57:46Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  Pickup Group  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="Register" is-config="true" duration-ms="38751" started-at="2018-04-22T00:57:46Z" finished-at="2018-04-22T00:58:25Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_InitFeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="A1_InitFeatureCode" duration-ms="12447" started-at="2018-04-22T00:58:25Z" finished-at="2018-04-22T00:58:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 初始化Pickup Group的特征码为*4 、*04]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_InitFeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T00:58:37Z" finished-at="2018-04-22T00:58:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_InitPickupGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="A2_InitPickupGroup" duration-ms="24895" started-at="2018-04-22T00:58:37Z" finished-at="2018-04-22T00:59:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有PickupGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有PickupGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_InitPickupGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T00:59:02Z" finished-at="2018-04-22T00:59:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AddPickupGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="B1_AddPickupGroup1" duration-ms="14183" started-at="2018-04-22T00:59:02Z" finished-at="2018-04-22T00:59:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupGroup1,成员分机1000、1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AddPickupGroup1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:59:16Z" finished-at="2018-04-22T00:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddPickupGroup2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="B2_AddPickupGroup2" duration-ms="14144" started-at="2018-04-22T00:59:16Z" finished-at="2018-04-22T00:59:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建截答组PickupGroup2,成员分机组ExtensionGroup1、分机1103]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddPickupGroup2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T00:59:30Z" finished-at="2018-04-22T00:59:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_EditPickupGroup1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="B3_EditPickupGroup1" duration-ms="23441" started-at="2018-04-22T00:59:30Z" finished-at="2018-04-22T00:59:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑截答组PickupGroup1,成员分机1000、1105、1106（fxs）]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_EditPickupGroup1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T00:59:54Z" finished-at="2018-04-22T00:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="B4_apply" duration-ms="8180" started-at="2018-04-22T00:59:54Z" finished-at="2018-04-22T01:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B4_apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T01:00:02Z" finished-at="2018-04-22T01:00:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_sip_4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C1_sip_4" duration-ms="56676" started-at="2018-04-22T01:00:02Z" finished-at="2018-04-22T01:00:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会HangUp]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_sip_4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T01:00:59Z" finished-at="2018-04-22T01:00:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sip_4_1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C2_sip_4_1" duration-ms="29548" started-at="2018-04-22T01:00:59Z" finished-at="2018-04-22T01:01:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1102按*4截答，预期截答失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sip_4_1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:01:28Z" finished-at="2018-04-22T01:01:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sip_4_2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C2_sip_4_2" duration-ms="55622" started-at="2018-04-22T01:01:28Z" finished-at="2018-04-22T01:02:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1103按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sip_4_2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T01:02:24Z" finished-at="2018-04-22T01:02:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_sip_04_1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C3_sip_04_1" duration-ms="55950" started-at="2018-04-22T01:02:24Z" finished-at="2018-04-22T01:03:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1103按*041000截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_sip_04_1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:03:20Z" finished-at="2018-04-22T01:03:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_sip_04_2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C3_sip_04_2" duration-ms="55596" started-at="2018-04-22T01:03:20Z" finished-at="2018-04-22T01:04:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1102按*041000截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_sip_04_2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T01:04:16Z" finished-at="2018-04-22T01:04:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C4_sps" duration-ms="55892" started-at="2018-04-22T01:04:16Z" finished-at="2018-04-22T01:05:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T01:05:12Z" finished-at="2018-04-22T01:05:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C5_iax" duration-ms="55786" started-at="2018-04-22T01:05:12Z" finished-at="2018-04-22T01:06:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T01:06:07Z" finished-at="2018-04-22T01:06:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C6_spx" duration-ms="56156" started-at="2018-04-22T01:06:07Z" finished-at="2018-04-22T01:07:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T01:07:04Z" finished-at="2018-04-22T01:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C7_fxo" duration-ms="59209" started-at="2018-04-22T01:07:04Z" finished-at="2018-04-22T01:08:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T01:08:03Z" finished-at="2018-04-22T01:08:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C8_bri" duration-ms="55888" started-at="2018-04-22T01:08:03Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入到分机1000,1105按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="C9_e1" duration-ms="0" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C9_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="Ca_gsm" duration-ms="0" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:08:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca_gsm -->
        <test-method status="PASS" signature="Cb_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="Cb_fxs" duration-ms="44431" started-at="2018-04-22T01:08:59Z" finished-at="2018-04-22T01:09:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000,1106按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Cb_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:09:43Z" finished-at="2018-04-22T01:09:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="D1_ivr" duration-ms="39438" started-at="2018-04-22T01:09:43Z" finished-at="2018-04-22T01:10:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6500呼入到IVR，按1到分机1000,1100按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:10:23Z" finished-at="2018-04-22T01:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="D2_ringgroup" duration-ms="34562" started-at="2018-04-22T01:10:23Z" finished-at="2018-04-22T01:10:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6200呼入到RingGroup，1103按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:10:57Z" finished-at="2018-04-22T01:10:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D3_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="D3_queue" duration-ms="34660" started-at="2018-04-22T01:10:57Z" finished-at="2018-04-22T01:11:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:323)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup.D3_queue(PickupGroup.java:398)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6700呼入到队列，1103按*4截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：xlq [1103(pickup 6700(1105))] 实际：xlq [1103(pickup 6700(1100))]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="2094" started-at="2018-04-22T01:11:32Z" finished-at="2018-04-22T01:11:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_editfeaturecode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="E1_editfeaturecode" duration-ms="21113" started-at="2018-04-22T01:11:34Z" finished-at="2018-04-22T01:11:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑截答的特征码为*4004,指定截答的特征码为*0401]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_editfeaturecode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T01:11:55Z" finished-at="2018-04-22T01:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_pickup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="E2_pickup" duration-ms="36135" started-at="2018-04-22T01:11:55Z" finished-at="2018-04-22T01:12:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打1000,1105按*4004截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_pickup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:12:31Z" finished-at="2018-04-22T01:12:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_pickup_ex()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="E3_pickup_ex" duration-ms="36245" started-at="2018-04-22T01:12:31Z" finished-at="2018-04-22T01:13:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打1000,1102按*04011000截答，预期截答成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_pickup_ex -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:13:08Z" finished-at="2018-04-22T01:13:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F1_edit_disablefeaturecode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="F1_edit_disablefeaturecode" duration-ms="20914" started-at="2018-04-22T01:13:08Z" finished-at="2018-04-22T01:13:28Z">
          <exception class="com.codeborne.selenide.ex.InvalidStateException">
            <message>
              <![CDATA[InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir15072_7496}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: a375b489d01957eab88b0f03ed04add0]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir15072_7496}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: a375b489d01957eab88b0f03ed04add0
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524330808117.0.png
Timeout: 15 s.
Caused by: InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:112)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.clear(Unknown Source)
	at com.yeastar.swebtest.driver.YSMethod.YS_General.setPickup(YS_General.java:86)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup.F1_edit_disablefeaturecode(PickupGroup.java:450)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.InvalidElementStateException: invalid element state: Element is not currently interactable and may not be manipulated
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir15072_7496}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: a375b489d01957eab88b0f03ed04add0
	at sun.reflect.GeneratedConstructorAccessor16.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:140)
	at sun.reflect.GeneratedMethodAccessor4.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:89)
	... 31 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.InvalidStateException -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑特征码：不启用截答*4、指定截答*04]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_edit_disablefeaturecode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:13:28Z" finished-at="2018-04-22T01:13:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_pickup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="F2_pickup" duration-ms="29990" started-at="2018-04-22T01:13:28Z" finished-at="2018-04-22T01:13:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打1000,1105按*4截答，预期截答失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_pickup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:13:58Z" finished-at="2018-04-22T01:13:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_pickup_ex()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="F3_pickup_ex" duration-ms="33230" started-at="2018-04-22T01:13:58Z" finished-at="2018-04-22T01:14:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打1105,1102按*041105截答，预期截答失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_pickup_ex -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T01:14:32Z" finished-at="2018-04-22T01:14:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="G1_delete" duration-ms="62429" started-at="2018-04-22T01:14:32Z" finished-at="2018-04-22T01:15:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：PickupGroup1-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupGroup2-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupGroup2-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：PickupGroup2-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：PickupGroup2-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:15:34Z" finished-at="2018-04-22T01:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_recovery_featurecode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="G_recovery_featurecode" duration-ms="16282" started-at="2018-04-22T01:15:34Z" finished-at="2018-04-22T01:15:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复截答特征码设置]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_recovery_featurecode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T01:15:50Z" finished-at="2018-04-22T01:15:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup@e52dcd]" name="AfterClass" is-config="true" duration-ms="13304" started-at="2018-04-22T01:15:51Z" finished-at="2018-04-22T01:16:04Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  Pickup Group  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.PickupGroup -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="BeforeClass" is-config="true" duration-ms="37926" started-at="2018-04-22T08:42:21Z" finished-at="2018-04-22T08:42:59Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== InboundRoutes ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="A_addExtensions" duration-ms="45809" started-at="2018-04-22T08:42:59Z" finished-at="2018-04-22T08:43:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1106]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2005]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T08:43:45Z" finished-at="2018-04-22T08:43:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B1_checkTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B1_checkTrunk" duration-ms="41074" started-at="2018-04-22T08:43:45Z" finished-at="2018-04-22T08:44:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 录音失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  录音失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.A_callfrom1_sip(Inbound.java:66)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.B1_checkTrunk(InboundRoutes.java:105)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 录音失败.jpg" target="_blank">Error:  录音失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_checkTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="4166" started-at="2018-04-22T08:44:26Z" finished-at="2018-04-22T08:44:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77416" started-at="2018-04-22T08:44:30Z" data-provider="did1" finished-at="2018-04-22T08:45:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=999a, failNumber=99, DID=.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打999a]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-04-22T08:45:48Z" finished-at="2018-04-22T08:45:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77418" started-at="2018-04-22T08:45:48Z" data-provider="did1" finished-at="2018-04-22T08:47:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9999, failNumber=999, DID=X.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：X.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9999]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打999]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T08:47:05Z" finished-at="2018-04-22T08:47:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77443" started-at="2018-04-22T08:47:05Z" data-provider="did1" finished-at="2018-04-22T08:48:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9929, failNumber=9919, DID=N.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：N.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9929]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9919]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9919,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T08:48:23Z" finished-at="2018-04-22T08:48:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="78626" started-at="2018-04-22T08:48:23Z" data-provider="did1" finished-at="2018-04-22T08:49:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9919, failNumber=99aa, DID=Z.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：Z.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9919]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99aa]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99aa,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T08:49:41Z" finished-at="2018-04-22T08:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77490" started-at="2018-04-22T08:49:41Z" data-provider="did1" finished-at="2018-04-22T08:50:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=992202101, failNumber=99220210, DID=NZXNZX.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：NZXNZX.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打992202101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99220210]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99220210,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-04-22T08:50:59Z" finished-at="2018-04-22T08:50:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77643" started-at="2018-04-22T08:50:59Z" data-provider="did1" finished-at="2018-04-22T08:52:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9969, failNumber=9979, DID=[12-6].}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：[12-6].]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9969]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9979]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9979,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T08:52:17Z" finished-at="2018-04-22T08:52:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77586" started-at="2018-04-22T08:52:17Z" data-provider="did1" finished-at="2018-04-22T08:53:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9950912501, failNumber=9950812501, DID=[158]X9ZN[1-5]X.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：[158]X9ZN[1-5]X.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9950912501]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9950812501]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9950812501,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-04-22T08:53:34Z" finished-at="2018-04-22T08:53:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="79383" started-at="2018-04-22T08:53:34Z" data-provider="did1" finished-at="2018-04-22T08:54:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=99+12abc06032456N, failNumber=99+12abc06032456a, DID=+12abc06032456N}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：+12abc06032456N]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99+12abc06032456N]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99+12abc06032456a]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99+12abc06032456a,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-04-22T08:54:54Z" finished-at="2018-04-22T08:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="97275" started-at="2018-04-22T08:54:54Z" data-provider="did1" finished-at="2018-04-22T08:56:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=99xxx21, failNumber=99aaa21, DID=XXXNZ!}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：XXXNZ!]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99xxx21]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B2_checkDID()99xxx21.jpg" target="_blank">Error: B2_checkDID()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99aaa21]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99aaa21,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="2086" started-at="2018-04-22T08:56:31Z" finished-at="2018-04-22T08:56:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77474" started-at="2018-04-22T08:56:33Z" data-provider="did1" finished-at="2018-04-22T08:57:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9913950174296, failNumber=9913950174295, DID=13950174296!}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：13950174296!]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9913950174296]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9913950174295]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9913950174295,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T08:57:50Z" finished-at="2018-04-22T08:57:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B2_checkDID" duration-ms="77517" started-at="2018-04-22T08:57:50Z" data-provider="did1" finished-at="2018-04-22T08:59:08Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=990123456789, failNumber=990123456786, DID=0123456789}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为：0123456789]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打990123456789]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打990123456786]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打990123456786,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T08:59:08Z" finished-at="2018-04-22T08:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_checkCaller1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B3_checkCaller1" duration-ms="76452" started-at="2018-04-22T08:59:08Z" finished-at="2018-04-22T09:00:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的Caller ID为[128]X[0-6]12]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_checkCaller1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T09:00:24Z" finished-at="2018-04-22T09:00:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_checkCaller2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B4_checkCaller2" duration-ms="75367" started-at="2018-04-22T09:00:25Z" finished-at="2018-04-22T09:01:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的Caller ID为NXZ1!]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001（CallerID为2001）拨打99999，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_checkCaller2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T09:01:40Z" finished-at="2018-04-22T09:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_checkDIDAndCaller()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B5_checkDIDAndCaller" duration-ms="103204" started-at="2018-04-22T09:01:40Z" finished-at="2018-04-22T09:03:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID为5503301-5503305，CallerID为NXZ1!
2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2005（CallerID为2X612）拨打995503302，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001（CallerID为2001）拨打995503305，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】2005（CallerID为2X612）拨打99999，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2005拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_checkDIDAndCaller -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T09:03:23Z" finished-at="2018-04-22T09:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_editDIDAndCaller()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="B6_editDIDAndCaller" duration-ms="32626" started-at="2018-04-22T09:03:23Z" finished-at="2018-04-22T09:03:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的DID和CallerID为空]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_editDIDAndCaller -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T09:03:56Z" finished-at="2018-04-22T09:03:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_addRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C1_addRoute" duration-ms="447192" started-at="2018-04-22T09:03:56Z" finished-at="2018-04-22T09:11:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute2——呼入目的地到HangUp ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute3——呼入目的地到sip分机1100 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute4——呼入目的地到fxs_Extension ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute5——呼入目的地到Extension Range ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute6——呼入目的地到voicemail ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute7——呼入目的地到IVR ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute9——呼入目的地到Queue ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute10——呼入目的地到Conference ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute11——呼入目的地到DISA ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute12——呼入目的地到Callback ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute13——呼入目的地到Outbound Route_sip ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute14——呼入目的地到Outbound Route_iax ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute15——呼入目的地到Outbound Route_spx ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute16——呼入目的地到Outbound Route_bri ]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_addRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T09:11:23Z" finished-at="2018-04-22T09:11:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C2_checkPriority1" duration-ms="61626" started-at="2018-04-22T09:11:23Z" finished-at="2018-04-22T09:12:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打991105通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T09:12:25Z" finished-at="2018-04-22T09:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C2_checkPriority2" duration-ms="84633" started-at="2018-04-22T09:12:25Z" finished-at="2018-04-22T09:13:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第10行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T09:13:49Z" finished-at="2018-04-22T09:13:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C2_checkPriority3" duration-ms="101670" started-at="2018-04-22T09:13:49Z" finished-at="2018-04-22T09:15:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第9行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000呼入到响铃组，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000/1100和1105响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态——TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到响铃组，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000和1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态——TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T09:15:31Z" finished-at="2018-04-22T09:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority4_deleteRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C2_checkPriority4_deleteRoute" duration-ms="22898" started-at="2018-04-22T09:15:31Z" finished-at="2018-04-22T09:15:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除呼入路由InRoute8（RingGroup）——选择yes]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority4_deleteRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="96" started-at="2018-04-22T09:15:54Z" finished-at="2018-04-22T09:15:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C2_checkPriority5" duration-ms="63948" started-at="2018-04-22T09:15:54Z" finished-at="2018-04-22T09:16:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T09:16:58Z" finished-at="2018-04-22T09:16:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_recoveryRingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="C3_recoveryRingGroup" duration-ms="29611" started-at="2018-04-22T09:16:58Z" finished-at="2018-04-22T09:17:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_recoveryRingGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T09:17:28Z" finished-at="2018-04-22T09:17:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_Hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="D1_Hangup" duration-ms="41766" started-at="2018-04-22T09:17:28Z" finished-at="2018-04-22T09:18:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第3行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_Hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T09:18:10Z" finished-at="2018-04-22T09:18:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_FxsExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="D2_FxsExtensions" duration-ms="53444" started-at="2018-04-22T09:18:10Z" finished-at="2018-04-22T09:19:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第5行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1106，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_FxsExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T09:19:03Z" finished-at="2018-04-22T09:19:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_ExtensionRange()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="D3_ExtensionRange" duration-ms="243994" started-at="2018-04-22T09:19:03Z" finished-at="2018-04-22T09:23:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第6行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_ExtensionRange -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T09:23:07Z" finished-at="2018-04-22T09:23:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="D4_Voicemail" duration-ms="56484" started-at="2018-04-22T09:23:07Z" finished-at="2018-04-22T09:24:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第7行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_Voicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T09:24:04Z" finished-at="2018-04-22T09:24:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_Outbound_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E1_Outbound_sip" duration-ms="67111" started-at="2018-04-22T09:24:04Z" finished-at="2018-04-22T09:25:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第12行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9913001通过sps外线呼入转sip外线呼出到分机3001]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_Outbound_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-04-22T09:25:11Z" finished-at="2018-04-22T09:25:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Outbound_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E2_Outbound_iax" duration-ms="68360" started-at="2018-04-22T09:25:11Z" finished-at="2018-04-22T09:26:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第13行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9923001通过sps外线呼入转iax外线到分机3001，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_Outbound_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T09:26:19Z" finished-at="2018-04-22T09:26:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_Outbound_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E3_Outbound_spx" duration-ms="70070" started-at="2018-04-22T09:26:19Z" finished-at="2018-04-22T09:27:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第14行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9942000通过sps外线呼入转spx外线到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_Outbound_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T09:27:29Z" finished-at="2018-04-22T09:27:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_Outbound_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E4_Outbound_bri" duration-ms="103493" started-at="2018-04-22T09:27:29Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第15行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_Outbound_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_Outbound_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E5_Outbound_e1" duration-ms="0" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E5_Outbound_e1 -->
        <test-method status="PASS" signature="E6_Outbound_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="E6_Outbound_account" duration-ms="0" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E6_Outbound_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:29:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_addTimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G1_addTimeCondition" duration-ms="52315" started-at="2018-04-22T09:29:13Z" finished-at="2018-04-22T09:30:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday2_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建HolidayByDay：2018-01-01~2200-12-31]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_addTimeCondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T09:30:05Z" finished-at="2018-04-22T09:30:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_otherTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G2_otherTime1" duration-ms="85481" started-at="2018-04-22T09:30:05Z" finished-at="2018-04-22T09:31:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 移动第9行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:勾选TimeCondition]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_otherTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T09:31:31Z" finished-at="2018-04-22T09:31:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_otherTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G2_otherTime2" duration-ms="239402" started-at="2018-04-22T09:31:31Z" finished-at="2018-04-22T09:35:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:otherTime的目的地选择分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000，预期呼入成功，分机1000未接]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_otherTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T09:35:30Z" finished-at="2018-04-22T09:35:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_workday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G3_workday" duration-ms="75566" started-at="2018-04-22T09:35:30Z" finished-at="2018-04-22T09:36:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_workday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-04-22T09:36:46Z" finished-at="2018-04-22T09:36:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_holiday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G4_holiday" duration-ms="81744" started-at="2018-04-22T09:36:46Z" finished-at="2018-04-22T09:38:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到Queue6700,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_holiday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T09:38:07Z" finished-at="2018-04-22T09:38:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_addTime1_noWorkday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G5_addTime1_noWorkday" duration-ms="33655" started-at="2018-04-22T09:38:08Z" finished-at="2018-04-22T09:38:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 当前的时间为：2018-04-22 09:38:08]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 今天星期：sun]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件NoWorkday:当前时间不是上班时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】修改NoWorkday：取消勾选当前的星期]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_addTime1_noWorkday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T09:38:41Z" finished-at="2018-04-22T09:38:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_addTime2_noHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G5_addTime2_noHoliday" duration-ms="28247" started-at="2018-04-22T09:38:41Z" finished-at="2018-04-22T09:39:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_addTime2_noHoliday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T09:39:09Z" finished-at="2018-04-22T09:39:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_checkPriority_NoHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G6_checkPriority_NoHoliday" duration-ms="31996" started-at="2018-04-22T09:39:09Z" finished-at="2018-04-22T09:39:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_checkPriority_NoHoliday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T09:39:41Z" finished-at="2018-04-22T09:39:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_checkPriority_NoWorkday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G7_checkPriority_NoWorkday" duration-ms="64788" started-at="2018-04-22T09:39:42Z" finished-at="2018-04-22T09:40:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:编辑workday当前时间不是上班时间]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_checkPriority_NoWorkday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-04-22T09:40:46Z" finished-at="2018-04-22T09:40:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G8_timeDelay()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G8_timeDelay" duration-ms="334568" started-at="2018-04-22T09:40:46Z" finished-at="2018-04-22T09:46:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件threeMinuteWork:三分钟后为上班时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由:新增threeMinuteWork]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G8_timeDelay -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="2101" started-at="2018-04-22T09:46:21Z" finished-at="2018-04-22T09:46:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_timeOrder1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G9_timeOrder1" duration-ms="74788" started-at="2018-04-22T09:46:23Z" finished-at="2018-04-22T09:47:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由目的地]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，IVR6500接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T09:47:38Z" finished-at="2018-04-22T09:47:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_timeOrder2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G9_timeOrder2" duration-ms="68642" started-at="2018-04-22T09:47:38Z" finished-at="2018-04-22T09:48:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由顺序]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，Conference6400接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T09:48:46Z" finished-at="2018-04-22T09:48:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_timeOrder3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="G9_timeOrder3" duration-ms="75619" started-at="2018-04-22T09:48:47Z" finished-at="2018-04-22T09:50:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute10_Conference呼入路由顺序]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T09:50:02Z" finished-at="2018-04-22T09:50:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_FeatureCode1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H1_FeatureCode1" duration-ms="24956" started-at="2018-04-22T09:50:02Z" finished-at="2018-04-22T09:50:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】检查时间特征码+修改InRoute10_Conference呼入路由：将workday_24hour改为NoWorkday]]>
            </line>
            <line>
              <![CDATA[    Pass:  特征码生成正确]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_FeatureCode1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-04-22T09:50:27Z" finished-at="2018-04-22T09:50:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_FeatureCode2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H1_FeatureCode2" duration-ms="22584" started-at="2018-04-22T09:50:27Z" finished-at="2018-04-22T09:50:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】检查时间特征码]]>
            </line>
            <line>
              <![CDATA[    Pass:  特征码生成正确]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_FeatureCode2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T09:50:50Z" finished-at="2018-04-22T09:50:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H2_checkFeatureCode1" duration-ms="18486" started-at="2018-04-22T09:50:50Z" finished-at="2018-04-22T09:51:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T09:51:08Z" finished-at="2018-04-22T09:51:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H2_checkFeatureCode2" duration-ms="57077" started-at="2018-04-22T09:51:08Z" finished-at="2018-04-22T09:52:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*803强制启用非工作时间]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到ivr]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T09:52:05Z" finished-at="2018-04-22T09:52:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H2_checkFeatureCode3" duration-ms="61364" started-at="2018-04-22T09:52:05Z" finished-at="2018-04-22T09:53:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*802强制启用工作时间]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="2122" started-at="2018-04-22T09:53:07Z" finished-at="2018-04-22T09:53:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H2_checkFeatureCode4" duration-ms="67139" started-at="2018-04-22T09:53:09Z" finished-at="2018-04-22T09:54:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800重置]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999，预期呼入到响铃组，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="2118" started-at="2018-04-22T09:54:16Z" finished-at="2018-04-22T09:54:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_editDestination()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="H3_editDestination" duration-ms="61026" started-at="2018-04-22T09:54:18Z" finished-at="2018-04-22T09:55:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改TimeCondition的目的地]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_editDestination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-04-22T09:55:19Z" finished-at="2018-04-22T09:55:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_Disa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I1_Disa" duration-ms="36709" started-at="2018-04-22T09:55:19Z" finished-at="2018-04-22T09:55:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_Disa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T09:55:56Z" finished-at="2018-04-22T09:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I2_callBack()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I2_callBack" duration-ms="72779" started-at="2018-04-22T09:55:56Z" finished-at="2018-04-22T09:57:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*802]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000和1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_callBack -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T09:57:09Z" finished-at="2018-04-22T09:57:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I3_FxsExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I3_FxsExtension" duration-ms="59877" started-at="2018-04-22T09:57:09Z" finished-at="2018-04-22T09:58:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*805]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1106，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_FxsExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T09:58:09Z" finished-at="2018-04-22T09:58:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I4_timecondition_outbound_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I4_timecondition_outbound_sip" duration-ms="59917" started-at="2018-04-22T09:58:09Z" finished-at="2018-04-22T09:59:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*803]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9913001通过SPS外线呼入转sip呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I4_timecondition_outbound_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T09:59:09Z" finished-at="2018-04-22T09:59:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I5_timecondition_outbound_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I5_timecondition_outbound_iax" duration-ms="68502" started-at="2018-04-22T09:59:09Z" finished-at="2018-04-22T10:00:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_iax]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9923001通过sps外线呼入转iax外线到分机3001，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I5_timecondition_outbound_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T10:00:17Z" finished-at="2018-04-22T10:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I6_timecondition_outbound_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I6_timecondition_outbound_spx" duration-ms="84543" started-at="2018-04-22T10:00:17Z" finished-at="2018-04-22T10:01:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_spx]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9942000通过sps外线呼入转spx外线到分机2000，分机未接]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为2]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I6_timecondition_outbound_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T10:01:42Z" finished-at="2018-04-22T10:01:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I7_timecondition_outbound_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I7_timecondition_outbound_bri" duration-ms="67439" started-at="2018-04-22T10:01:42Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改第三时间条件目的地到outbound_bri]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打9962000通过sps外线呼入转bri外线到分机2000，分机接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I7_timecondition_outbound_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I8_timecondition_outbound_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I8_timecondition_outbound_account" duration-ms="0" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I8_timecondition_outbound_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I8_timecondition_outbound_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I8_timecondition_outbound_e1" duration-ms="1" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I8_timecondition_outbound_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:02:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I9_timecondition_extensionRange()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="I9_timecondition_extensionRange" duration-ms="118436" started-at="2018-04-22T10:02:49Z" finished-at="2018-04-22T10:04:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改第三时间条件目的地到ExtensionRange]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1101状态为TALKING，实际状态为2]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I9_timecondition_extensionRange -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T10:04:48Z" finished-at="2018-04-22T10:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_disTimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="J1_disTimeCondition" duration-ms="64278" started-at="2018-04-22T10:04:48Z" finished-at="2018-04-22T10:05:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】取消勾选TimeConditon]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打995503306通过sps外线呼入到conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_disTimeCondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T10:05:52Z" finished-at="2018-04-22T10:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_deleteConference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="J2_deleteConference" duration-ms="20901" started-at="2018-04-22T10:05:52Z" finished-at="2018-04-22T10:06:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除全部的Conference-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_deleteConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-04-22T10:06:13Z" finished-at="2018-04-22T10:06:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J3_checkConference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="J3_checkConference" duration-ms="14083" started-at="2018-04-22T10:06:13Z" finished-at="2018-04-22T10:06:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_checkConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T10:06:27Z" finished-at="2018-04-22T10:06:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_deletePartRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="K1_deletePartRoute_no" duration-ms="53520" started-at="2018-04-22T10:06:27Z" finished-at="2018-04-22T10:07:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】期望值row1:16]]>
            </line>
            <line>
              <![CDATA[  【执行操作】要取消勾选的row2:9]]>
            </line>
            <line>
              <![CDATA[  【执行操作】要取消勾选的row3:11]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_deletePartRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T10:07:21Z" finished-at="2018-04-22T10:07:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_deletePartRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="K2_deletePartRoute_yes" duration-ms="13399" started-at="2018-04-22T10:07:21Z" finished-at="2018-04-22T10:07:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_deletePartRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T10:07:34Z" finished-at="2018-04-22T10:07:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K3_deleteAllRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="K3_deleteAllRoute_no" duration-ms="9807" started-at="2018-04-22T10:07:34Z" finished-at="2018-04-22T10:07:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_deleteAllRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T10:07:44Z" finished-at="2018-04-22T10:07:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K4_deleteAllRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="K4_deleteAllRoute_yes" duration-ms="13343" started-at="2018-04-22T10:07:44Z" finished-at="2018-04-22T10:07:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_deleteAllRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T10:07:57Z" finished-at="2018-04-22T10:07:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_import()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="L1_import" duration-ms="16906" started-at="2018-04-22T10:07:57Z" finished-at="2018-04-22T10:08:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】F:\MyProject\SwebTest\exportFile\InboundRoute.csv]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_import -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T10:08:14Z" finished-at="2018-04-22T10:08:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L2_checkDIDPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="L2_checkDIDPriority1" duration-ms="29858" started-at="2018-04-22T10:08:14Z" finished-at="2018-04-22T10:08:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打9992999]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_checkDIDPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T10:08:44Z" finished-at="2018-04-22T10:08:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L3_checkDIDPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="L3_checkDIDPriority2" duration-ms="47272" started-at="2018-04-22T10:08:44Z" finished-at="2018-04-22T10:09:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打9982999]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3000通话状态为：0]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- L3_checkDIDPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-04-22T10:09:31Z" finished-at="2018-04-22T10:09:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L4_checkDIDPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="L4_checkDIDPriority3" duration-ms="32147" started-at="2018-04-22T10:09:34Z" finished-at="2018-04-22T10:10:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打9991999]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L4_checkDIDPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-04-22T10:10:06Z" finished-at="2018-04-22T10:10:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M1_deleteOneRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="M1_deleteOneRoute_no" duration-ms="19779" started-at="2018-04-22T10:10:06Z" finished-at="2018-04-22T10:10:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个呼入路由InRoute3——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_deleteOneRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T10:10:26Z" finished-at="2018-04-22T10:10:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M2_deleteOneRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="M2_deleteOneRoute_yes" duration-ms="27834" started-at="2018-04-22T10:10:26Z" finished-at="2018-04-22T10:10:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个呼入路由InRoute3——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个呼入路由InRoute3——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_deleteOneRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T10:10:53Z" finished-at="2018-04-22T10:10:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M3_editRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="M3_editRoute" duration-ms="62934" started-at="2018-04-22T10:10:53Z" finished-at="2018-04-22T10:11:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改InRoute1:DID清空，CallerID设置为3.]]>
            </line>
            <line>
              <![CDATA[  【执行操作】修改InRoute2:DID清空，CallerID设置为X.]]>
            </line>
          </reporter-output>
        </test-method> <!-- M3_editRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-04-22T10:11:56Z" finished-at="2018-04-22T10:11:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_checkCallerIDPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="N_checkCallerIDPriority1" duration-ms="28915" started-at="2018-04-22T10:11:56Z" finished-at="2018-04-22T10:12:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_checkCallerIDPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T10:12:25Z" finished-at="2018-04-22T10:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_checkCallerIDPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="N_checkCallerIDPriority2" duration-ms="28965" started-at="2018-04-22T10:12:25Z" finished-at="2018-04-22T10:12:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_checkCallerIDPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T10:12:54Z" finished-at="2018-04-22T10:12:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O_deleteAllRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="O_deleteAllRoute" duration-ms="16961" started-at="2018-04-22T10:12:54Z" finished-at="2018-04-22T10:13:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_deleteAllRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T10:13:11Z" finished-at="2018-04-22T10:13:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_checkSPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="P1_checkSPS" duration-ms="31897" started-at="2018-04-22T10:13:11Z" finished-at="2018-04-22T10:13:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991105通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- P1_checkSPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T10:13:43Z" finished-at="2018-04-22T10:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_checkSPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="P2_checkSPX" duration-ms="28994" started-at="2018-04-22T10:13:43Z" finished-at="2018-04-22T10:14:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打881000通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- P2_checkSPX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T10:14:12Z" finished-at="2018-04-22T10:14:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="Q_recovery" duration-ms="56776" started-at="2018-04-22T10:14:12Z" finished-at="2018-04-22T10:15:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件——Workday]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T10:15:09Z" finished-at="2018-04-22T10:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="Q_recovery2" duration-ms="27816" started-at="2018-04-22T10:15:09Z" finished-at="2018-04-22T10:15:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑Workday]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="178" started-at="2018-04-22T10:15:37Z" finished-at="2018-04-22T10:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="Q_recovery3" duration-ms="17227" started-at="2018-04-22T10:15:37Z" finished-at="2018-04-22T10:15:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T10:15:54Z" finished-at="2018-04-22T10:15:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="Q_recovery4" duration-ms="16413" started-at="2018-04-22T10:15:54Z" finished-at="2018-04-22T10:16:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T10:16:11Z" finished-at="2018-04-22T10:16:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="Q_recovery5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="Q_recovery5" duration-ms="23322" started-at="2018-04-22T10:16:11Z" finished-at="2018-04-22T10:16:34Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-feature-extenspermission']//a[@data-qtip='Remove All from Selected']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-feature-extenspermission']//a[@data-qtip='Remove All from Selected']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524363393500.6.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-14338" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-14338">...</a> is not clickable at point (941, 573). Other element would receive the click: <div class="x-css-shadow" role="presentation" id="ext-element-82" style="box-shadow: rgb(136, 136, 136) 0px 0px 6px; right: auto; left: 602px; top: 315px; width: 700px; height: 396px; z-index: 29000;"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.Q_recovery5(InboundRoutes.java:2431)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-14338" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-14338">...</a> is not clickable at point (941, 573). Other element would receive the click: <div class="x-css-shadow" role="presentation" id="ext-element-82" style="box-shadow: rgb(136, 136, 136) 0px 0px 6px; right: auto; left: 602px; top: 315px; width: 700px; height: 396px; z-index: 29000;"></div>
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 30 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir12688_4081}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: 7b6034762506aea4debd1181a324ca9a
	at sun.reflect.GeneratedConstructorAccessor39.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 取消分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterMethod" is-config="true" duration-ms="52" started-at="2018-04-22T10:16:34Z" finished-at="2018-04-22T10:16:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@1563da5]" name="AfterClass" is-config="true" duration-ms="13704" started-at="2018-04-22T10:16:34Z" finished-at="2018-04-22T10:16:48Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  InboundRoutes  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="BeforeClass" is-config="true" duration-ms="26792" started-at="2018-04-22T11:59:47Z" finished-at="2018-04-22T12:00:14Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== OutboundRestriction ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="A_addExtension" duration-ms="52044" started-at="2018-04-22T12:00:14Z" finished-at="2018-04-22T12:01:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-04-22T12:01:06Z" finished-at="2018-04-22T12:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="B1_addRestriction" duration-ms="36470" started-at="2018-04-22T12:01:06Z" finished-at="2018-04-22T12:01:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制_?.~12349012345678901！~·……*（）——，2分钟不能超过4通]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T12:01:43Z" finished-at="2018-04-22T12:01:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_addEmergencyNum()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="B2_addEmergencyNum" duration-ms="31769" started-at="2018-04-22T12:01:43Z" finished-at="2018-04-22T12:02:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有紧急号码]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_addEmergencyNum -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T12:02:15Z" finished-at="2018-04-22T12:02:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_checkRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C1_checkRestriction" duration-ms="301611" started-at="2018-04-22T12:02:15Z" finished-at="2018-04-22T12:07:16Z">
          <reporter-output>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第1次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第2次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第3次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第4次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第5次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C1_checkRestriction()第6次分机1000.jpg" target="_blank">Error: C1_checkRestriction()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期第7次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_checkRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-04-22T12:07:16Z" finished-at="2018-04-22T12:07:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkCallOut_internal()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C2_checkCallOut_internal" duration-ms="30027" started-at="2018-04-22T12:07:16Z" finished-at="2018-04-22T12:07:46Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkCallOut_internal -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T12:07:46Z" finished-at="2018-04-22T12:07:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut1_sip" duration-ms="12081" started-at="2018-04-22T12:07:46Z" finished-at="2018-04-22T12:07:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut1_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:07:58Z" finished-at="2018-04-22T12:07:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut2_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut2_spx" duration-ms="12086" started-at="2018-04-22T12:07:59Z" finished-at="2018-04-22T12:08:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打42000通过spx外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut2_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:08:11Z" finished-at="2018-04-22T12:08:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut3_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut3_iax" duration-ms="12155" started-at="2018-04-22T12:08:11Z" finished-at="2018-04-22T12:08:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打23001通过iax外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut3_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T12:08:23Z" finished-at="2018-04-22T12:08:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut4_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut4_bri" duration-ms="12589" started-at="2018-04-22T12:08:23Z" finished-at="2018-04-22T12:08:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打62000通过BRI外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打62000通过bri外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut4_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T12:08:35Z" finished-at="2018-04-22T12:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut5_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut5_e1" duration-ms="0" started-at="2018-04-22T12:08:35Z" finished-at="2018-04-22T12:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut5_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T12:08:35Z" finished-at="2018-04-22T12:08:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut6_pstn()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut6_pstn" duration-ms="12753" started-at="2018-04-22T12:08:35Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打52000通过PSTN外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打52000通过pstn外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut6_pstn -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut7_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut7_gsm" duration-ms="0" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut7_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_checkCallOut8_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="C3_checkCallOut8_account" duration-ms="0" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_checkCallOut8_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:08:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn1_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn1_sip" duration-ms="30260" started-at="2018-04-22T12:08:48Z" finished-at="2018-04-22T12:09:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn1_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T12:09:19Z" finished-at="2018-04-22T12:09:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn2_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn2_sps" duration-ms="29972" started-at="2018-04-22T12:09:19Z" finished-at="2018-04-22T12:09:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn2_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T12:09:49Z" finished-at="2018-04-22T12:09:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn3_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn3_iax" duration-ms="30222" started-at="2018-04-22T12:09:49Z" finished-at="2018-04-22T12:10:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn3_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T12:10:19Z" finished-at="2018-04-22T12:10:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn4_spx" duration-ms="28764" started-at="2018-04-22T12:10:19Z" finished-at="2018-04-22T12:10:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打881000通过spx外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn4_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-04-22T12:10:48Z" finished-at="2018-04-22T12:10:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn5_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn5_bri" duration-ms="29153" started-at="2018-04-22T12:10:48Z" finished-at="2018-04-22T12:11:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打66666通过bri外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn5_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T12:11:17Z" finished-at="2018-04-22T12:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn6_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn6_e1" duration-ms="1" started-at="2018-04-22T12:11:17Z" finished-at="2018-04-22T12:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn6_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:11:17Z" finished-at="2018-04-22T12:11:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn7_pstn()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn7_pstn" duration-ms="29909" started-at="2018-04-22T12:11:17Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打2010通过fxo外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn7_pstn -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_checkCallIn8_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn8_gsm" duration-ms="0" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn8_gsm -->
        <test-method status="PASS" signature="D1_checkCallIn9_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D1_checkCallIn9_account" duration-ms="0" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D1_checkCallIn9_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:11:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_checkCallIn1_internal()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D2_checkCallIn1_internal" duration-ms="30491" started-at="2018-04-22T12:11:47Z" finished-at="2018-04-22T12:12:17Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkCallIn1_internal -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:12:17Z" finished-at="2018-04-22T12:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_checkCallOut9_EmergencyNum()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D2_checkCallOut9_EmergencyNum" duration-ms="59577" started-at="2018-04-22T12:12:17Z" finished-at="2018-04-22T12:13:17Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  被通知的分机1103状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_checkCallOut9_EmergencyNum -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-04-22T12:13:17Z" finished-at="2018-04-22T12:13:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_deleteRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D3_deleteRestriction" duration-ms="46169" started-at="2018-04-22T12:13:17Z" finished-at="2018-04-22T12:14:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：_?.~12349012345678901！~·……*（）——-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：_?.~12349012345678901！~·……*（）——-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：_?.~12349012345678901！~·……*（）——-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：_?.~12349012345678901！~·……*（）——-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_deleteRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-04-22T12:14:03Z" finished-at="2018-04-22T12:14:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_checkCallOut_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D4_checkCallOut_sps" duration-ms="12957" started-at="2018-04-22T12:14:03Z" finished-at="2018-04-22T12:14:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_checkCallOut_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:14:16Z" finished-at="2018-04-22T12:14:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_checkExtension_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D5_checkExtension_no" duration-ms="25061" started-at="2018-04-22T12:14:16Z" finished-at="2018-04-22T12:14:41Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  查看分机1000状态已被限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_checkExtension_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:14:41Z" finished-at="2018-04-22T12:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_checkRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D6_checkRestriction" duration-ms="12085" started-at="2018-04-22T12:14:41Z" finished-at="2018-04-22T12:14:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_checkRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:14:53Z" finished-at="2018-04-22T12:14:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_checkExtension_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D7_checkExtension_yes" duration-ms="15639" started-at="2018-04-22T12:14:53Z" finished-at="2018-04-22T12:15:09Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  查看分机1000状态已被取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_checkExtension_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T12:15:09Z" finished-at="2018-04-22T12:15:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_checkRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="D8_checkRestriction" duration-ms="28676" started-at="2018-04-22T12:15:09Z" finished-at="2018-04-22T12:15:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_checkRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T12:15:38Z" finished-at="2018-04-22T12:15:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_addRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E1_addRestriction" duration-ms="30637" started-at="2018-04-22T12:15:38Z" finished-at="2018-04-22T12:16:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有Outbound Restriction]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制OutRestriction1，1分钟不能超过1通]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_addRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T12:16:08Z" finished-at="2018-04-22T12:16:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Restriction1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E2_Restriction1" duration-ms="195891" started-at="2018-04-22T12:16:08Z" finished-at="2018-04-22T12:19:24Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction1()第2次分机1000.jpg" target="_blank">Error: E2_Restriction1()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为2]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_Restriction1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T12:19:24Z" finished-at="2018-04-22T12:19:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Restriction2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E2_Restriction2" duration-ms="241549" started-at="2018-04-22T12:19:26Z" finished-at="2018-04-22T12:23:28Z">
          <reporter-output>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第1次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第2次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E2_Restriction2()第3次分机1100.jpg" target="_blank">Error: E2_Restriction2()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_Restriction2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T12:23:28Z" finished-at="2018-04-22T12:23:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Restriction3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E2_Restriction3" duration-ms="215552" started-at="2018-04-22T12:23:28Z" finished-at="2018-04-22T12:27:04Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打3333通过sps外线呼出,预期第4次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_Restriction3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T12:27:04Z" finished-at="2018-04-22T12:27:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Restriction4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E2_Restriction4" duration-ms="184362" started-at="2018-04-22T12:27:04Z" finished-at="2018-04-22T12:30:08Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1103拨打3333通过sps外线呼出,预期呼出成功,实际呼出成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_Restriction4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:30:08Z" finished-at="2018-04-22T12:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check1_callOut()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check1_callOut" duration-ms="12085" started-at="2018-04-22T12:30:08Z" finished-at="2018-04-22T12:30:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check1_callOut -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:30:20Z" finished-at="2018-04-22T12:30:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check2_callOut()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check2_callOut" duration-ms="12085" started-at="2018-04-22T12:30:20Z" finished-at="2018-04-22T12:30:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打13001通过sip外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check2_callOut -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:30:32Z" finished-at="2018-04-22T12:30:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check3_callOut_internal()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check3_callOut_internal" duration-ms="37243" started-at="2018-04-22T12:30:32Z" finished-at="2018-04-22T12:31:09Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check3_callOut_internal -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T12:31:09Z" finished-at="2018-04-22T12:31:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check4_callIn()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check4_callIn" duration-ms="29779" started-at="2018-04-22T12:31:09Z" finished-at="2018-04-22T12:31:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check4_callIn -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T12:31:39Z" finished-at="2018-04-22T12:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check5_callIn_internal()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check5_callIn_internal" duration-ms="29901" started-at="2018-04-22T12:31:39Z" finished-at="2018-04-22T12:32:09Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check5_callIn_internal -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:32:09Z" finished-at="2018-04-22T12:32:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_check6_EmergencyNum()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E3_check6_EmergencyNum" duration-ms="62366" started-at="2018-04-22T12:32:09Z" finished-at="2018-04-22T12:33:12Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  被通知的分机1103状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_check6_EmergencyNum -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-04-22T12:33:12Z" finished-at="2018-04-22T12:33:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_deleteExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E6_deleteExtension" duration-ms="33800" started-at="2018-04-22T12:33:12Z" finished-at="2018-04-22T12:33:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E6_deleteExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:33:45Z" finished-at="2018-04-22T12:33:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_1addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E7_1addExtension" duration-ms="63797" started-at="2018-04-22T12:33:45Z" finished-at="2018-04-22T12:34:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加分机1000和1102]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑分机1000的邮箱为1000@yeastar.com]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_1addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T12:34:49Z" finished-at="2018-04-22T12:34:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_2editExtensionGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E7_2editExtensionGroup" duration-ms="33490" started-at="2018-04-22T12:34:49Z" finished-at="2018-04-22T12:35:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有分机组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有分机组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加分机组：ExtensionGroup1:1000,1100,1101,1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_2editExtensionGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:35:23Z" finished-at="2018-04-22T12:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_3editOutRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E7_3editOutRoute" duration-ms="126788" started-at="2018-04-22T12:35:23Z" finished-at="2018-04-22T12:37:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute2_iax]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute4_spx]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute5_fxo]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute6_bri]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_3editOutRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T12:37:30Z" finished-at="2018-04-22T12:37:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_4editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E7_4editInRoute" duration-ms="34642" started-at="2018-04-22T12:37:30Z" finished-at="2018-04-22T12:38:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_4editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T12:38:04Z" finished-at="2018-04-22T12:38:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E8_registerExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E8_registerExtension" duration-ms="14451" started-at="2018-04-22T12:38:04Z" finished-at="2018-04-22T12:38:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- E8_registerExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T12:38:19Z" finished-at="2018-04-22T12:38:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E9_checkExtension1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E9_checkExtension1" duration-ms="30251" started-at="2018-04-22T12:38:19Z" finished-at="2018-04-22T12:38:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E9_checkExtension1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:38:49Z" finished-at="2018-04-22T12:38:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E9_checkExtension2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E9_checkExtension2" duration-ms="31022" started-at="2018-04-22T12:38:49Z" finished-at="2018-04-22T12:39:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E9_checkExtension2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T12:39:20Z" finished-at="2018-04-22T12:39:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E9_checkExtension3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="E9_checkExtension3" duration-ms="12089" started-at="2018-04-22T12:39:20Z" finished-at="2018-04-22T12:39:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打3333通过sps外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E9_checkExtension3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T12:39:32Z" finished-at="2018-04-22T12:39:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_removeExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F1_removeExtension" duration-ms="27834" started-at="2018-04-22T12:39:32Z" finished-at="2018-04-22T12:40:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出限制的已选分机——1103;3min内不超过1通电话]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_removeExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:40:00Z" finished-at="2018-04-22T12:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_checkExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F2_checkExtension" duration-ms="12162" started-at="2018-04-22T12:40:00Z" finished-at="2018-04-22T12:40:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_checkExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:40:12Z" finished-at="2018-04-22T12:40:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_CancelRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F3_CancelRestriction" duration-ms="41067" started-at="2018-04-22T12:40:12Z" finished-at="2018-04-22T12:40:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】编辑分机1100——取消勾选呼出限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_CancelRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T12:40:53Z" finished-at="2018-04-22T12:40:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_checkRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F4_checkRestriction" duration-ms="30203" started-at="2018-04-22T12:40:53Z" finished-at="2018-04-22T12:41:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_checkRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:41:24Z" finished-at="2018-04-22T12:41:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_Restriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F5_Restriction" duration-ms="39543" started-at="2018-04-22T12:41:24Z" finished-at="2018-04-22T12:42:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】编辑分机1100——勾选呼出限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_Restriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-04-22T12:42:03Z" finished-at="2018-04-22T12:42:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_checkRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="F6_checkRestriction" duration-ms="12143" started-at="2018-04-22T12:42:03Z" finished-at="2018-04-22T12:42:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_checkRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T12:42:15Z" finished-at="2018-04-22T12:42:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_addRestriction_Extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G1_addRestriction_Extension" duration-ms="19583" started-at="2018-04-22T12:42:15Z" finished-at="2018-04-22T12:42:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制OutRestriction2，1分钟不能超过5通]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_addRestriction_Extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T12:42:35Z" finished-at="2018-04-22T12:42:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_checkRestriction1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G2_checkRestriction1" duration-ms="236568" started-at="2018-04-22T12:42:35Z" finished-at="2018-04-22T12:46:32Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1103拨打32000通过sps外线呼出,预期第3次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_checkRestriction1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T12:46:32Z" finished-at="2018-04-22T12:46:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_addRestriction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G4_addRestriction" duration-ms="16174" started-at="2018-04-22T12:46:32Z" finished-at="2018-04-22T12:46:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制OutRestriction3，1分钟不能超过1通]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_addRestriction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:46:48Z" finished-at="2018-04-22T12:46:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_checkRestriction1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G5_checkRestriction1" duration-ms="140081" started-at="2018-04-22T12:46:48Z" finished-at="2018-04-22T12:49:08Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1104拨打32000通过sps外线呼出,预期第3次呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_checkRestriction1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-04-22T12:49:08Z" finished-at="2018-04-22T12:49:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_CancelRestriction1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G6_CancelRestriction1" duration-ms="24110" started-at="2018-04-22T12:49:08Z" finished-at="2018-04-22T12:49:32Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  查看分机1100状态已被取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_CancelRestriction1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T12:49:32Z" finished-at="2018-04-22T12:49:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_CancelRestriction2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G6_CancelRestriction2" duration-ms="21649" started-at="2018-04-22T12:49:32Z" finished-at="2018-04-22T12:49:54Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  查看分机1103状态已被取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_CancelRestriction2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T12:49:54Z" finished-at="2018-04-22T12:49:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_CancelRestriction3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G6_CancelRestriction3" duration-ms="23168" started-at="2018-04-22T12:49:54Z" finished-at="2018-04-22T12:50:17Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  查看分机1104状态已被取消限制]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_CancelRestriction3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T12:50:17Z" finished-at="2018-04-22T12:50:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_checkRestriction1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G7_checkRestriction1" duration-ms="30444" started-at="2018-04-22T12:50:17Z" finished-at="2018-04-22T12:50:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_checkRestriction1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-04-22T12:50:47Z" finished-at="2018-04-22T12:50:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_checkRestriction2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G7_checkRestriction2" duration-ms="29838" started-at="2018-04-22T12:50:48Z" finished-at="2018-04-22T12:51:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_checkRestriction2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T12:51:17Z" finished-at="2018-04-22T12:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_checkRestriction3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="G7_checkRestriction3" duration-ms="32009" started-at="2018-04-22T12:51:17Z" finished-at="2018-04-22T12:51:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1104拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_checkRestriction3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-04-22T12:51:49Z" finished-at="2018-04-22T12:51:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="H1_deletePart_no" duration-ms="15953" started-at="2018-04-22T12:51:49Z" finished-at="2018-04-22T12:52:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:52:05Z" finished-at="2018-04-22T12:52:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="H2_deletePart_yes" duration-ms="13376" started-at="2018-04-22T12:52:05Z" finished-at="2018-04-22T12:52:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T12:52:19Z" finished-at="2018-04-22T12:52:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="H3_deleteAll_no" duration-ms="9761" started-at="2018-04-22T12:52:19Z" finished-at="2018-04-22T12:52:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T12:52:29Z" finished-at="2018-04-22T12:52:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="H4_deleteAll_yes" duration-ms="13327" started-at="2018-04-22T12:52:29Z" finished-at="2018-04-22T12:52:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H4_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T12:52:42Z" finished-at="2018-04-22T12:52:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery1" duration-ms="7071" started-at="2018-04-22T12:52:42Z" finished-at="2018-04-22T12:52:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建呼出限制default，1分钟不能超过5通]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T12:52:49Z" finished-at="2018-04-22T12:52:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery2" duration-ms="17985" started-at="2018-04-22T12:52:49Z" finished-at="2018-04-22T12:53:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 EmergencyNumber全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-04-22T12:53:07Z" finished-at="2018-04-22T12:53:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery3" duration-ms="48143" started-at="2018-04-22T12:53:07Z" finished-at="2018-04-22T12:53:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="114" started-at="2018-04-22T12:53:55Z" finished-at="2018-04-22T12:53:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery4" duration-ms="32697" started-at="2018-04-22T12:53:55Z" finished-at="2018-04-22T12:54:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-04-22T12:54:28Z" finished-at="2018-04-22T12:54:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery5" duration-ms="38530" started-at="2018-04-22T12:54:28Z" finished-at="2018-04-22T12:55:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T12:55:07Z" finished-at="2018-04-22T12:55:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery6" duration-ms="40059" started-at="2018-04-22T12:55:07Z" finished-at="2018-04-22T12:55:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T12:55:47Z" finished-at="2018-04-22T12:55:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="I_recovery7" duration-ms="50585" started-at="2018-04-22T12:55:47Z" finished-at="2018-04-22T12:56:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 选择全部外线、分机、会议室进行录音]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T12:56:37Z" finished-at="2018-04-22T12:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction@a3107a]" name="AfterClass" is-config="true" duration-ms="18949" started-at="2018-04-22T12:56:37Z" finished-at="2018-04-22T12:56:56Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：====== OutboundRestriction ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRestriction -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup">
        <test-method status="PASS" signature="A_BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A_BeforeClass" is-config="true" duration-ms="27870" started-at="2018-04-22T01:50:55Z" finished-at="2018-04-22T01:51:23Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  RingGroup  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_BeforeClass -->
        <test-method status="PASS" signature="B_Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="B_Register" is-config="true" duration-ms="46792" started-at="2018-04-22T01:51:23Z" finished-at="2018-04-22T01:52:09Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_Register -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A1_Init" duration-ms="22575" started-at="2018-04-22T01:52:09Z" finished-at="2018-04-22T01:52:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:52:32Z" finished-at="2018-04-22T01:52:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="15115" started-at="2018-04-22T01:52:32Z" data-provider="add" finished-at="2018-04-22T01:52:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=, Failover=h, Number=6201, RingStrategy=ringall, Seconds=60, Members=ExtensionGroup1,1103, Name=a}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组a：6201]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T01:52:47Z" finished-at="2018-04-22T01:52:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="19280" started-at="2018-04-22T01:52:47Z" data-provider="add" finished-at="2018-04-22T01:53:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=1000, Failover=e, Number=6202, RingStrategy=ringall, Seconds=20, Members=ExtensionGroup1,1103, Name=Yeastar202}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组Yeastar202：6202]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:53:06Z" finished-at="2018-04-22T01:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="19781" started-at="2018-04-22T01:53:06Z" data-provider="add" finished-at="2018-04-22T01:53:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=1105, Failover=v, Number=6203, RingStrategy=ringall, Seconds=10, Members=1000,1100, Name=12345abcdefghijklmnopqrstuvwxyz}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组12345abcdefghijklmnopqrstuvwxyz：6203]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:53:26Z" finished-at="2018-04-22T01:53:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="21109" started-at="2018-04-22T01:53:26Z" data-provider="add" finished-at="2018-04-22T01:53:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=IVR1, Failover=i, Number=6204, RingStrategy=ringall, Seconds=20, Members=1000,1100,1101,1105, Name=*.*}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组*.*：6204]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T01:53:47Z" finished-at="2018-04-22T01:53:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="21354" started-at="2018-04-22T01:53:47Z" data-provider="add" finished-at="2018-04-22T01:54:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=Yeastar202, Failover=r, Number=6205, RingStrategy=ringinorder, Seconds=10, Members=1000,1100,1101,1105, Name=RingGroup6205}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组RingGroup6205：6205]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:54:09Z" finished-at="2018-04-22T01:54:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="20253" started-at="2018-04-22T01:54:09Z" data-provider="add" finished-at="2018-04-22T01:54:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=Queue1, Failover=q, Number=6206, RingStrategy=ringinorder, Seconds=10, Members=ExtensionGroup1,1103, Name=さようなら}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组さようなら：6206]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T01:54:29Z" finished-at="2018-04-22T01:54:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="18264" started-at="2018-04-22T01:54:29Z" data-provider="add" finished-at="2018-04-22T01:54:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=Conference1, Failover=c, Number=6207, RingStrategy=ringinorder, Seconds=30, Members=1000, Name=Досвидания}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组Досвидания：6207]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T01:54:47Z" finished-at="2018-04-22T01:54:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddRingGroups(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A2_AddRingGroups" duration-ms="18295" started-at="2018-04-22T01:54:47Z" data-provider="add" finished-at="2018-04-22T01:55:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Destination=1105, Failover=e, Number=6208, RingStrategy=ringinorder, Seconds=10, Members=ExtensionGroup1, Name=viszontlátasra}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加响铃组viszontlátasra：6208]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddRingGroups -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T01:55:06Z" finished-at="2018-04-22T01:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_cancel()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="A3_add_cancel" duration-ms="20821" started-at="2018-04-22T01:55:06Z" finished-at="2018-04-22T01:55:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建RingGroup：xxx，点击取消]]>
            </line>
            <line>
              <![CDATA[    Pass:  取消成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_cancel -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T01:55:26Z" finished-at="2018-04-22T01:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_EditRingGroupFxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="B_EditRingGroupFxs" duration-ms="25515" started-at="2018-04-22T01:55:26Z" finished-at="2018-04-22T01:55:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑RingGroup：viszontlátasra，新增成员分机1106（FXS分机）]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_EditRingGroupFxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:55:52Z" finished-at="2018-04-22T01:55:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_EditInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="C_EditInRoute1" duration-ms="34736" started-at="2018-04-22T01:55:52Z" finished-at="2018-04-22T01:56:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼入路由InRoute1，到RingGroup：a]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_EditInRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T01:56:27Z" finished-at="2018-04-22T01:56:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_InboundtoRingGroup_a()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="D_InboundtoRingGroup_a" duration-ms="369874" started-at="2018-04-22T01:56:27Z" finished-at="2018-04-22T02:02:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打999999通过sps外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打888888通过spx外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】  2001拨打2010通过fxo外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】  2001拨打66666通过bri外线呼入到RingGroup:a，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1000状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1100状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1101状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1103状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1105状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1000状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1100状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1101状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1103状态为Ring]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1105状态为Ring]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_InboundtoRingGroup_a -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T02:02:37Z" finished-at="2018-04-22T02:02:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_Sequentially()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="E1_Sequentially" duration-ms="31807" started-at="2018-04-22T02:02:37Z" finished-at="2018-04-22T02:03:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6208呼入到响铃组viszontlátasra，到分机1101响铃时，1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  2000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_Sequentially -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T02:03:08Z" finished-at="2018-04-22T02:03:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_RingAll()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="E2_RingAll" duration-ms="62131" started-at="2018-04-22T02:03:08Z" finished-at="2018-04-22T02:04:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6201呼入到响铃组a，分机1105接听，预期其它分机停止响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_RingAll -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T02:04:11Z" finished-at="2018-04-22T02:04:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_FailtoHangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F1_FailtoHangup" duration-ms="88492" started-at="2018-04-22T02:04:11Z" finished-at="2018-04-22T02:05:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打999999通过sps外线呼入到RingGroup:a，无人接听，60s后通话挂断]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  2001--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_FailtoHangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:05:39Z" finished-at="2018-04-22T02:05:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_FailtoExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F2_FailtoExtension" duration-ms="51957" started-at="2018-04-22T02:05:39Z" finished-at="2018-04-22T02:06:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6202呼入到响铃组Yeastar202，无人接听，20s后分机1000响铃接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_FailtoExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:06:31Z" finished-at="2018-04-22T02:06:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_FailtoIVR()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F3_FailtoIVR" duration-ms="54462" started-at="2018-04-22T02:06:31Z" finished-at="2018-04-22T02:07:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打6204呼入到响铃组*.*，无人接听，20S后到IVR1按1到1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_FailtoIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T02:07:26Z" finished-at="2018-04-22T02:07:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_FailtoRingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F4_FailtoRingGroup" duration-ms="67815" started-at="2018-04-22T02:07:26Z" finished-at="2018-04-22T02:08:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6205呼入到响铃组RingGroup6205，顺序响铃10s，无人接听，转到响铃组Yeastar202，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_FailtoRingGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:08:33Z" finished-at="2018-04-22T02:08:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F5_FailtoQueue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F5_FailtoQueue" duration-ms="72696" started-at="2018-04-22T02:08:33Z" finished-at="2018-04-22T02:09:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup.F5_FailtoQueue(RingGroup.java:689)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6206呼入到响铃组さようなら，顺序响铃10s，无人接听，转到队列Queue1，1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700 [6700(1100)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_FailtoQueue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="2098" started-at="2018-04-22T02:09:46Z" finished-at="2018-04-22T02:09:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F6_FailtoConference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F6_FailtoConference" duration-ms="52074" started-at="2018-04-22T02:09:48Z" finished-at="2018-04-22T02:10:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup.F6_FailtoConference(RingGroup.java:709)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打6207呼入到响铃组Досвидания，顺序响铃30s，无人接听，转到Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Ring]]>
            </line>
            <line>
              <![CDATA[    Pass:  1000--Hang up]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6207(6400)] 实际：6400 [6207(6400)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_FailtoConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="2105" started-at="2018-04-22T02:10:40Z" finished-at="2018-04-22T02:10:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F7_FailtoVoicemail()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F7_FailtoVoicemail" duration-ms="59926" started-at="2018-04-22T02:10:42Z" finished-at="2018-04-22T02:11:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打6203呼入到响铃组，同时响铃10s，无人接听，预期到1105的voicemail]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F7_FailtoVoicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:11:42Z" finished-at="2018-04-22T02:11:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F8_check_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="F8_check_Voicemail" duration-ms="34391" started-at="2018-04-22T02:11:42Z" finished-at="2018-04-22T02:12:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1105登录，查看存在1102留下的语音留言]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为1102(1102)]]>
            </line>
          </reporter-output>
        </test-method> <!-- F8_check_Voicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T02:12:17Z" finished-at="2018-04-22T02:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="G_delete" duration-ms="77578" started-at="2018-04-22T02:12:17Z" finished-at="2018-04-22T02:13:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Yeastar202-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Yeastar202-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Yeastar202-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：RingGroup6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：さようなら-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：さようなら-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：さようなら-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：さようなら-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:13:34Z" finished-at="2018-04-22T02:13:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="H1_recovery" duration-ms="31837" started-at="2018-04-22T02:13:34Z" finished-at="2018-04-22T02:14:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复初始化环境]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有RingGroup]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加RingGroup1：6200，选择分机1000,1100,1105，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T02:14:06Z" finished-at="2018-04-22T02:14:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="H2_recovery" duration-ms="34476" started-at="2018-04-22T02:14:06Z" finished-at="2018-04-22T02:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- H2_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:14:41Z" finished-at="2018-04-22T02:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup@17e1b0c]" name="AfterClass" is-config="true" duration-ms="13408" started-at="2018-04-22T02:14:41Z" finished-at="2018-04-22T02:14:54Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=====  RingGroup =====

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.RingGroup -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="BeforeClass" is-config="true" duration-ms="28460" started-at="2018-04-22T10:16:48Z" finished-at="2018-04-22T10:17:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== TimeCondition ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="A_addExtensions" duration-ms="8264" started-at="2018-04-22T10:17:16Z" finished-at="2018-04-22T10:17:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T10:17:25Z" finished-at="2018-04-22T10:17:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition1" duration-ms="134128" started-at="2018-04-22T10:17:25Z" finished-at="2018-04-22T10:19:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Q_ABC: 00:00~01:00]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑Q_ABC，新增10个Time，勾选高级设置，All Month,All Day]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T10:19:39Z" finished-at="2018-04-22T10:19:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition2" duration-ms="19084" started-at="2018-04-22T10:19:39Z" finished-at="2018-04-22T10:19:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件*:2月2号周一，00:59~23:59]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑*，勾选高级设置，february,day2]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T10:19:58Z" finished-at="2018-04-22T10:19:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition3" duration-ms="19373" started-at="2018-04-22T10:19:58Z" finished-at="2018-04-22T10:20:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件1234567890123456789012345678901:7月7号周六，17:00~20:00]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑1234567890123456789012345678901，勾选高级设置，july,day7]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T10:20:17Z" finished-at="2018-04-22T10:20:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition4" duration-ms="19419" started-at="2018-04-22T10:20:17Z" finished-at="2018-04-22T10:20:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件あリがとゥ:8月8号周日，20:10~22:30]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑あリがとゥ，勾选高级设置，august,september,day8,day9,day10,day11]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T10:20:37Z" finished-at="2018-04-22T10:20:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition5" duration-ms="19404" started-at="2018-04-22T10:20:37Z" finished-at="2018-04-22T10:20:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件?????????:10月29号周一到周五，00:00~23:59]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑?????????，勾选高级设置，october,day29]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T10:20:56Z" finished-at="2018-04-22T10:20:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition6" duration-ms="19456" started-at="2018-04-22T10:20:56Z" finished-at="2018-04-22T10:21:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Спасибо：12月31号周二、四、六，00:00~23:59]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑Спасибо，勾选高级设置，december,day31]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T10:21:16Z" finished-at="2018-04-22T10:21:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addTimeCondition7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B1_addTimeCondition7" duration-ms="20199" started-at="2018-04-22T10:21:16Z" finished-at="2018-04-22T10:21:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件 时间条件7：1月1号周一到周日，00:00~23:59]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑时间条件7，勾选高级设置，january,day1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addTimeCondition7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:21:36Z" finished-at="2018-04-22T10:21:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_addHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B2_addHoliday" duration-ms="42699" started-at="2018-04-22T10:21:36Z" finished-at="2018-04-22T10:22:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_addHoliday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:22:19Z" finished-at="2018-04-22T10:22:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute1" duration-ms="23869" started-at="2018-04-22T10:22:19Z" finished-at="2018-04-22T10:22:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T10:22:43Z" finished-at="2018-04-22T10:22:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute2" duration-ms="12781" started-at="2018-04-22T10:22:43Z" finished-at="2018-04-22T10:22:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test2]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T10:22:55Z" finished-at="2018-04-22T10:22:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute3" duration-ms="12987" started-at="2018-04-22T10:22:55Z" finished-at="2018-04-22T10:23:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test3]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T10:23:08Z" finished-at="2018-04-22T10:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute4" duration-ms="12888" started-at="2018-04-22T10:23:08Z" finished-at="2018-04-22T10:23:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test4]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T10:23:21Z" finished-at="2018-04-22T10:23:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute5" duration-ms="13856" started-at="2018-04-22T10:23:21Z" finished-at="2018-04-22T10:23:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test5]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T10:23:35Z" finished-at="2018-04-22T10:23:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute6" duration-ms="13253" started-at="2018-04-22T10:23:35Z" finished-at="2018-04-22T10:23:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test6]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T10:23:49Z" finished-at="2018-04-22T10:23:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addOutRoute7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B3_addOutRoute7" duration-ms="12892" started-at="2018-04-22T10:23:49Z" finished-at="2018-04-22T10:24:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加呼出路由OutRoute_test7]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addOutRoute7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T10:24:01Z" finished-at="2018-04-22T10:24:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B4_editInRoute" duration-ms="117084" started-at="2018-04-22T10:24:01Z" finished-at="2018-04-22T10:25:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由InRoute1，启用时间条件，并且新增八个Time Condition]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:25:59Z" finished-at="2018-04-22T10:25:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_ExtensionPermission()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="B5_ExtensionPermission" duration-ms="18263" started-at="2018-04-22T10:25:59Z" finished-at="2018-04-22T10:26:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_ExtensionPermission -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T10:26:17Z" finished-at="2018-04-22T10:26:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C1_FeatureCode" duration-ms="28206" started-at="2018-04-22T10:26:17Z" finished-at="2018-04-22T10:26:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*802强制启用工作时间_Q_ABC]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T10:26:45Z" finished-at="2018-04-22T10:26:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_setSystemTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C2_setSystemTime" duration-ms="203186" started-at="2018-04-22T10:26:45Z" finished-at="2018-04-22T10:30:08Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_setSystemTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T10:30:08Z" finished-at="2018-04-22T10:30:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C3_makeCall_Out" duration-ms="42780" started-at="2018-04-22T10:30:08Z" finished-at="2018-04-22T10:30:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.C3_makeCall_Out(TimeCondition.java:492)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C3_makeCall_Out()分机1000.jpg" target="_blank">Error: C3_makeCall_Out()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2055" started-at="2018-04-22T10:30:51Z" finished-at="2018-04-22T10:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C4_makeCall_In" duration-ms="48752" started-at="2018-04-22T10:30:53Z" finished-at="2018-04-22T10:31:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C4_makeCall_In()分机1000.jpg" target="_blank">Error: C4_makeCall_In()分机1000调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T10:31:42Z" finished-at="2018-04-22T10:31:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C5_setSystemTime1" duration-ms="115085" started-at="2018-04-22T10:31:42Z" finished-at="2018-04-22T10:33:37Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:33:37Z" finished-at="2018-04-22T10:33:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C5_setSystemTime2" duration-ms="63949" started-at="2018-04-22T10:33:37Z" finished-at="2018-04-22T10:34:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T10:34:41Z" finished-at="2018-04-22T10:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C6_makeCall_Out" duration-ms="12087" started-at="2018-04-22T10:34:41Z" finished-at="2018-04-22T10:34:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T10:34:53Z" finished-at="2018-04-22T10:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C7_makeCall_In" duration-ms="42396" started-at="2018-04-22T10:34:53Z" finished-at="2018-04-22T10:35:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.C7_makeCall_In(TimeCondition.java:669)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C7_makeCall_In()分机1000.jpg" target="_blank">Error: C7_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2064" started-at="2018-04-22T10:35:35Z" finished-at="2018-04-22T10:35:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C8_FeatureCode" duration-ms="29187" started-at="2018-04-22T10:35:38Z" finished-at="2018-04-22T10:36:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800重置]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\C8_FeatureCode()分机1000.jpg" target="_blank">Error: C8_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T10:36:07Z" finished-at="2018-04-22T10:36:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C9_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="C9_makeCall_In" duration-ms="21176" started-at="2018-04-22T10:36:07Z" finished-at="2018-04-22T10:36:28Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.C9_makeCall_In(TimeCondition.java:720)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2058" started-at="2018-04-22T10:36:28Z" finished-at="2018-04-22T10:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_setSystemTime1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D1_setSystemTime1_FeatureCode" duration-ms="29167" started-at="2018-04-22T10:36:30Z" finished-at="2018-04-22T10:36:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*802]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D1_setSystemTime1_FeatureCode()分机1000.jpg" target="_blank">Error: D1_setSystemTime1_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_setSystemTime1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T10:36:59Z" finished-at="2018-04-22T10:36:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D1_setSystemTime2" duration-ms="115984" started-at="2018-04-22T10:36:59Z" finished-at="2018-04-22T10:38:55Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:38:55Z" finished-at="2018-04-22T10:38:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_setSystemTime3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D1_setSystemTime3" duration-ms="64854" started-at="2018-04-22T10:38:55Z" finished-at="2018-04-22T10:40:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_setSystemTime3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T10:40:00Z" finished-at="2018-04-22T10:40:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D2_makeCall_Out" duration-ms="42845" started-at="2018-04-22T10:40:00Z" finished-at="2018-04-22T10:40:43Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.D2_makeCall_Out(TimeCondition.java:869)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D2_makeCall_Out()分机1000.jpg" target="_blank">Error: D2_makeCall_Out()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2055" started-at="2018-04-22T10:40:43Z" finished-at="2018-04-22T10:40:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D3_makeCall_In" duration-ms="50239" started-at="2018-04-22T10:40:45Z" finished-at="2018-04-22T10:41:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D3_makeCall_In()分机1000.jpg" target="_blank">Error: D3_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:41:35Z" finished-at="2018-04-22T10:41:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D4_deleteTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D4_deleteTime" duration-ms="31306" started-at="2018-04-22T10:41:35Z" finished-at="2018-04-22T10:42:06Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'timecondition-edit-')]//div[starts-with(@id,'panel-')]//div[2]//div[8]//img}
Expected: visible]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[starts-with(@id,'timecondition-edit-')]//div[starts-with(@id,'panel-')]//div[2]//div[8]//img}
Expected: visible
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524364926295.7.png
Timeout: 15 s.
Caused by: NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":".//div[starts-with(@id,'timecondition-edit-')]//div[starts-with(@id,'panel-')]//div[2]//div[8]//img"}
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:59)
	at com.codeborne.selenide.impl.WebElementSource.findAndAssertElementIsVisible(WebElementSource.java:72)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.D4_deleteTime(TimeCondition.java:927)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {"method":"xpath","selector":".//div[starts-with(@id,'timecondition-edit-')]//div[starts-with(@id,'panel-')]//div[2]//div[8]//img"}
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 12 milliseconds
For documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14508_24216}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: aaed071e2e05285b4d5278e85fdac0d5
*** Element info: {Using=xpath, value=.//div[starts-with(@id,'timecondition-edit-')]//div[starts-with(@id,'panel-')]//div[2]//div[8]//img}
	at sun.reflect.GeneratedConstructorAccessor40.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)
	at org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:500)
	at org.openqa.selenium.By$ByXPath.findElement(By.java:361)
	at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:355)
	at com.codeborne.selenide.impl.WebElementSelector.findElement(WebElementSelector.java:28)
	at com.codeborne.selenide.impl.ElementFinder.getWebElement(ElementFinder.java:56)
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:44)
	... 35 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除TimeCondition_Q_ABC的Time]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_deleteTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T10:42:06Z" finished-at="2018-04-22T10:42:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D5_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D5_makeCall_Out" duration-ms="42417" started-at="2018-04-22T10:42:07Z" finished-at="2018-04-22T10:42:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.D5_makeCall_Out(TimeCondition.java:957)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D5_makeCall_Out()分机1000.jpg" target="_blank">Error: D5_makeCall_Out()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2069" started-at="2018-04-22T10:42:49Z" finished-at="2018-04-22T10:42:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D6_makeCall_In" duration-ms="50347" started-at="2018-04-22T10:42:51Z" finished-at="2018-04-22T10:43:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D6_makeCall_In()分机1000.jpg" target="_blank">Error: D6_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T10:43:41Z" finished-at="2018-04-22T10:43:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D7_setSystemTime1" duration-ms="134408" started-at="2018-04-22T10:43:41Z" finished-at="2018-04-22T10:45:56Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:45:56Z" finished-at="2018-04-22T10:45:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D7_setSystemTime2" duration-ms="63937" started-at="2018-04-22T10:45:56Z" finished-at="2018-04-22T10:47:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T10:47:00Z" finished-at="2018-04-22T10:47:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D8_makeCall_Out" duration-ms="12094" started-at="2018-04-22T10:47:00Z" finished-at="2018-04-22T10:47:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打922000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T10:47:12Z" finished-at="2018-04-22T10:47:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D9_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="D9_makeCall_In" duration-ms="39996" started-at="2018-04-22T10:47:12Z" finished-at="2018-04-22T10:47:52Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.D9_makeCall_In(TimeCondition.java:1135)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\D9_makeCall_In()分机1000.jpg" target="_blank">Error: D9_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D9_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2083" started-at="2018-04-22T10:47:52Z" finished-at="2018-04-22T10:47:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E1_FeatureCode" duration-ms="29162" started-at="2018-04-22T10:47:54Z" finished-at="2018-04-22T10:48:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*803强制启用工作时间_*]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E1_FeatureCode()分机1000.jpg" target="_blank">Error: E1_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T10:48:23Z" finished-at="2018-04-22T10:48:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E2_setSystemTime1" duration-ms="116027" started-at="2018-04-22T10:48:23Z" finished-at="2018-04-22T10:50:19Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T10:50:19Z" finished-at="2018-04-22T10:50:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E2_setSystemTime2" duration-ms="65281" started-at="2018-04-22T10:50:19Z" finished-at="2018-04-22T10:51:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T10:51:24Z" finished-at="2018-04-22T10:51:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E3_makeCall_Out" duration-ms="41766" started-at="2018-04-22T10:51:24Z" finished-at="2018-04-22T10:52:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.E3_makeCall_Out(TimeCondition.java:1285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打932000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E3_makeCall_Out()分机1100.jpg" target="_blank">Error: E3_makeCall_Out()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T10:52:06Z" finished-at="2018-04-22T10:52:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E4_makeCall_In" duration-ms="48936" started-at="2018-04-22T10:52:08Z" finished-at="2018-04-22T10:52:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E4_makeCall_In()分机1100.jpg" target="_blank">Error: E4_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T10:52:57Z" finished-at="2018-04-22T10:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E5_setSystemTime1" duration-ms="133097" started-at="2018-04-22T10:52:57Z" finished-at="2018-04-22T10:55:10Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T10:55:10Z" finished-at="2018-04-22T10:55:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E5_setSystemTime2" duration-ms="65482" started-at="2018-04-22T10:55:10Z" finished-at="2018-04-22T10:56:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T10:56:16Z" finished-at="2018-04-22T10:56:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E6_makeCall_Out" duration-ms="12093" started-at="2018-04-22T10:56:16Z" finished-at="2018-04-22T10:56:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打932000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打932000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T10:56:28Z" finished-at="2018-04-22T10:56:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E7_makeCall_In" duration-ms="42138" started-at="2018-04-22T10:56:28Z" finished-at="2018-04-22T10:57:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [1100] 实际：6400】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [1100] 实际：6400】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.E7_makeCall_In(TimeCondition.java:1465)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1100，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E7_makeCall_In()分机1100.jpg" target="_blank">Error: E7_makeCall_In()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [1100] 实际：6400】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [1100] 实际：6400】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2060" started-at="2018-04-22T10:57:10Z" finished-at="2018-04-22T10:57:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E8_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E8_FeatureCode" duration-ms="29165" started-at="2018-04-22T10:57:12Z" finished-at="2018-04-22T10:57:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\E8_FeatureCode()分机1000.jpg" target="_blank">Error: E8_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- E8_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T10:57:41Z" finished-at="2018-04-22T10:57:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E9_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="E9_makeCall_In" duration-ms="28618" started-at="2018-04-22T10:57:41Z" finished-at="2018-04-22T10:58:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E9_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T10:58:10Z" finished-at="2018-04-22T10:58:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F1_setSystemTime1" duration-ms="126752" started-at="2018-04-22T10:58:10Z" finished-at="2018-04-22T11:00:17Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T11:00:17Z" finished-at="2018-04-22T11:00:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F1_setSystemTime2" duration-ms="64317" started-at="2018-04-22T11:00:17Z" finished-at="2018-04-22T11:01:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T11:01:21Z" finished-at="2018-04-22T11:01:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F2_FeatureCode" duration-ms="29425" started-at="2018-04-22T11:01:21Z" finished-at="2018-04-22T11:01:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*804强制启用工作时间_1234567890123456789012345678901]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\F2_FeatureCode()分机1000.jpg" target="_blank">Error: F2_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T11:01:51Z" finished-at="2018-04-22T11:01:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F3_makeCall_Out" duration-ms="23621" started-at="2018-04-22T11:01:51Z" finished-at="2018-04-22T11:02:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.F3_makeCall_Out(TimeCondition.java:1664)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打942000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1101 [1101] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2073" started-at="2018-04-22T11:02:14Z" finished-at="2018-04-22T11:02:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F4_makeCall_In" duration-ms="30803" started-at="2018-04-22T11:02:16Z" finished-at="2018-04-22T11:02:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1101，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T11:02:47Z" finished-at="2018-04-22T11:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F5_setSystemTime1" duration-ms="131015" started-at="2018-04-22T11:02:47Z" finished-at="2018-04-22T11:04:58Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T11:04:58Z" finished-at="2018-04-22T11:04:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F5_setSystemTime2" duration-ms="64261" started-at="2018-04-22T11:04:58Z" finished-at="2018-04-22T11:06:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T11:06:02Z" finished-at="2018-04-22T11:06:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F6_makeCall_Out" duration-ms="12098" started-at="2018-04-22T11:06:02Z" finished-at="2018-04-22T11:06:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打932000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打932000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T11:06:14Z" finished-at="2018-04-22T11:06:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="F7_makeCall_In" duration-ms="21136" started-at="2018-04-22T11:06:14Z" finished-at="2018-04-22T11:06:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.F7_makeCall_In(TimeCondition.java:1841)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1101，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2056" started-at="2018-04-22T11:06:36Z" finished-at="2018-04-22T11:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G1_FeatureCode" duration-ms="29796" started-at="2018-04-22T11:06:38Z" finished-at="2018-04-22T11:07:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*805强制启用工作时间_あリがとゥ]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G1_FeatureCode()分机1000.jpg" target="_blank">Error: G1_FeatureCode()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:07:07Z" finished-at="2018-04-22T11:07:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G2_setSystemTime1" duration-ms="133837" started-at="2018-04-22T11:07:08Z" finished-at="2018-04-22T11:09:21Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:09:21Z" finished-at="2018-04-22T11:09:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G2_setSystemTime2" duration-ms="64079" started-at="2018-04-22T11:09:21Z" finished-at="2018-04-22T11:10:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T11:10:25Z" finished-at="2018-04-22T11:10:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G3_makeCall_Out" duration-ms="23675" started-at="2018-04-22T11:10:25Z" finished-at="2018-04-22T11:10:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.G3_makeCall_Out(TimeCondition.java:1991)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2054" started-at="2018-04-22T11:10:49Z" finished-at="2018-04-22T11:10:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G4_makeCall_In" duration-ms="30607" started-at="2018-04-22T11:10:51Z" finished-at="2018-04-22T11:11:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:11:22Z" finished-at="2018-04-22T11:11:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G5_setSystemTime1" duration-ms="113882" started-at="2018-04-22T11:11:22Z" finished-at="2018-04-22T11:13:16Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:13:16Z" finished-at="2018-04-22T11:13:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G5_setSystemTime2" duration-ms="64345" started-at="2018-04-22T11:13:16Z" finished-at="2018-04-22T11:14:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T11:14:20Z" finished-at="2018-04-22T11:14:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G6_makeCall_Out" duration-ms="12086" started-at="2018-04-22T11:14:20Z" finished-at="2018-04-22T11:14:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T11:14:32Z" finished-at="2018-04-22T11:14:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="G7_makeCall_In" duration-ms="28949" started-at="2018-04-22T11:14:32Z" finished-at="2018-04-22T11:15:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T11:15:01Z" finished-at="2018-04-22T11:15:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H1_setSystemTime1" duration-ms="125837" started-at="2018-04-22T11:15:01Z" finished-at="2018-04-22T11:17:07Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:17:07Z" finished-at="2018-04-22T11:17:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H1_setSystemTime2" duration-ms="64592" started-at="2018-04-22T11:17:07Z" finished-at="2018-04-22T11:18:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:18:12Z" finished-at="2018-04-22T11:18:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H2_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H2_makeCall_Out" duration-ms="23837" started-at="2018-04-22T11:18:12Z" finished-at="2018-04-22T11:18:35Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.H2_makeCall_Out(TimeCondition.java:2297)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1102状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1102 [1102] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2053" started-at="2018-04-22T11:18:35Z" finished-at="2018-04-22T11:18:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H3_makeCall_In" duration-ms="30412" started-at="2018-04-22T11:18:37Z" finished-at="2018-04-22T11:19:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T11:19:08Z" finished-at="2018-04-22T11:19:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H4_setSystemTime1" duration-ms="126578" started-at="2018-04-22T11:19:08Z" finished-at="2018-04-22T11:21:15Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- H4_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:21:15Z" finished-at="2018-04-22T11:21:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H4_setSystemTime2" duration-ms="65201" started-at="2018-04-22T11:21:15Z" finished-at="2018-04-22T11:22:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- H4_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T11:22:20Z" finished-at="2018-04-22T11:22:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H5_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H5_makeCall_Out" duration-ms="12088" started-at="2018-04-22T11:22:20Z" finished-at="2018-04-22T11:22:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打952000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- H5_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T11:22:32Z" finished-at="2018-04-22T11:22:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H6_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H6_makeCall_In" duration-ms="21468" started-at="2018-04-22T11:22:32Z" finished-at="2018-04-22T11:22:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.H6_makeCall_In(TimeCondition.java:2472)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1102，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H6_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2053" started-at="2018-04-22T11:22:53Z" finished-at="2018-04-22T11:22:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H7_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H7_FeatureCode" duration-ms="29747" started-at="2018-04-22T11:22:55Z" finished-at="2018-04-22T11:23:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H7_FeatureCode()分机1000.jpg" target="_blank">Error: H7_FeatureCode()分机1000</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- H7_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T11:23:25Z" finished-at="2018-04-22T11:23:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H8_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="H8_makeCall_In" duration-ms="21161" started-at="2018-04-22T11:23:25Z" finished-at="2018-04-22T11:23:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.H8_makeCall_In(TimeCondition.java:2524)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H8_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2058" started-at="2018-04-22T11:23:46Z" finished-at="2018-04-22T11:23:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I1_FeatureCode" duration-ms="29213" started-at="2018-04-22T11:23:48Z" finished-at="2018-04-22T11:24:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*806强制启用工作时间_?????????]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\I1_FeatureCode()分机1000.jpg" target="_blank">Error: I1_FeatureCode()分机1000</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T11:24:18Z" finished-at="2018-04-22T11:24:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I2_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I2_setSystemTime1" duration-ms="114849" started-at="2018-04-22T11:24:18Z" finished-at="2018-04-22T11:26:12Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T11:26:12Z" finished-at="2018-04-22T11:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I2_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I2_setSystemTime2" duration-ms="64129" started-at="2018-04-22T11:26:12Z" finished-at="2018-04-22T11:27:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T11:27:17Z" finished-at="2018-04-22T11:27:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I3_makeCall_Out" duration-ms="23554" started-at="2018-04-22T11:27:17Z" finished-at="2018-04-22T11:27:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.I3_makeCall_Out(TimeCondition.java:2672)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打962000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1103状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：xlq [1103] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-04-22T11:27:40Z" finished-at="2018-04-22T11:27:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I4_makeCall_In" duration-ms="30642" started-at="2018-04-22T11:27:42Z" finished-at="2018-04-22T11:28:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1103，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:28:13Z" finished-at="2018-04-22T11:28:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I5_setSystemTime1" duration-ms="113272" started-at="2018-04-22T11:28:13Z" finished-at="2018-04-22T11:30:06Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- I5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T11:30:06Z" finished-at="2018-04-22T11:30:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I5_setSystemTime2" duration-ms="64423" started-at="2018-04-22T11:30:06Z" finished-at="2018-04-22T11:31:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- I5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T11:31:11Z" finished-at="2018-04-22T11:31:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I6_makeCall_Out" duration-ms="12580" started-at="2018-04-22T11:31:11Z" finished-at="2018-04-22T11:31:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打962000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1103拨打962000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- I6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T11:31:23Z" finished-at="2018-04-22T11:31:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="I7_makeCall_In" duration-ms="21490" started-at="2018-04-22T11:31:23Z" finished-at="2018-04-22T11:31:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.I7_makeCall_In(TimeCondition.java:2847)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1103，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2054" started-at="2018-04-22T11:31:45Z" finished-at="2018-04-22T11:31:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J1_FeatureCode" duration-ms="16006" started-at="2018-04-22T11:31:47Z" finished-at="2018-04-22T11:32:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*807强制启用工作时间_Спасибо]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T11:32:03Z" finished-at="2018-04-22T11:32:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J2_setSystemTime1" duration-ms="116116" started-at="2018-04-22T11:32:03Z" finished-at="2018-04-22T11:33:59Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:33:59Z" finished-at="2018-04-22T11:33:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J2_setSystemTime2" duration-ms="64701" started-at="2018-04-22T11:33:59Z" finished-at="2018-04-22T11:35:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:35:04Z" finished-at="2018-04-22T11:35:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J3_makeCall_Out" duration-ms="23381" started-at="2018-04-22T11:35:04Z" finished-at="2018-04-22T11:35:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.J3_makeCall_Out(TimeCondition.java:2995)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1104拨打972000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1104状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：xll [1104] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2057" started-at="2018-04-22T11:35:27Z" finished-at="2018-04-22T11:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J4_makeCall_In" duration-ms="30629" started-at="2018-04-22T11:35:29Z" finished-at="2018-04-22T11:36:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1104，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:36:00Z" finished-at="2018-04-22T11:36:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J5_setSystemTime1" duration-ms="125806" started-at="2018-04-22T11:36:00Z" finished-at="2018-04-22T11:38:06Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- J5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T11:38:06Z" finished-at="2018-04-22T11:38:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J5_setSystemTime2" duration-ms="64831" started-at="2018-04-22T11:38:06Z" finished-at="2018-04-22T11:39:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- J5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:39:10Z" finished-at="2018-04-22T11:39:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J6_makeCall_Out" duration-ms="12087" started-at="2018-04-22T11:39:10Z" finished-at="2018-04-22T11:39:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1104拨打972000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1104拨打972000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- J6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T11:39:23Z" finished-at="2018-04-22T11:39:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J7_makeCall_In" duration-ms="21222" started-at="2018-04-22T11:39:23Z" finished-at="2018-04-22T11:39:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.J7_makeCall_In(TimeCondition.java:3174)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1104，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2051" started-at="2018-04-22T11:39:44Z" finished-at="2018-04-22T11:39:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J8_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J8_FeatureCode" duration-ms="29861" started-at="2018-04-22T11:39:46Z" finished-at="2018-04-22T11:40:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\J8_FeatureCode()分机1000.jpg" target="_blank">Error: J8_FeatureCode()分机1000</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- J8_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:40:16Z" finished-at="2018-04-22T11:40:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="J9_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="J9_makeCall_In" duration-ms="21404" started-at="2018-04-22T11:40:16Z" finished-at="2018-04-22T11:40:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.J9_makeCall_In(TimeCondition.java:3226)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2001 [2001] 实际：1000 [1000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J9_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2059" started-at="2018-04-22T11:40:37Z" finished-at="2018-04-22T11:40:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K1_FeatureCode" duration-ms="29626" started-at="2018-04-22T11:40:39Z" finished-at="2018-04-22T11:41:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*808强制启用工作时间_时间条件7]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\K1_FeatureCode()分机1000.jpg" target="_blank">Error: K1_FeatureCode()分机1000</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T11:41:09Z" finished-at="2018-04-22T11:41:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K2_setSystemTime1" duration-ms="115816" started-at="2018-04-22T11:41:09Z" finished-at="2018-04-22T11:43:05Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T11:43:05Z" finished-at="2018-04-22T11:43:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K2_setSystemTime2" duration-ms="64458" started-at="2018-04-22T11:43:05Z" finished-at="2018-04-22T11:44:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T11:44:09Z" finished-at="2018-04-22T11:44:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K3_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K3_makeCall_Out" duration-ms="24030" started-at="2018-04-22T11:44:09Z" finished-at="2018-04-22T11:44:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.K3_makeCall_Out(TimeCondition.java:3374)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打982000通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1105 [1105] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2049" started-at="2018-04-22T11:44:33Z" finished-at="2018-04-22T11:44:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K4_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K4_makeCall_In" duration-ms="30913" started-at="2018-04-22T11:44:35Z" finished-at="2018-04-22T11:45:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1105，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:45:06Z" finished-at="2018-04-22T11:45:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K5_setSystemTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K5_setSystemTime1" duration-ms="133446" started-at="2018-04-22T11:45:06Z" finished-at="2018-04-22T11:47:20Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- K5_setSystemTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T11:47:20Z" finished-at="2018-04-22T11:47:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K5_setSystemTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K5_setSystemTime2" duration-ms="65733" started-at="2018-04-22T11:47:20Z" finished-at="2018-04-22T11:48:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- K5_setSystemTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:48:25Z" finished-at="2018-04-22T11:48:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K6_makeCall_Out()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K6_makeCall_Out" duration-ms="12167" started-at="2018-04-22T11:48:25Z" finished-at="2018-04-22T11:48:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打982000通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105拨打982000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K6_makeCall_Out -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-04-22T11:48:37Z" finished-at="2018-04-22T11:48:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K7_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K7_makeCall_In" duration-ms="22698" started-at="2018-04-22T11:48:37Z" finished-at="2018-04-22T11:49:00Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [1105] 实际：6400】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [1105] 实际：6400】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.K7_makeCall_In(TimeCondition.java:3550)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1105，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [1105] 实际：6400】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [1105] 实际：6400】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K7_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="2050" started-at="2018-04-22T11:49:00Z" finished-at="2018-04-22T11:49:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K8_FeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K8_FeatureCode" duration-ms="29801" started-at="2018-04-22T11:49:02Z" finished-at="2018-04-22T11:49:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打特征码*800]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\K8_FeatureCode()分机1000.jpg" target="_blank">Error: K8_FeatureCode()分机1000</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- K8_FeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T11:49:32Z" finished-at="2018-04-22T11:49:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K9_makeCall_In()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="K9_makeCall_In" duration-ms="29086" started-at="2018-04-22T11:49:32Z" finished-at="2018-04-22T11:50:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K9_makeCall_In -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:50:01Z" finished-at="2018-04-22T11:50:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L1_deleteOne_no" duration-ms="29031" started-at="2018-04-22T11:50:01Z" finished-at="2018-04-22T11:50:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个holiday——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除holiday-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:50:30Z" finished-at="2018-04-22T11:50:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L2_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L2_deleteOne_yes" duration-ms="30880" started-at="2018-04-22T11:50:30Z" finished-at="2018-04-22T11:51:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个holiday——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个holiday——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T11:51:01Z" finished-at="2018-04-22T11:51:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L3_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L3_deletePart_no" duration-ms="19892" started-at="2018-04-22T11:51:01Z" finished-at="2018-04-22T11:51:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L3_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T11:51:21Z" finished-at="2018-04-22T11:51:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L4_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L4_deletePart_yes" duration-ms="13325" started-at="2018-04-22T11:51:21Z" finished-at="2018-04-22T11:51:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L4_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T11:51:34Z" finished-at="2018-04-22T11:51:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L5_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L5_deleteAll_no" duration-ms="9745" started-at="2018-04-22T11:51:34Z" finished-at="2018-04-22T11:51:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L5_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T11:51:44Z" finished-at="2018-04-22T11:51:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L6_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="L6_deleteAll_yes" duration-ms="13338" started-at="2018-04-22T11:51:44Z" finished-at="2018-04-22T11:51:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L6_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:51:57Z" finished-at="2018-04-22T11:51:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M1_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M1_deleteOne_no" duration-ms="17027" started-at="2018-04-22T11:51:57Z" finished-at="2018-04-22T11:52:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个timeConditions——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个timeConditions-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:52:14Z" finished-at="2018-04-22T11:52:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M2_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M2_deleteOne_yes" duration-ms="24817" started-at="2018-04-22T11:52:15Z" finished-at="2018-04-22T11:52:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个timeConditions——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个timeConditions——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T11:52:39Z" finished-at="2018-04-22T11:52:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M3_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M3_deletePart_no" duration-ms="22908" started-at="2018-04-22T11:52:39Z" finished-at="2018-04-22T11:53:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M3_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T11:53:02Z" finished-at="2018-04-22T11:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M4_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M4_deletePart_yes" duration-ms="13360" started-at="2018-04-22T11:53:02Z" finished-at="2018-04-22T11:53:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M4_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T11:53:16Z" finished-at="2018-04-22T11:53:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M5_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M5_deleteAll_no" duration-ms="9802" started-at="2018-04-22T11:53:16Z" finished-at="2018-04-22T11:53:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M5_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:53:25Z" finished-at="2018-04-22T11:53:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M6_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="M6_deleteAll_yes" duration-ms="13284" started-at="2018-04-22T11:53:25Z" finished-at="2018-04-22T11:53:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M6_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T11:53:39Z" finished-at="2018-04-22T11:53:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_recovery1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="N_recovery1" duration-ms="27597" started-at="2018-04-22T11:53:39Z" finished-at="2018-04-22T11:54:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑Workday]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_recovery1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T11:54:06Z" finished-at="2018-04-22T11:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="N_recovery2" duration-ms="130421" started-at="2018-04-22T11:54:06Z" finished-at="2018-04-22T11:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- N_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T11:56:17Z" finished-at="2018-04-22T11:56:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_recovery3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="N_recovery3" duration-ms="47822" started-at="2018-04-22T11:56:17Z" finished-at="2018-04-22T11:57:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_recovery3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T11:57:05Z" finished-at="2018-04-22T11:57:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="N_recovery4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="N_recovery4" duration-ms="24520" started-at="2018-04-22T11:57:05Z" finished-at="2018-04-22T11:57:29Z">
          <exception class="com.codeborne.selenide.ex.ElementNotFound">
            <message>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-feature-extenspermission']//a[@data-qtip='Remove All from Selected']}
Expected: exist]]>
            </message>
            <full-stacktrace>
              <![CDATA[Element not found {By.xpath: .//div[@id='st-feature-extenspermission']//a[@data-qtip='Remove All from Selected']}
Expected: exist
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524369448539.8.png
Timeout: 15 s.
Caused by: WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-2160" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-2160">...</a> is not clickable at point (871, 593). Other element would receive the click: <div class="x-css-shadow" role="presentation" id="ext-element-80" style="box-shadow: rgb(136, 136, 136) 0px 0px 6px; right: auto; left: 532px; top: 335px; width: 700px; height: 396px; z-index: 19030;"></div>
	at com.codeborne.selenide.impl.WebElementSource.createElementNotFoundError(WebElementSource.java:31)
	at com.codeborne.selenide.impl.ElementFinder.createElementNotFoundError(ElementFinder.java:82)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:115)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition.N_recovery4(TimeCondition.java:3865)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
Caused by: org.openqa.selenium.WebDriverException: unknown error: Element <a class="x-btn x-form-itemselector-btn x-unselectable x-box-item x-toolbar-item x-btn-default-small" style="margin: 0px; right: auto; left: 0px; top: 149px;" hidefocus="on" unselectable="on" role="button" aria-hidden="false" aria-disabled="false" aria-label="Remove All from Selected" id="button-2160" tabindex="-1" data-qtip="Remove All from Selected" data-componentid="button-2160">...</a> is not clickable at point (871, 593). Other element would receive the click: <div class="x-css-shadow" role="presentation" id="ext-element-80" style="box-shadow: rgb(136, 136, 136) 0px 0px 6px; right: auto; left: 532px; top: 335px; width: 700px; height: 396px; z-index: 19030;"></div>
  (Session info: chrome=64.0.3282.140)
  (Driver info: chromedriver=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f),platform=Windows NT 6.1.7601 SP1 x86_64) (WARNING: The server did not provide any stacktrace information)
Command duration or timeout: 27 milliseconds
Build info: version: '2.53.1', revision: 'a36b8b1cd5757287168e54b817830adce9b0158d', time: '2016-06-30 19:26:09'
System info: host: 'Yeastar-PC', ip: '192.168.11.194', os.name: 'Windows 7', os.arch: 'x86', os.version: '6.1', java.version: '1.8.0_121'
Driver info: org.openqa.selenium.chrome.ChromeDriver
Capabilities [{applicationCacheEnabled=false, rotatable=false, mobileEmulationEnabled=false, networkConnectionEnabled=false, chrome={chromedriverVersion=2.33.506120 (e3e53437346286c0bc2d2dc9aa4915ba81d9023f), userDataDir=C:\Users\Yeastar\AppData\Local\Temp\scoped_dir14508_24216}, takesHeapSnapshot=true, pageLoadStrategy=normal, databaseEnabled=false, handlesAlerts=true, hasTouchScreen=false, version=64.0.3282.140, platform=XP, browserConnectionEnabled=false, nativeEvents=true, acceptSslCerts=true, locationContextEnabled=true, webStorageEnabled=true, browserName=chrome, takesScreenshot=true, javascriptEnabled=true, cssSelectorsEnabled=true, setWindowRect=true, unexpectedAlertBehaviour=}]
Session ID: aaed071e2e05285b4d5278e85fdac0d5
	at sun.reflect.GeneratedConstructorAccessor42.newInstance(Unknown Source)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:206)
	at org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:158)
	at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:678)
	at org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:327)
	at org.openqa.selenium.remote.RemoteWebElement.click(RemoteWebElement.java:85)
	at com.codeborne.selenide.commands.Click.click(Click.java:22)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	... 30 more
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementNotFound -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 取消分机1000具有拨打时间特征码的权限]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_recovery4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-04-22T11:57:29Z" finished-at="2018-04-22T11:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_recovery5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="N_recovery5" duration-ms="124611" started-at="2018-04-22T11:57:29Z" finished-at="2018-04-22T11:59:34Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: waitReboot重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_recovery5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T11:59:34Z" finished-at="2018-04-22T11:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition@1bf4b8b]" name="AfterClass" is-config="true" duration-ms="13597" started-at="2018-04-22T11:59:34Z" finished-at="2018-04-22T11:59:47Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：====== TimeCondition ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.TimeCondition -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="BeforeClass" is-config="true" duration-ms="28225" started-at="2018-04-22T02:14:55Z" finished-at="2018-04-22T02:15:23Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  Callback  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="Register" is-config="true" duration-ms="53216" started-at="2018-04-22T02:15:23Z" finished-at="2018-04-22T02:16:16Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A1_Init" duration-ms="22558" started-at="2018-04-22T02:16:16Z" finished-at="2018-04-22T02:16:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:16:39Z" finished-at="2018-04-22T02:16:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_add_trunks()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A2_add_trunks" duration-ms="135655" started-at="2018-04-22T02:16:39Z" finished-at="2018-04-22T02:18:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 创建Callback_SPS，Through：SPS1外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_SIP，Through：SIP1外线，Destination：1100]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_IAX，Through：IAX1外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_SPX，Through：SPX1外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_FXO，Through：FXO7外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_BRI，Through：BRI1外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback_fxs，Through：SPS1外线，Destination：1106]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_add_trunks -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T02:18:54Z" finished-at="2018-04-22T02:18:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="9278" started-at="2018-04-22T02:18:54Z" data-provider="add" finished-at="2018-04-22T02:19:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=, DID1=5503301, Through=Callback from where the call come in, Delay=5, Name=Callback1_Hangup, Des1=h}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback1_Hangup，Destination：]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T02:19:04Z" finished-at="2018-04-22T02:19:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14397" started-at="2018-04-22T02:19:04Z" data-provider="add" finished-at="2018-04-22T02:19:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=1000, DID1=, Through=Callback from where the call come in, Delay=6, Name=Callback2_Extension, Des1=e}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback2_Extension，Destination：1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:19:18Z" finished-at="2018-04-22T02:19:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14575" started-at="2018-04-22T02:19:18Z" data-provider="add" finished-at="2018-04-22T02:19:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=456, Des2=1105, DID1=5503303, Through=Callback from where the call come in, Delay=7, Name=Callback3_Voicemail, Des1=v}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback3_Voicemail，Destination：1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T02:19:33Z" finished-at="2018-04-22T02:19:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14436" started-at="2018-04-22T02:19:33Z" data-provider="add" finished-at="2018-04-22T02:19:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=2, Prepend=123, Des2=IVR1, DID1=5503304, Through=Callback from where the call come in, Delay=8, Name=Callback4_IVR, Des1=i}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback4_IVR，Destination：IVR1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T02:19:47Z" finished-at="2018-04-22T02:19:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14491" started-at="2018-04-22T02:19:47Z" data-provider="add" finished-at="2018-04-22T02:20:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=1, Prepend=, Des2=RingGroup1, DID1=5503305, Through=Callback from where the call come in, Delay=9, Name=Callback5_RingGroup, Des1=r}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback5_RingGroup，Destination：RingGroup1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T02:20:02Z" finished-at="2018-04-22T02:20:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14368" started-at="2018-04-22T02:20:02Z" data-provider="add" finished-at="2018-04-22T02:20:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=Queue1, DID1=5503306, Through=Callback from where the call come in, Delay=10, Name=Callback6_Queue, Des1=q}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback6_Queue，Destination：Queue1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T02:20:16Z" finished-at="2018-04-22T02:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14825" started-at="2018-04-22T02:20:16Z" data-provider="add" finished-at="2018-04-22T02:20:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=4, Prepend=1234567890, Des2=Conference1, DID1=5503307, Through=Callback from where the call come in, Delay=11, Name=Callback7_Conference, Des1=c}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback7_Conference，Destination：Conference1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T02:20:31Z" finished-at="2018-04-22T02:20:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="A3_add_destination" duration-ms="14244" started-at="2018-04-22T02:20:31Z" data-provider="add" finished-at="2018-04-22T02:20:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=DISA1, DID1=5503308, Through=Callback from where the call come in, Delay=12, Name=Callback8_DISA, Des1=d}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Callback：Callback8_DISA，Destination：DISA1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T02:20:45Z" finished-at="2018-04-22T02:20:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_add_InRoute_trunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B1_add_InRoute_trunk" duration-ms="239118" started-at="2018-04-22T02:20:45Z" finished-at="2018-04-22T02:24:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_SPS，DID：3000，Destination：Callback_SPS]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_SIP，DID：6603302，Destination：Callback_SIP]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_IAX，DID：6603303，Destination：Callback_IAX]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_SPX，DID：3100，Destination：Callback_SPX]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_FXO，DID：6603305，Destination：Callback_FXO]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_BRI，DID：6603306，Destination：Callback_BRI]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由：Callback_fxs，DID：6603301，Destination：Callback_fxs]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_add_InRoute_trunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T02:24:44Z" finished-at="2018-04-22T02:24:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31386" started-at="2018-04-22T02:24:44Z" data-provider="add" finished-at="2018-04-22T02:25:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=, DID1=5503301, Through=Callback from where the call come in, Delay=5, Name=Callback1_Hangup, Des1=h}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback1_HangupDID：5503301，Destination：Callback1_Hangup]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:25:16Z" finished-at="2018-04-22T02:25:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31202" started-at="2018-04-22T02:25:16Z" data-provider="add" finished-at="2018-04-22T02:25:47Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=1000, DID1=, Through=Callback from where the call come in, Delay=6, Name=Callback2_Extension, Des1=e}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback2_ExtensionDID：，Destination：Callback2_Extension]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T02:25:47Z" finished-at="2018-04-22T02:25:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31604" started-at="2018-04-22T02:25:47Z" data-provider="add" finished-at="2018-04-22T02:26:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=456, Des2=1105, DID1=5503303, Through=Callback from where the call come in, Delay=7, Name=Callback3_Voicemail, Des1=v}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback3_VoicemailDID：5503303，Destination：Callback3_Voicemail]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T02:26:19Z" finished-at="2018-04-22T02:26:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31340" started-at="2018-04-22T02:26:19Z" data-provider="add" finished-at="2018-04-22T02:26:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=2, Prepend=123, Des2=IVR1, DID1=5503304, Through=Callback from where the call come in, Delay=8, Name=Callback4_IVR, Des1=i}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback4_IVRDID：5503304，Destination：Callback4_IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:26:50Z" finished-at="2018-04-22T02:26:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="32704" started-at="2018-04-22T02:26:50Z" data-provider="add" finished-at="2018-04-22T02:27:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=1, Prepend=, Des2=RingGroup1, DID1=5503305, Through=Callback from where the call come in, Delay=9, Name=Callback5_RingGroup, Des1=r}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback5_RingGroupDID：5503305，Destination：Callback5_RingGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T02:27:23Z" finished-at="2018-04-22T02:27:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31335" started-at="2018-04-22T02:27:23Z" data-provider="add" finished-at="2018-04-22T02:27:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=Queue1, DID1=5503306, Through=Callback from where the call come in, Delay=10, Name=Callback6_Queue, Des1=q}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback6_QueueDID：5503306，Destination：Callback6_Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T02:27:54Z" finished-at="2018-04-22T02:27:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31482" started-at="2018-04-22T02:27:54Z" data-provider="add" finished-at="2018-04-22T02:28:26Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=4, Prepend=1234567890, Des2=Conference1, DID1=5503307, Through=Callback from where the call come in, Delay=11, Name=Callback7_Conference, Des1=c}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback7_ConferenceDID：5503307，Destination：Callback7_Conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T02:28:26Z" finished-at="2018-04-22T02:28:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B2_add_InRoute_destination" duration-ms="31258" started-at="2018-04-22T02:28:26Z" data-provider="add" finished-at="2018-04-22T02:28:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=DISA1, DID1=5503308, Through=Callback from where the call come in, Delay=12, Name=Callback8_DISA, Des1=d}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Callback8_DISADID：5503308，Destination：Callback8_DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:28:57Z" finished-at="2018-04-22T02:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="B3_apply" duration-ms="8118" started-at="2018-04-22T02:28:57Z" finished-at="2018-04-22T02:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T02:29:05Z" finished-at="2018-04-22T02:29:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C1_through_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C1_through_sps" duration-ms="22106" started-at="2018-04-22T02:29:05Z" finished-at="2018-04-22T02:29:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会被挂断 【预期：4 实际：3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会被挂断 【预期：4 实际：3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C1_through_sps(Callback.java:222)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入，预期通过sps回拨，2000分机响铃接听后，分机1000响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会被挂断 【预期：4 实际：3】.jpg" target="_blank">Error: 预期3001会被挂断 【预期：4 实际：3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_through_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T02:29:27Z" finished-at="2018-04-22T02:29:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C2_through_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C2_through_sip" duration-ms="22591" started-at="2018-04-22T02:29:27Z" finished-at="2018-04-22T02:29:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C2_through_sip(Callback.java:237)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打996603302通过sps外线呼入，预期通过sip回拨，3001分机响铃接听后，分机1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_through_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T02:29:50Z" finished-at="2018-04-22T02:29:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C3_through_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C3_through_iax" duration-ms="22665" started-at="2018-04-22T02:29:50Z" finished-at="2018-04-22T02:30:12Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C3_through_iax(Callback.java:254)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打996603303通过sps外线呼入，预期通过iax回拨，3001分机响铃接听后，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期3001会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_through_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T02:30:12Z" finished-at="2018-04-22T02:30:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C4_through_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C4_through_spx" duration-ms="21684" started-at="2018-04-22T02:30:12Z" finished-at="2018-04-22T02:30:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期3001会被挂断 【预期：4 实际：3】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期3001会被挂断 【预期：4 实际：3】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C4_through_spx(Callback.java:270)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，预期通过spx回拨，2000分机响铃接听后，分机1000响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期3001会被挂断 【预期：4 实际：3】.jpg" target="_blank">Error: 预期3001会被挂断 【预期：4 实际：3】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_through_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T02:30:34Z" finished-at="2018-04-22T02:30:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_through_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C5_through_fxo" duration-ms="45626" started-at="2018-04-22T02:30:34Z" finished-at="2018-04-22T02:31:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打996603305通过sps外线呼入，预期通过fxo回拨，2001分机响铃接听，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2001会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2001会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_through_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T02:31:20Z" finished-at="2018-04-22T02:31:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_through_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C6_through_bri" duration-ms="39090" started-at="2018-04-22T02:31:20Z" finished-at="2018-04-22T02:31:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打996603306通过sps外线呼入，预期通过bri回拨，2000分机响铃接听，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_through_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T02:31:59Z" finished-at="2018-04-22T02:31:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C7_through_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C7_through_e1" duration-ms="36862" started-at="2018-04-22T02:31:59Z" finished-at="2018-04-22T02:32:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR源中继检测 【预期：null 实际：SPS1】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR源中继检测 【预期：null 实际：SPS1】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:266)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C7_through_e1(Callback.java:334)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打996603307通过sps外线呼入，预期通过E1回拨，2000分机响铃接听，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR源中继检测 【预期：null 实际：SPS1】.jpg" target="_blank">Error: CDR源中继检测 【预期：null 实际：SPS1】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_through_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="2310" started-at="2018-04-22T02:32:36Z" finished-at="2018-04-22T02:32:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C8_through_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="C8_through_gsm" duration-ms="34862" started-at="2018-04-22T02:32:38Z" finished-at="2018-04-22T02:33:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.C8_through_gsm(Callback.java:354)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打996603308通过sps外线呼入，预期通过GSM回拨，2000分机响铃接听，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：18506938857 [callback18506938857] 实际：callback2000】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_through_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-04-22T02:33:13Z" finished-at="2018-04-22T02:33:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_des_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D1_des_hangup" duration-ms="7167" started-at="2018-04-22T02:33:15Z" finished-at="2018-04-22T02:33:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入，预期通过sps回拨，回拨Destination：Hangup]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_des_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T02:33:22Z" finished-at="2018-04-22T02:33:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_des_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D2_des_extension" duration-ms="37541" started-at="2018-04-22T02:33:22Z" finished-at="2018-04-22T02:34:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期通过sps回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_des_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T02:34:00Z" finished-at="2018-04-22T02:34:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_des_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D3_des_ivr" duration-ms="48590" started-at="2018-04-22T02:34:00Z" finished-at="2018-04-22T02:34:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503304通过sps外线呼入，预期通过sps回拨，回拨Destination：IVR1，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_des_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T02:34:48Z" finished-at="2018-04-22T02:34:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_des_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D4_des_ringgroup" duration-ms="47152" started-at="2018-04-22T02:34:48Z" finished-at="2018-04-22T02:35:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503305通过sps外线呼入，预期通过sps外线回拨，回拨Destination：RingGroup1，成员都响铃，1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_des_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T02:35:35Z" finished-at="2018-04-22T02:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D5_des_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D5_des_queue" duration-ms="42499" started-at="2018-04-22T02:35:35Z" finished-at="2018-04-22T02:36:18Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.D5_des_queue(Callback.java:429)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503306通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Queue1，坐席都响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_des_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="2111" started-at="2018-04-22T02:36:18Z" finished-at="2018-04-22T02:36:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_des_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D6_des_conference" duration-ms="38443" started-at="2018-04-22T02:36:20Z" finished-at="2018-04-22T02:36:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503307通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会延迟响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_des_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:36:59Z" finished-at="2018-04-22T02:36:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_des_disa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D7_des_disa" duration-ms="50201" started-at="2018-04-22T02:36:59Z" finished-at="2018-04-22T02:37:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503308通过sps外线呼入，预期通过sps外线回拨，回拨Destination：DISA1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会延迟响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 转入DISA后，2000发送DTMF：13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期3001会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_des_disa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:37:49Z" finished-at="2018-04-22T02:37:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D8_des_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="D8_des_fxs" duration-ms="22674" started-at="2018-04-22T02:37:49Z" finished-at="2018-04-22T02:38:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期2002会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期2002会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.D8_des_fxs(Callback.java:476)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打996603301通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1106（fxs）--通过pstn线会呼入到2000分机]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2002会被挂断]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期2002会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2002会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_des_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T02:38:11Z" finished-at="2018-04-22T02:38:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E1_sps" duration-ms="36498" started-at="2018-04-22T02:38:11Z" finished-at="2018-04-22T02:38:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打999999通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:38:48Z" finished-at="2018-04-22T02:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E2_spx" duration-ms="36555" started-at="2018-04-22T02:38:48Z" finished-at="2018-04-22T02:39:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打88888通过spx外线呼入，预期通过spx外线回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T02:39:25Z" finished-at="2018-04-22T02:39:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E3_fxo" duration-ms="42436" started-at="2018-04-22T02:39:25Z" finished-at="2018-04-22T02:40:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打2010通过pstn外线呼入，预期通过pstn外线回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[  【执行检查】分机:2000未接通]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T02:40:07Z" finished-at="2018-04-22T02:40:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E4_bri" duration-ms="36645" started-at="2018-04-22T02:40:07Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打66666通过bri外线呼入，预期通过bri外线回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E5_e1" duration-ms="0" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E5_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="E6_gsm" duration-ms="1" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E6_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:40:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="F_delete" duration-ms="52554" started-at="2018-04-22T02:40:44Z" finished-at="2018-04-22T02:41:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Callback7_Conference-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Callback7_Conference-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Callback7_Conference-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Callback7_Conference-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Callback5_RingGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Callback5_RingGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：Callback5_RingGroup-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Callback5_RingGroup-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T02:41:36Z" finished-at="2018-04-22T02:41:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_recovery_callback()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="G1_recovery_callback" duration-ms="39492" started-at="2018-04-22T02:41:36Z" finished-at="2018-04-22T02:42:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_recovery_callback -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T02:42:16Z" finished-at="2018-04-22T02:42:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_recovery_inbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="G2_recovery_inbound" duration-ms="48131" started-at="2018-04-22T02:42:16Z" finished-at="2018-04-22T02:43:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_recovery_inbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T02:43:04Z" finished-at="2018-04-22T02:43:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@32c52b]" name="AfterClass" is-config="true" duration-ms="13854" started-at="2018-04-22T02:43:04Z" finished-at="2018-04-22T02:43:18Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  Callback  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="BeforeClass" is-config="true" duration-ms="28549" started-at="2018-04-22T01:16:04Z" finished-at="2018-04-22T01:16:33Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  PagingGroup & Intercom  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="Register" is-config="true" duration-ms="36865" started-at="2018-04-22T01:16:33Z" finished-at="2018-04-22T01:17:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 注册分机1000、1100、1103、1105、2000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_InitIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="A1_InitIntercom" duration-ms="11377" started-at="2018-04-22T01:17:10Z" finished-at="2018-04-22T01:17:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 设置对讲的特征码为*5]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_InitIntercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T01:17:21Z" finished-at="2018-04-22T01:17:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_InitPaging()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="A2_InitPaging" duration-ms="24974" started-at="2018-04-22T01:17:21Z" finished-at="2018-04-22T01:17:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 初始化广播组设置：删除所有广播组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有广播组]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有广播组]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_InitPaging -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T01:17:46Z" finished-at="2018-04-22T01:17:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_add_Paging6300()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="B1_add_Paging6300" duration-ms="20401" started-at="2018-04-22T01:17:46Z" finished-at="2018-04-22T01:18:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6300--单工、不启用*Answer、成员分机：1100、1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_add_Paging6300 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T01:18:06Z" finished-at="2018-04-22T01:18:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_AutoPag6301()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="B2_add_AutoPag6301" duration-ms="19300" started-at="2018-04-22T01:18:06Z" finished-at="2018-04-22T01:18:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组AutoPag6301--双工、启用*Answer、成员：ExtensionGroup1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_AutoPag6301 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T01:18:26Z" finished-at="2018-04-22T01:18:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_add_NewPage6302()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="B3_add_NewPage6302" duration-ms="21317" started-at="2018-04-22T01:18:26Z" finished-at="2018-04-22T01:18:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组NewPage6302--双工、不启用*Answer、成员分机：1100、1103、1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_add_NewPage6302 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-04-22T01:18:47Z" finished-at="2018-04-22T01:18:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_add_Paging6303()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="B4_add_Paging6303" duration-ms="20271" started-at="2018-04-22T01:18:47Z" finished-at="2018-04-22T01:19:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新建广播组Paging6303--单工、启用*Answer、成员1100、1105]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_add_Paging6303 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:19:07Z" finished-at="2018-04-22T01:19:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="B5_Apply" duration-ms="8111" started-at="2018-04-22T01:19:07Z" finished-at="2018-04-22T01:19:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B5_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T01:19:16Z" finished-at="2018-04-22T01:19:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_callforward()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="C1_callforward" duration-ms="9096" started-at="2018-04-22T01:19:16Z" finished-at="2018-04-22T01:19:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*716300将通话总是转移到广播组6300]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_callforward -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:19:25Z" finished-at="2018-04-22T01:19:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_1way()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="D1_1way" duration-ms="51119" started-at="2018-04-22T01:19:25Z" finished-at="2018-04-22T01:20:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6300--预期分机1100、1105自动应答，AMI不会打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期：AMI不会打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_1way -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T01:20:16Z" finished-at="2018-04-22T01:20:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_2way()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="D2_2way" duration-ms="35197" started-at="2018-04-22T01:20:16Z" finished-at="2018-04-22T01:20:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答，AMI打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期：AMI会打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_2way -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:20:51Z" finished-at="2018-04-22T01:20:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_EnableAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="E1_EnableAnswer" duration-ms="49549" started-at="2018-04-22T01:20:51Z" finished-at="2018-04-22T01:21:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答后，1105按*Answer，1100、1101自动被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105按*Answer--预期1100、1101会挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_EnableAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:21:41Z" finished-at="2018-04-22T01:21:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_DisableAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="E2_DisableAnswer" duration-ms="58340" started-at="2018-04-22T01:21:41Z" finished-at="2018-04-22T01:22:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6302--预期分机1100、1103、1105自动应答，1105按*，分机1100、1103不会被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105按*Answer--预期1100、1103不会挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1103--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_DisableAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:22:39Z" finished-at="2018-04-22T01:22:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F1_followToPaging()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="F1_followToPaging" duration-ms="32005" started-at="2018-04-22T01:22:39Z" finished-at="2018-04-22T01:23:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 1100、1105自动应答失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  1100、1105自动应答失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom.F1_followToPaging(Paging_Intercom.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，总是转移到广播组6300，预期：分机1100、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1100、1105自动应答失败.jpg" target="_blank">Error:  1100、1105自动应答失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_followToPaging -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:23:11Z" finished-at="2018-04-22T01:23:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G1_intercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="G1_intercom" duration-ms="24640" started-at="2018-04-22T01:23:11Z" finished-at="2018-04-22T01:23:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1105预期：自动应答 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1105预期：自动应答 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom.G1_intercom(Paging_Intercom.java:235)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*51105，1105自动应答]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\1105预期：自动应答 【预期：3 实际：4】.jpg" target="_blank">Error: 1105预期：自动应答 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_intercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:23:36Z" finished-at="2018-04-22T01:23:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_EditFeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="G2_EditFeatureCode" duration-ms="17271" started-at="2018-04-22T01:23:36Z" finished-at="2018-04-22T01:23:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑对讲的特征码为*055]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_EditFeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T01:23:53Z" finished-at="2018-04-22T01:23:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_newIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="G3_newIntercom" duration-ms="33683" started-at="2018-04-22T01:23:53Z" finished-at="2018-04-22T01:24:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*0551105，预期1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期：自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_newIntercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:24:27Z" finished-at="2018-04-22T01:24:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="H_delete" duration-ms="60718" started-at="2018-04-22T01:24:27Z" finished-at="2018-04-22T01:25:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：AutoPag6301-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：AutoPag6301-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：AutoPag6301-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：AutoPag6301-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T01:25:27Z" finished-at="2018-04-22T01:25:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="I_Recovery" duration-ms="9085" started-at="2018-04-22T01:25:27Z" finished-at="2018-04-22T01:25:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*071将通话总是转移到广播组6300]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_Recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T01:25:37Z" finished-at="2018-04-22T01:25:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@93d195]" name="AfterClass" is-config="true" duration-ms="13575" started-at="2018-04-22T01:25:37Z" finished-at="2018-04-22T01:25:50Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  PagingGroup & Intercom  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="BeforeClass" is-config="true" duration-ms="27576" started-at="2018-04-22T07:22:18Z" finished-at="2018-04-22T07:22:46Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== OutboundRoutes ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="A_addTrunk" duration-ms="26676" started-at="2018-04-22T07:22:46Z" finished-at="2018-04-22T07:23:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加不可用的sip外线SIP3]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T07:23:13Z" finished-at="2018-04-22T07:23:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="B_addExtensions" duration-ms="37506" started-at="2018-04-22T07:23:13Z" finished-at="2018-04-22T07:23:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T07:23:50Z" finished-at="2018-04-22T07:23:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C_call()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="C_call" duration-ms="36288" started-at="2018-04-22T07:23:50Z" finished-at="2018-04-22T07:24:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000为Talking状态 【预期：3 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000为Talking状态 【预期：3 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:425)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Outbound.A_out1_sip(Outbound.java:52)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.C_call(OutboundRoutes.java:96)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000为Talking状态 【预期：3 实际：4】.jpg" target="_blank">Error: 预期1000为Talking状态 【预期：3 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_call -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2068" started-at="2018-04-22T07:24:26Z" finished-at="2018-04-22T07:24:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_deleteOutBoundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="D_deleteOutBoundRoutes" duration-ms="23086" started-at="2018-04-22T07:24:29Z" finished-at="2018-04-22T07:24:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 勾选全部的呼出路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 确定删除所有呼出路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_deleteOutBoundRoutes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T07:24:52Z" finished-at="2018-04-22T07:24:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E_editOutRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="E_editOutRoute" duration-ms="77892" started-at="2018-04-22T07:24:52Z" finished-at="2018-04-22T07:26:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择多条呼出路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_editOutRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T07:26:10Z" finished-at="2018-04-22T07:26:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_checkMember()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="F_checkMember" duration-ms="11086" started-at="2018-04-22T07:26:10Z" finished-at="2018-04-22T07:26:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1104拨打13001，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1104拨打13001，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_checkMember -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T07:26:21Z" finished-at="2018-04-22T07:26:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G_rrmemory_hunt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="G_rrmemory_hunt" duration-ms="36545" started-at="2018-04-22T07:26:21Z" finished-at="2018-04-22T07:26:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.G_rrmemory_hunt(OutboundRoutes.java:251)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001，第1次预期通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_rrmemory_hunt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2086" started-at="2018-04-22T07:26:57Z" finished-at="2018-04-22T07:26:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_editSecond()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="H_editSecond" duration-ms="35779" started-at="2018-04-22T07:26:59Z" finished-at="2018-04-22T07:27:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择1104+分机组]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute1_sip：选择SPS呼出路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_editSecond -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T07:27:35Z" finished-at="2018-04-22T07:27:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I_checkPatterns()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="I_checkPatterns" duration-ms="65146" started-at="2018-04-22T07:27:35Z" finished-at="2018-04-22T07:28:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.I_checkPatterns(OutboundRoutes.java:443)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1104拨打902000，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打912000，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_checkPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2139" started-at="2018-04-22T07:28:40Z" finished-at="2018-04-22T07:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J_editOutBound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="J_editOutBound" duration-ms="65526" started-at="2018-04-22T07:28:42Z" finished-at="2018-04-22T07:29:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由：删除patterns]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_editOutBound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T07:29:48Z" finished-at="2018-04-22T07:29:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64715" started-at="2018-04-22T07:29:48Z" data-provider="success" finished-at="2018-04-22T07:30:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=x., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2114" started-at="2018-04-22T07:30:53Z" finished-at="2018-04-22T07:30:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64884" started-at="2018-04-22T07:30:55Z" data-provider="success" finished-at="2018-04-22T07:32:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=1123456789, strip=1, patterns=x., prepend=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、1、0]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-04-22T07:32:00Z" finished-at="2018-04-22T07:32:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64718" started-at="2018-04-22T07:32:02Z" data-provider="success" finished-at="2018-04-22T07:33:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=203456789, strip=2, patterns=x., prepend=012}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、2、012]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打203456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2100" started-at="2018-04-22T07:33:07Z" finished-at="2018-04-22T07:33:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64937" started-at="2018-04-22T07:33:09Z" data-provider="success" finished-at="2018-04-22T07:34:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=311456789, strip=3, patterns=x., prepend=0123}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、3、0123]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打311456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2106" started-at="2018-04-22T07:34:14Z" finished-at="2018-04-22T07:34:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64761" started-at="2018-04-22T07:34:16Z" data-provider="success" finished-at="2018-04-22T07:35:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=412356789, strip=4, patterns=x., prepend=01234}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、4、01234]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打412356789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2115" started-at="2018-04-22T07:35:21Z" finished-at="2018-04-22T07:35:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64717" started-at="2018-04-22T07:35:23Z" data-provider="success" finished-at="2018-04-22T07:36:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=5123456789, strip=6, patterns=x., prepend=012345}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、6、012345]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打5123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2097" started-at="2018-04-22T07:36:27Z" finished-at="2018-04-22T07:36:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64747" started-at="2018-04-22T07:36:30Z" data-provider="success" finished-at="2018-04-22T07:37:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=612345789, strip=6, patterns=x., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、6、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打612345789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2127" started-at="2018-04-22T07:37:34Z" finished-at="2018-04-22T07:37:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64852" started-at="2018-04-22T07:37:36Z" data-provider="success" finished-at="2018-04-22T07:38:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=712345689, strip=7, patterns=x., prepend=01234567}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、7、01234567]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打712345689]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2104" started-at="2018-04-22T07:38:41Z" finished-at="2018-04-22T07:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64800" started-at="2018-04-22T07:38:43Z" data-provider="success" finished-at="2018-04-22T07:39:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=812345679, strip=8, patterns=x., prepend=012345678}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、8、012345678]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打812345679]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2098" started-at="2018-04-22T07:39:48Z" finished-at="2018-04-22T07:39:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64858" started-at="2018-04-22T07:39:50Z" data-provider="success" finished-at="2018-04-22T07:40:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=9123456789, strip=10, patterns=x., prepend=0123456789}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：x.、10、0123456789]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打9123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2092" started-at="2018-04-22T07:40:55Z" finished-at="2018-04-22T07:40:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64808" started-at="2018-04-22T07:40:57Z" data-provider="success" finished-at="2018-04-22T07:42:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=10123456789, strip=1, patterns=Z., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打10123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2106" started-at="2018-04-22T07:42:02Z" finished-at="2018-04-22T07:42:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64703" started-at="2018-04-22T07:42:04Z" data-provider="success" finished-at="2018-04-22T07:43:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=10123456789, strip=2, patterns=Z., prepend=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、2、0]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打10123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2109" started-at="2018-04-22T07:43:09Z" finished-at="2018-04-22T07:43:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64591" started-at="2018-04-22T07:43:11Z" data-provider="success" finished-at="2018-04-22T07:44:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=2789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打2789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2132" started-at="2018-04-22T07:44:16Z" finished-at="2018-04-22T07:44:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64922" started-at="2018-04-22T07:44:18Z" data-provider="success" finished-at="2018-04-22T07:45:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=3789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打3789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2120" started-at="2018-04-22T07:45:23Z" finished-at="2018-04-22T07:45:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64596" started-at="2018-04-22T07:45:25Z" data-provider="success" finished-at="2018-04-22T07:46:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=4789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打4789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-04-22T07:46:29Z" finished-at="2018-04-22T07:46:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64892" started-at="2018-04-22T07:46:31Z" data-provider="success" finished-at="2018-04-22T07:47:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=5789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打5789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2121" started-at="2018-04-22T07:47:36Z" finished-at="2018-04-22T07:47:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64753" started-at="2018-04-22T07:47:38Z" data-provider="success" finished-at="2018-04-22T07:48:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=6789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2102" started-at="2018-04-22T07:48:43Z" finished-at="2018-04-22T07:48:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64952" started-at="2018-04-22T07:48:45Z" data-provider="success" finished-at="2018-04-22T07:49:50Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=7789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打7789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2128" started-at="2018-04-22T07:49:50Z" finished-at="2018-04-22T07:49:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64823" started-at="2018-04-22T07:49:52Z" data-provider="success" finished-at="2018-04-22T07:50:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=8789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打8789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2180" started-at="2018-04-22T07:50:57Z" finished-at="2018-04-22T07:50:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64833" started-at="2018-04-22T07:50:59Z" data-provider="success" finished-at="2018-04-22T07:52:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=9789, strip=1, patterns=Z., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打9789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2136" started-at="2018-04-22T07:52:04Z" finished-at="2018-04-22T07:52:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64748" started-at="2018-04-22T07:52:06Z" data-provider="success" finished-at="2018-04-22T07:53:11Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=2789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打2789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2149" started-at="2018-04-22T07:53:11Z" finished-at="2018-04-22T07:53:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64485" started-at="2018-04-22T07:53:13Z" data-provider="success" finished-at="2018-04-22T07:54:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=3789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打3789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2203" started-at="2018-04-22T07:54:18Z" finished-at="2018-04-22T07:54:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64935" started-at="2018-04-22T07:54:20Z" data-provider="success" finished-at="2018-04-22T07:55:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=4789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打4789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2097" started-at="2018-04-22T07:55:25Z" finished-at="2018-04-22T07:55:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64635" started-at="2018-04-22T07:55:27Z" data-provider="success" finished-at="2018-04-22T07:56:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=5789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打5789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2111" started-at="2018-04-22T07:56:32Z" finished-at="2018-04-22T07:56:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64763" started-at="2018-04-22T07:56:34Z" data-provider="success" finished-at="2018-04-22T07:57:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=6789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2103" started-at="2018-04-22T07:57:38Z" finished-at="2018-04-22T07:57:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64829" started-at="2018-04-22T07:57:41Z" data-provider="success" finished-at="2018-04-22T07:58:45Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=7789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打7789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2096" started-at="2018-04-22T07:58:45Z" finished-at="2018-04-22T07:58:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64767" started-at="2018-04-22T07:58:47Z" data-provider="success" finished-at="2018-04-22T07:59:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=8789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打8789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2115" started-at="2018-04-22T07:59:52Z" finished-at="2018-04-22T07:59:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64744" started-at="2018-04-22T07:59:54Z" data-provider="success" finished-at="2018-04-22T08:00:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=9789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打9789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2123" started-at="2018-04-22T08:00:59Z" finished-at="2018-04-22T08:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64849" started-at="2018-04-22T08:01:01Z" data-provider="success" finished-at="2018-04-22T08:02:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=XZN., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：XZN.、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2116" started-at="2018-04-22T08:02:06Z" finished-at="2018-04-22T08:02:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64799" started-at="2018-04-22T08:02:08Z" data-provider="success" finished-at="2018-04-22T08:03:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=0123456789, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：0123456789、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2099" started-at="2018-04-22T08:03:13Z" finished-at="2018-04-22T08:03:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64814" started-at="2018-04-22T08:03:15Z" data-provider="success" finished-at="2018-04-22T08:04:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=00123456789, strip=1, patterns=X0123456789, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：X0123456789、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打00123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2175" started-at="2018-04-22T08:04:20Z" finished-at="2018-04-22T08:04:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64849" started-at="2018-04-22T08:04:22Z" data-provider="success" finished-at="2018-04-22T08:05:27Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=90123456789, strip=1, patterns=9., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：9.、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打90123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2099" started-at="2018-04-22T08:05:27Z" finished-at="2018-04-22T08:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="65042" started-at="2018-04-22T08:05:29Z" data-provider="success" finished-at="2018-04-22T08:06:34Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=012345!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345!、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2117" started-at="2018-04-22T08:06:34Z" finished-at="2018-04-22T08:06:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64870" started-at="2018-04-22T08:06:36Z" data-provider="success" finished-at="2018-04-22T08:07:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=6789, strip=, patterns=6789!, prepend=012345}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：6789!、、012345]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2103" started-at="2018-04-22T08:07:41Z" finished-at="2018-04-22T08:07:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64894" started-at="2018-04-22T08:07:43Z" data-provider="success" finished-at="2018-04-22T08:08:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=10123456789, strip=1, patterns=[12]., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打10123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2131" started-at="2018-04-22T08:08:48Z" finished-at="2018-04-22T08:08:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64757" started-at="2018-04-22T08:08:50Z" data-provider="success" finished-at="2018-04-22T08:09:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=20123456789, strip=1, patterns=[12]., prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打20123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2117" started-at="2018-04-22T08:09:55Z" finished-at="2018-04-22T08:09:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64859" started-at="2018-04-22T08:09:57Z" data-provider="success" finished-at="2018-04-22T08:11:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=10123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打10123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2106" started-at="2018-04-22T08:11:02Z" finished-at="2018-04-22T08:11:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64748" started-at="2018-04-22T08:11:04Z" data-provider="success" finished-at="2018-04-22T08:12:09Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=30123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打30123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2105" started-at="2018-04-22T08:12:09Z" finished-at="2018-04-22T08:12:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64871" started-at="2018-04-22T08:12:11Z" data-provider="success" finished-at="2018-04-22T08:13:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=40123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打40123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2148" started-at="2018-04-22T08:13:16Z" finished-at="2018-04-22T08:13:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64665" started-at="2018-04-22T08:13:18Z" data-provider="success" finished-at="2018-04-22T08:14:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=50123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打50123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2105" started-at="2018-04-22T08:14:23Z" finished-at="2018-04-22T08:14:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64491" started-at="2018-04-22T08:14:25Z" data-provider="success" finished-at="2018-04-22T08:15:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=60123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打60123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2115" started-at="2018-04-22T08:15:29Z" finished-at="2018-04-22T08:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K1_editPatterns" duration-ms="64856" started-at="2018-04-22T08:15:31Z" data-provider="success" finished-at="2018-04-22T08:16:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=123456789123456789123456789123456789123456789123456789123456789, strip=54, patterns=123456789123456789123456789123456789123456789123456789123456789, prepend=0}]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.K1_editPatterns(OutboundRoutes.java:527)
	at sun.reflect.GeneratedMethodAccessor36.invoke(Unknown Source)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：123456789123456789123456789123456789123456789123456789123456789、54、0]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打123456789123456789123456789123456789123456789123456789123456789]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-04-22T08:16:36Z" finished-at="2018-04-22T08:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44500" started-at="2018-04-22T08:16:38Z" data-provider="fail" finished-at="2018-04-22T08:17:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=Z., prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：Z.、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T08:17:23Z" finished-at="2018-04-22T08:17:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44410" started-at="2018-04-22T08:17:23Z" data-provider="fail" finished-at="2018-04-22T08:18:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T08:18:07Z" finished-at="2018-04-22T08:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44313" started-at="2018-04-22T08:18:07Z" data-provider="fail" finished-at="2018-04-22T08:18:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=1789, strip=1, patterns=N., prepend=0123456}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：N.、1、0123456]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T08:18:52Z" finished-at="2018-04-22T08:18:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44302" started-at="2018-04-22T08:18:52Z" data-provider="fail" finished-at="2018-04-22T08:19:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=ZXN., prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：ZXN.、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T08:19:36Z" finished-at="2018-04-22T08:19:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44363" started-at="2018-04-22T08:19:36Z" data-provider="fail" finished-at="2018-04-22T08:20:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=012345678, prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345678、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T08:20:20Z" finished-at="2018-04-22T08:20:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44305" started-at="2018-04-22T08:20:20Z" data-provider="fail" finished-at="2018-04-22T08:21:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=X0123456789, prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：X0123456789、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T08:21:05Z" finished-at="2018-04-22T08:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44332" started-at="2018-04-22T08:21:05Z" data-provider="fail" finished-at="2018-04-22T08:21:49Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=0123456789, strip=, patterns=0123456789., prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：0123456789.、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打0123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T08:21:49Z" finished-at="2018-04-22T08:21:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44319" started-at="2018-04-22T08:21:49Z" data-provider="fail" finished-at="2018-04-22T08:22:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=01234, strip=, patterns=012345!, prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：012345!、、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打01234,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打01234，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T08:22:33Z" finished-at="2018-04-22T08:22:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44329" started-at="2018-04-22T08:22:34Z" data-provider="fail" finished-at="2018-04-22T08:23:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=30123456789, strip=1, patterns=[12]., prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[12].、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打30123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打30123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T08:23:18Z" finished-at="2018-04-22T08:23:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_editPatterns(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="K2_editPatterns" duration-ms="44367" started-at="2018-04-22T08:23:18Z" data-provider="fail" finished-at="2018-04-22T08:24:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{number=20123456789, strip=1, patterns=[13-6]!, prepend=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼出路由的pattern、strip和prepend为：[13-6]!、1、]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打20123456789,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打20123456789，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_editPatterns -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="50" started-at="2018-04-22T08:24:02Z" finished-at="2018-04-22T08:24:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_editPassword()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L1_editPassword" duration-ms="75494" started-at="2018-04-22T08:24:02Z" finished-at="2018-04-22T08:25:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1104]]>
            </line>
            <line>
              <![CDATA[    Pass: 1104分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：PIN List--test1]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_editPassword -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T08:25:18Z" finished-at="2018-04-22T08:25:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L2_checkPassword()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L2_checkPassword" duration-ms="63203" started-at="2018-04-22T08:25:18Z" finished-at="2018-04-22T08:26:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.L2_checkPassword(OutboundRoutes.java:649)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_checkPassword -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2127" started-at="2018-04-22T08:26:21Z" finished-at="2018-04-22T08:26:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L3_editPassword2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L3_editPassword2" duration-ms="34256" started-at="2018-04-22T08:26:23Z" finished-at="2018-04-22T08:26:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：PIN List--test2]]>
            </line>
          </reporter-output>
        </test-method> <!-- L3_editPassword2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T08:26:57Z" finished-at="2018-04-22T08:26:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L4_checkPassword2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L4_checkPassword2" duration-ms="44983" started-at="2018-04-22T08:26:57Z" finished-at="2018-04-22T08:27:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.L4_checkPassword2(OutboundRoutes.java:685)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L4_checkPassword2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2091" started-at="2018-04-22T08:27:42Z" finished-at="2018-04-22T08:27:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L5_editPassword3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L5_editPassword3" duration-ms="29411" started-at="2018-04-22T08:27:45Z" finished-at="2018-04-22T08:28:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin]]>
            </line>
          </reporter-output>
        </test-method> <!-- L5_editPassword3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-04-22T08:28:14Z" finished-at="2018-04-22T08:28:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L6_checkPassword3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L6_checkPassword3" duration-ms="42295" started-at="2018-04-22T08:28:14Z" finished-at="2018-04-22T08:28:56Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.L6_checkPassword3(OutboundRoutes.java:719)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L6_checkPassword3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2107" started-at="2018-04-22T08:28:56Z" finished-at="2018-04-22T08:28:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L7_editPassword4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L7_editPassword4" duration-ms="30129" started-at="2018-04-22T08:28:58Z" finished-at="2018-04-22T08:29:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由Password，Passwoed：Single Pin]]>
            </line>
          </reporter-output>
        </test-method> <!-- L7_editPassword4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-04-22T08:29:29Z" finished-at="2018-04-22T08:29:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L8_checkPassword4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="L8_checkPassword4" duration-ms="57379" started-at="2018-04-22T08:29:29Z" finished-at="2018-04-22T08:30:26Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.L8_checkPassword4(OutboundRoutes.java:753)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打128888通过SPS外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L8_checkPassword4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2098" started-at="2018-04-22T08:30:26Z" finished-at="2018-04-22T08:30:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M1_addTimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="M1_addTimeCondition" duration-ms="32304" started-at="2018-04-22T08:30:28Z" finished-at="2018-04-22T08:31:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 NotInWorkday：00:00-00:01,周日]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_addTimeCondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="123" started-at="2018-04-22T08:31:00Z" finished-at="2018-04-22T08:31:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M2_timeCondition1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="M2_timeCondition1" duration-ms="70999" started-at="2018-04-22T08:31:00Z" finished-at="2018-04-22T08:32:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.M2_timeCondition1(OutboundRoutes.java:808)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由：勾选time condition——验证在time condition时间内能够呼出成功，取消password]]>
            </line>
            <line>
              <![CDATA[  【执行操作】进入TimeCondition——workday_24hour的勾选]]>
            </line>
            <line>
              <![CDATA[  【执行操作】进入Password——None的选择]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1111]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_timeCondition1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2117" started-at="2018-04-22T08:32:11Z" finished-at="2018-04-22T08:32:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M2_timeCondition2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="M2_timeCondition2" duration-ms="47654" started-at="2018-04-22T08:32:14Z" finished-at="2018-04-22T08:33:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由：勾选time condition——验证不在time condition时间内无法成功呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1111，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打1111，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_timeCondition2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="117" started-at="2018-04-22T08:33:01Z" finished-at="2018-04-22T08:33:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_import()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="N_import" duration-ms="18769" started-at="2018-04-22T08:33:01Z" finished-at="2018-04-22T08:33:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- N_import -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T08:33:20Z" finished-at="2018-04-22T08:33:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="O_checkPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="O_checkPriority1" duration-ms="36730" started-at="2018-04-22T08:33:20Z" finished-at="2018-04-22T08:33:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.O_checkPriority1(OutboundRoutes.java:881)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_checkPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2086" started-at="2018-04-22T08:33:57Z" finished-at="2018-04-22T08:33:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="O_checkPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="O_checkPriority2" duration-ms="58247" started-at="2018-04-22T08:33:59Z" finished-at="2018-04-22T08:34:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.O_checkPriority2(OutboundRoutes.java:902)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_checkPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2115" started-at="2018-04-22T08:34:57Z" finished-at="2018-04-22T08:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="O_checkPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="O_checkPriority3" duration-ms="73274" started-at="2018-04-22T08:34:59Z" finished-at="2018-04-22T08:36:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes.O_checkPriority3(OutboundRoutes.java:925)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打903001，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：xll [1104]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_checkPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="2110" started-at="2018-04-22T08:36:13Z" finished-at="2018-04-22T08:36:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P1_deleteOne_no" duration-ms="25275" started-at="2018-04-22T08:36:15Z" finished-at="2018-04-22T08:36:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个呼出路由OutboundRoute1——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P1_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T08:36:40Z" finished-at="2018-04-22T08:36:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P2_deleteOne_yes" duration-ms="27296" started-at="2018-04-22T08:36:40Z" finished-at="2018-04-22T08:37:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个呼出路由OutboundRoute1——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个呼出路由OutboundRoute1——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P2_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T08:37:07Z" finished-at="2018-04-22T08:37:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P3_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P3_deletePart_no" duration-ms="21530" started-at="2018-04-22T08:37:07Z" finished-at="2018-04-22T08:37:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P3_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T08:37:29Z" finished-at="2018-04-22T08:37:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P4_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P4_deletePart_yes" duration-ms="13341" started-at="2018-04-22T08:37:29Z" finished-at="2018-04-22T08:37:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P4_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-04-22T08:37:42Z" finished-at="2018-04-22T08:37:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P5_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P5_deleteAll_no" duration-ms="9855" started-at="2018-04-22T08:37:42Z" finished-at="2018-04-22T08:37:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P5_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T08:37:52Z" finished-at="2018-04-22T08:37:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P6_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P6_deleteAll_yes" duration-ms="13384" started-at="2018-04-22T08:37:52Z" finished-at="2018-04-22T08:38:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P6_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T08:38:06Z" finished-at="2018-04-22T08:38:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P7_deleteTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P7_deleteTime" duration-ms="26085" started-at="2018-04-22T08:38:06Z" finished-at="2018-04-22T08:38:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[  【执行操作】删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P7_deleteTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T08:38:32Z" finished-at="2018-04-22T08:38:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P8_addTime()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P8_addTime" duration-ms="36290" started-at="2018-04-22T08:38:32Z" finished-at="2018-04-22T08:39:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加时间条件Workday:默认的工作时间]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 编辑Workday]]>
            </line>
          </reporter-output>
        </test-method> <!-- P8_addTime -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="108" started-at="2018-04-22T08:39:08Z" finished-at="2018-04-22T08:39:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P9_deleteTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="P9_deleteTrunk" duration-ms="35568" started-at="2018-04-22T08:39:08Z" finished-at="2018-04-22T08:39:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除SIP3——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除SIP3——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- P9_deleteTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T08:39:44Z" finished-at="2018-04-22T08:39:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="Q_recovery1" duration-ms="103425" started-at="2018-04-22T08:39:44Z" finished-at="2018-04-22T08:41:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼出路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由OutRoute1_sip]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加iax的呼出路由OutRoute2_iax]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加sps的呼出路由OutRoute3_sps]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加spx的呼出路由OutRoute4_spx]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加fxo的呼出路由OutRoute5_fxo]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加bri的呼出路由OutRoute6_bri]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-04-22T08:41:27Z" finished-at="2018-04-22T08:41:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="Q_recovery2" duration-ms="40965" started-at="2018-04-22T08:41:27Z" finished-at="2018-04-22T08:42:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除所有DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-04-22T08:42:08Z" finished-at="2018-04-22T08:42:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes@a1a8d5]" name="AfterClass" is-config="true" duration-ms="12926" started-at="2018-04-22T08:42:08Z" finished-at="2018-04-22T08:42:21Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  OutboundRoutes  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.OutboundRoutes -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="BeforeClass" is-config="true" duration-ms="28206" started-at="2018-04-22T04:51:18Z" finished-at="2018-04-22T04:51:46Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== Blacklist/Whitelist ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="A1_addExtensions" duration-ms="59235" started-at="2018-04-22T04:51:46Z" finished-at="2018-04-22T04:52:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1106]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3005]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2006]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T04:52:46Z" finished-at="2018-04-22T04:52:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="A2_init" duration-ms="20205" started-at="2018-04-22T04:52:46Z" finished-at="2018-04-22T04:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A2_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T04:53:06Z" finished-at="2018-04-22T04:53:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin1" duration-ms="16813" started-at="2018-04-22T04:53:06Z" finished-at="2018-04-22T04:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B1_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:53:23Z" finished-at="2018-04-22T04:53:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin2" duration-ms="11089" started-at="2018-04-22T04:53:23Z" finished-at="2018-04-22T04:53:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:53:34Z" finished-at="2018-04-22T04:53:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin3" duration-ms="11082" started-at="2018-04-22T04:53:34Z" finished-at="2018-04-22T04:53:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:53:45Z" finished-at="2018-04-22T04:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin4" duration-ms="28852" started-at="2018-04-22T04:53:45Z" finished-at="2018-04-22T04:54:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:54:14Z" finished-at="2018-04-22T04:54:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B1_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin5" duration-ms="36545" started-at="2018-04-22T04:54:14Z" finished-at="2018-04-22T04:54:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B1_black_admin5(Blacklist_Whitelist.java:192)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2000 [2000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2075" started-at="2018-04-22T04:54:50Z" finished-at="2018-04-22T04:54:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B1_black_admin6" duration-ms="28578" started-at="2018-04-22T04:54:52Z" finished-at="2018-04-22T04:55:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1105呼入到1000——内部分机互打，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T04:55:21Z" finished-at="2018-04-22T04:55:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B2_white_admin1" duration-ms="19882" started-at="2018-04-22T04:55:21Z" finished-at="2018-04-22T04:55:41Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T04:55:41Z" finished-at="2018-04-22T04:55:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B2_white_admin2" duration-ms="28668" started-at="2018-04-22T04:55:41Z" finished-at="2018-04-22T04:56:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】辅助设备分机2001通过SPS呼入到1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:56:10Z" finished-at="2018-04-22T04:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B2_white_admin3" duration-ms="11080" started-at="2018-04-22T04:56:10Z" finished-at="2018-04-22T04:56:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:56:21Z" finished-at="2018-04-22T04:56:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin1" duration-ms="36173" started-at="2018-04-22T04:56:21Z" finished-at="2018-04-22T04:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T04:56:57Z" finished-at="2018-04-22T04:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin2" duration-ms="28612" started-at="2018-04-22T04:56:57Z" finished-at="2018-04-22T04:57:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:57:26Z" finished-at="2018-04-22T04:57:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin3" duration-ms="11082" started-at="2018-04-22T04:57:26Z" finished-at="2018-04-22T04:57:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:57:37Z" finished-at="2018-04-22T04:57:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B3_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin4" duration-ms="36483" started-at="2018-04-22T04:57:37Z" finished-at="2018-04-22T04:58:13Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B3_black_admin4(Blacklist_Whitelist.java:309)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2088" started-at="2018-04-22T04:58:13Z" finished-at="2018-04-22T04:58:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin5" duration-ms="11085" started-at="2018-04-22T04:58:15Z" finished-at="2018-04-22T04:58:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:58:26Z" finished-at="2018-04-22T04:58:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin6" duration-ms="11082" started-at="2018-04-22T04:58:26Z" finished-at="2018-04-22T04:58:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打30123通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打30123,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:58:37Z" finished-at="2018-04-22T04:58:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B3_black_admin7" duration-ms="11082" started-at="2018-04-22T04:58:37Z" finished-at="2018-04-22T04:58:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1105——内部分机互打，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打1105,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:58:49Z" finished-at="2018-04-22T04:58:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B4_white_admin1" duration-ms="22061" started-at="2018-04-22T04:58:49Z" finished-at="2018-04-22T04:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B4_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T04:59:11Z" finished-at="2018-04-22T04:59:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B4_white_admin2" duration-ms="28670" started-at="2018-04-22T04:59:11Z" finished-at="2018-04-22T04:59:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:59:39Z" finished-at="2018-04-22T04:59:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B4_white_admin4" duration-ms="31703" started-at="2018-04-22T04:59:39Z" finished-at="2018-04-22T05:00:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打1105——内部分机互打，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:00:11Z" finished-at="2018-04-22T05:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin1" duration-ms="38405" started-at="2018-04-22T05:00:11Z" finished-at="2018-04-22T05:00:49Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:00:49Z" finished-at="2018-04-22T05:00:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin2" duration-ms="11086" started-at="2018-04-22T05:00:49Z" finished-at="2018-04-22T05:01:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T05:01:01Z" finished-at="2018-04-22T05:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin3" duration-ms="11086" started-at="2018-04-22T05:01:01Z" finished-at="2018-04-22T05:01:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:01:12Z" finished-at="2018-04-22T05:01:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin4" duration-ms="28883" started-at="2018-04-22T05:01:12Z" finished-at="2018-04-22T05:01:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:01:41Z" finished-at="2018-04-22T05:01:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B5_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin5" duration-ms="51885" started-at="2018-04-22T05:01:41Z" finished-at="2018-04-22T05:02:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B5_black_admin5(Blacklist_Whitelist.java:503)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打13004通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3004状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1101 [1101]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2098" started-at="2018-04-22T05:02:32Z" finished-at="2018-04-22T05:02:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B5_black_admin6" duration-ms="28681" started-at="2018-04-22T05:02:35Z" finished-at="2018-04-22T05:03:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T05:03:03Z" finished-at="2018-04-22T05:03:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B6_white_admin1" duration-ms="19731" started-at="2018-04-22T05:03:03Z" finished-at="2018-04-22T05:03:23Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:03:23Z" finished-at="2018-04-22T05:03:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B6_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B6_white_admin2" duration-ms="36430" started-at="2018-04-22T05:03:23Z" finished-at="2018-04-22T05:03:59Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B6_white_admin2(Blacklist_Whitelist.java:536)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2108" started-at="2018-04-22T05:03:59Z" finished-at="2018-04-22T05:04:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B6_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B6_white_admin3" duration-ms="39563" started-at="2018-04-22T05:04:02Z" finished-at="2018-04-22T05:04:41Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B6_white_admin3(Blacklist_Whitelist.java:549)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3001 [3001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2093" started-at="2018-04-22T05:04:41Z" finished-at="2018-04-22T05:04:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B7_black_admin1" duration-ms="37628" started-at="2018-04-22T05:04:43Z" finished-at="2018-04-22T05:05:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:05:21Z" finished-at="2018-04-22T05:05:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B7_black_admin2" duration-ms="11088" started-at="2018-04-22T05:05:21Z" finished-at="2018-04-22T05:05:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1105拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:05:32Z" finished-at="2018-04-22T05:05:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B7_black_admin3" duration-ms="11082" started-at="2018-04-22T05:05:32Z" finished-at="2018-04-22T05:05:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打33004通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打33004,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:05:43Z" finished-at="2018-04-22T05:05:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B7_black_admin4" duration-ms="28780" started-at="2018-04-22T05:05:43Z" finished-at="2018-04-22T05:06:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3004拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:06:12Z" finished-at="2018-04-22T05:06:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B8_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B8_white_admin1" duration-ms="20025" started-at="2018-04-22T05:06:12Z" finished-at="2018-04-22T05:06:32Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:06:32Z" finished-at="2018-04-22T05:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B8_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B8_white_admin2" duration-ms="21527" started-at="2018-04-22T05:06:32Z" finished-at="2018-04-22T05:06:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.B8_white_admin2(Blacklist_Whitelist.java:629)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打33004通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：3004 [3004]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2089" started-at="2018-04-22T05:06:53Z" finished-at="2018-04-22T05:06:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B8_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="B8_white_admin3" duration-ms="28508" started-at="2018-04-22T05:06:55Z" finished-at="2018-04-22T05:07:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1105拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:07:24Z" finished-at="2018-04-22T05:07:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin1" duration-ms="38612" started-at="2018-04-22T05:07:24Z" finished-at="2018-04-22T05:08:03Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:08:03Z" finished-at="2018-04-22T05:08:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin2" duration-ms="11091" started-at="2018-04-22T05:08:03Z" finished-at="2018-04-22T05:08:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:08:14Z" finished-at="2018-04-22T05:08:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin3" duration-ms="11088" started-at="2018-04-22T05:08:14Z" finished-at="2018-04-22T05:08:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:08:25Z" finished-at="2018-04-22T05:08:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin4" duration-ms="11100" started-at="2018-04-22T05:08:25Z" finished-at="2018-04-22T05:08:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:08:36Z" finished-at="2018-04-22T05:08:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin5" duration-ms="45569" started-at="2018-04-22T05:08:36Z" finished-at="2018-04-22T05:09:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1103拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T05:09:22Z" finished-at="2018-04-22T05:09:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin6" duration-ms="28843" started-at="2018-04-22T05:09:22Z" finished-at="2018-04-22T05:09:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:09:50Z" finished-at="2018-04-22T05:09:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C1_black_admin7" duration-ms="11085" started-at="2018-04-22T05:09:50Z" finished-at="2018-04-22T05:10:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打1105——内部分机互打，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打1105,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:10:01Z" finished-at="2018-04-22T05:10:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C2_white_admin1" duration-ms="19791" started-at="2018-04-22T05:10:01Z" finished-at="2018-04-22T05:10:21Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:10:21Z" finished-at="2018-04-22T05:10:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C2_white_admin2" duration-ms="11090" started-at="2018-04-22T05:10:21Z" finished-at="2018-04-22T05:10:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:10:32Z" finished-at="2018-04-22T05:10:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C2_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C2_white_admin3" duration-ms="36409" started-at="2018-04-22T05:10:32Z" finished-at="2018-04-22T05:11:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C2_white_admin3(Blacklist_Whitelist.java:788)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1102 [1102]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2077" started-at="2018-04-22T05:11:09Z" finished-at="2018-04-22T05:11:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C2_white_admin4" duration-ms="45786" started-at="2018-04-22T05:11:11Z" finished-at="2018-04-22T05:11:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:11:57Z" finished-at="2018-04-22T05:11:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C2_white_admin5" duration-ms="28722" started-at="2018-04-22T05:11:57Z" finished-at="2018-04-22T05:12:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打1105——内部分机互打，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:12:25Z" finished-at="2018-04-22T05:12:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C3_black_admin1" duration-ms="40110" started-at="2018-04-22T05:12:25Z" finished-at="2018-04-22T05:13:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:13:06Z" finished-at="2018-04-22T05:13:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C3_black_admin2" duration-ms="45696" started-at="2018-04-22T05:13:06Z" finished-at="2018-04-22T05:13:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1102拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:13:51Z" finished-at="2018-04-22T05:13:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C3_black_admin3" duration-ms="11085" started-at="2018-04-22T05:13:51Z" finished-at="2018-04-22T05:14:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32002,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:14:02Z" finished-at="2018-04-22T05:14:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C3_black_admin4" duration-ms="11087" started-at="2018-04-22T05:14:02Z" finished-at="2018-04-22T05:14:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:14:13Z" finished-at="2018-04-22T05:14:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C3_black_admin5" duration-ms="28744" started-at="2018-04-22T05:14:13Z" finished-at="2018-04-22T05:14:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:14:42Z" finished-at="2018-04-22T05:14:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C4_white_admin1" duration-ms="19715" started-at="2018-04-22T05:14:42Z" finished-at="2018-04-22T05:15:02Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:15:02Z" finished-at="2018-04-22T05:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C4_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C4_white_admin2" duration-ms="36340" started-at="2018-04-22T05:15:02Z" finished-at="2018-04-22T05:15:38Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C4_white_admin2(Blacklist_Whitelist.java:915)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2002状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：2002 [2002]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2101" started-at="2018-04-22T05:15:38Z" finished-at="2018-04-22T05:15:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C4_white_admin3" duration-ms="11084" started-at="2018-04-22T05:15:40Z" finished-at="2018-04-22T05:15:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:15:51Z" finished-at="2018-04-22T05:15:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C5_black_admin1" duration-ms="35099" started-at="2018-04-22T05:15:52Z" finished-at="2018-04-22T05:16:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T05:16:27Z" finished-at="2018-04-22T05:16:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C5_black_admin2" duration-ms="11085" started-at="2018-04-22T05:16:27Z" finished-at="2018-04-22T05:16:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:16:38Z" finished-at="2018-04-22T05:16:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C5_black_admin3" duration-ms="11088" started-at="2018-04-22T05:16:38Z" finished-at="2018-04-22T05:16:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打13004通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打13004,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:16:49Z" finished-at="2018-04-22T05:16:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C5_black_admin5" duration-ms="11088" started-at="2018-04-22T05:16:49Z" finished-at="2018-04-22T05:17:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:17:00Z" finished-at="2018-04-22T05:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C5_black_admin6" duration-ms="11083" started-at="2018-04-22T05:17:00Z" finished-at="2018-04-22T05:17:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3004拨打3000通过sip外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 3004拨打3000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:17:11Z" finished-at="2018-04-22T05:17:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C6_white_admin1" duration-ms="21860" started-at="2018-04-22T05:17:11Z" finished-at="2018-04-22T05:17:33Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:17:33Z" finished-at="2018-04-22T05:17:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C6_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C6_white_admin2" duration-ms="38033" started-at="2018-04-22T05:17:33Z" finished-at="2018-04-22T05:18:11Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1000 [1000] 实际：1000】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1000 [1000] 实际：1000】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C6_white_admin2(Blacklist_Whitelist.java:1050)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [1000] 实际：1000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [1000] 实际：1000】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-04-22T05:18:11Z" finished-at="2018-04-22T05:18:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C6_white_admin3" duration-ms="28899" started-at="2018-04-22T05:18:13Z" finished-at="2018-04-22T05:18:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打33004通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:18:42Z" finished-at="2018-04-22T05:18:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C7_black_admin1" duration-ms="34910" started-at="2018-04-22T05:18:42Z" finished-at="2018-04-22T05:19:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:19:17Z" finished-at="2018-04-22T05:19:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C7_black_admin2" duration-ms="28985" started-at="2018-04-22T05:19:17Z" finished-at="2018-04-22T05:19:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打3123通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:19:46Z" finished-at="2018-04-22T05:19:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C7_black_admin3" duration-ms="11086" started-at="2018-04-22T05:19:46Z" finished-at="2018-04-22T05:19:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打32234,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:19:57Z" finished-at="2018-04-22T05:19:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C7_black_admin4" duration-ms="11085" started-at="2018-04-22T05:19:57Z" finished-at="2018-04-22T05:20:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打312345通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1101拨打312345,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T05:20:08Z" finished-at="2018-04-22T05:20:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C7_black_admin5" duration-ms="11086" started-at="2018-04-22T05:20:08Z" finished-at="2018-04-22T05:20:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991234通过sip外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:20:19Z" finished-at="2018-04-22T05:20:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin1" duration-ms="17280" started-at="2018-04-22T05:20:19Z" finished-at="2018-04-22T05:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:20:36Z" finished-at="2018-04-22T05:20:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin2" duration-ms="28693" started-at="2018-04-22T05:20:36Z" finished-at="2018-04-22T05:21:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:21:05Z" finished-at="2018-04-22T05:21:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin3" duration-ms="28702" started-at="2018-04-22T05:21:05Z" finished-at="2018-04-22T05:21:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:21:34Z" finished-at="2018-04-22T05:21:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin4" duration-ms="26944" started-at="2018-04-22T05:21:34Z" finished-at="2018-04-22T05:22:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改白名单——whitelist]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:22:01Z" finished-at="2018-04-22T05:22:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin5" duration-ms="11083" started-at="2018-04-22T05:22:01Z" finished-at="2018-04-22T05:22:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="74" started-at="2018-04-22T05:22:12Z" finished-at="2018-04-22T05:22:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C8_white_admin6" duration-ms="28802" started-at="2018-04-22T05:22:12Z" finished-at="2018-04-22T05:22:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:22:41Z" finished-at="2018-04-22T05:22:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C9_EmergencyNumber1" duration-ms="26752" started-at="2018-04-22T05:22:41Z" finished-at="2018-04-22T05:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:23:08Z" finished-at="2018-04-22T05:23:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C9_EmergencyNumber2" duration-ms="21254" started-at="2018-04-22T05:23:08Z" finished-at="2018-04-22T05:23:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 新增紧急号码：3001，trunk选择SPS]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T05:23:29Z" finished-at="2018-04-22T05:23:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C9_EmergencyNumber3" duration-ms="28493" started-at="2018-04-22T05:23:29Z" finished-at="2018-04-22T05:23:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1101拨打3001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T05:23:57Z" finished-at="2018-04-22T05:23:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C9_EmergencyNumber4" duration-ms="9760" started-at="2018-04-22T05:23:57Z" finished-at="2018-04-22T05:24:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选紧急号码-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:24:07Z" finished-at="2018-04-22T05:24:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="C9_EmergencyNumber5" duration-ms="29373" started-at="2018-04-22T05:24:07Z" finished-at="2018-04-22T05:24:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T05:24:37Z" finished-at="2018-04-22T05:24:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D1_black_me1" duration-ms="40891" started-at="2018-04-22T05:24:37Z" finished-at="2018-04-22T05:25:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D1_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T05:25:17Z" finished-at="2018-04-22T05:25:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D1_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D1_black_me2" duration-ms="28976" started-at="2018-04-22T05:25:18Z" finished-at="2018-04-22T05:25:46Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 1100拨打32001,预期呼出成功,实际呼出失败]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  1100拨打32001,预期呼出成功,实际呼出失败
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D1_black_me2(Blacklist_Whitelist.java:1344)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001通过sps外线呼出,预期呼出成功]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打32001,预期呼出成功,实际呼出失败]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1100拨打32001,预期呼出成功,实际呼出失败.jpg" target="_blank">Error:  1100拨打32001,预期呼出成功,实际呼出失败</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:25:46Z" finished-at="2018-04-22T05:25:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D1_black_me3" duration-ms="11083" started-at="2018-04-22T05:25:46Z" finished-at="2018-04-22T05:25:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:25:58Z" finished-at="2018-04-22T05:25:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D1_black_me4" duration-ms="21611" started-at="2018-04-22T05:25:58Z" finished-at="2018-04-22T05:26:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:26:19Z" finished-at="2018-04-22T05:26:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D2_white_me1" duration-ms="14327" started-at="2018-04-22T05:26:19Z" finished-at="2018-04-22T05:26:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D2_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:26:34Z" finished-at="2018-04-22T05:26:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D2_white_me2" duration-ms="34538" started-at="2018-04-22T05:26:34Z" finished-at="2018-04-22T05:27:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:98)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:91)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D2_white_me2(Blacklist_Whitelist.java:1393)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:27:08Z" finished-at="2018-04-22T05:27:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D3_black_me1" duration-ms="32167" started-at="2018-04-22T05:27:08Z" finished-at="2018-04-22T05:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D3_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T05:27:40Z" finished-at="2018-04-22T05:27:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D3_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D3_black_me2" duration-ms="34668" started-at="2018-04-22T05:27:40Z" finished-at="2018-04-22T05:28:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:98)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:91)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D3_black_me2(Blacklist_Whitelist.java:1430)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:28:15Z" finished-at="2018-04-22T05:28:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D3_black_me3" duration-ms="17085" started-at="2018-04-22T05:28:15Z" finished-at="2018-04-22T05:28:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:28:32Z" finished-at="2018-04-22T05:28:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D4_white_me1" duration-ms="14320" started-at="2018-04-22T05:28:32Z" finished-at="2018-04-22T05:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D4_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:28:46Z" finished-at="2018-04-22T05:28:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D4_white_me2" duration-ms="21451" started-at="2018-04-22T05:28:46Z" finished-at="2018-04-22T05:29:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:29:08Z" finished-at="2018-04-22T05:29:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D4_white_me3" duration-ms="27115" started-at="2018-04-22T05:29:08Z" finished-at="2018-04-22T05:29:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改白名单——white_me]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:29:35Z" finished-at="2018-04-22T05:29:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D4_white_me4" duration-ms="21490" started-at="2018-04-22T05:29:35Z" finished-at="2018-04-22T05:29:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:29:56Z" finished-at="2018-04-22T05:29:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D5_black_me1" duration-ms="39412" started-at="2018-04-22T05:29:57Z" finished-at="2018-04-22T05:30:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改黑名单——black_me]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:30:36Z" finished-at="2018-04-22T05:30:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D5_black_me2" duration-ms="11086" started-at="2018-04-22T05:30:36Z" finished-at="2018-04-22T05:30:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:30:47Z" finished-at="2018-04-22T05:30:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D5_black_me3" duration-ms="17082" started-at="2018-04-22T05:30:47Z" finished-at="2018-04-22T05:31:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:31:04Z" finished-at="2018-04-22T05:31:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D5_black_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D5_black_me4" duration-ms="34619" started-at="2018-04-22T05:31:04Z" finished-at="2018-04-22T05:31:39Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:98)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:91)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D5_black_me4(Blacklist_Whitelist.java:1563)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打33002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T05:31:39Z" finished-at="2018-04-22T05:31:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D5_black_me5" duration-ms="21384" started-at="2018-04-22T05:31:39Z" finished-at="2018-04-22T05:32:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T05:32:00Z" finished-at="2018-04-22T05:32:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me1" duration-ms="14446" started-at="2018-04-22T05:32:00Z" finished-at="2018-04-22T05:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D6_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:32:15Z" finished-at="2018-04-22T05:32:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D6_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me2" duration-ms="34512" started-at="2018-04-22T05:32:15Z" finished-at="2018-04-22T05:32:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:98)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:91)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D6_white_me2(Blacklist_Whitelist.java:1596)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2002 [2002]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:32:49Z" finished-at="2018-04-22T05:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me3" duration-ms="17090" started-at="2018-04-22T05:32:49Z" finished-at="2018-04-22T05:33:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T05:33:06Z" finished-at="2018-04-22T05:33:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me4" duration-ms="27078" started-at="2018-04-22T05:33:06Z" finished-at="2018-04-22T05:33:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改me白名单——white_me]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T05:33:33Z" finished-at="2018-04-22T05:33:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me5" duration-ms="21430" started-at="2018-04-22T05:33:33Z" finished-at="2018-04-22T05:33:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T05:33:55Z" finished-at="2018-04-22T05:33:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me6" duration-ms="11084" started-at="2018-04-22T05:33:55Z" finished-at="2018-04-22T05:34:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:34:06Z" finished-at="2018-04-22T05:34:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me7" duration-ms="27167" started-at="2018-04-22T05:34:06Z" finished-at="2018-04-22T05:34:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改me白名单——white_me]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T05:34:33Z" finished-at="2018-04-22T05:34:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D6_white_me8()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me8" duration-ms="34657" started-at="2018-04-22T05:34:33Z" finished-at="2018-04-22T05:35:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:98)
	at com.yeastar.swebtest.driver.YSMethod.YS_Me.checkCDR(YS_Me.java:91)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.D6_white_me8(Blacklist_Whitelist.java:1680)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1000 [1000] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me8 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T05:35:08Z" finished-at="2018-04-22T05:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me9()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="D6_white_me9" duration-ms="21390" started-at="2018-04-22T05:35:08Z" finished-at="2018-04-22T05:35:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me9 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T05:35:29Z" finished-at="2018-04-22T05:35:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@cd072c]" name="AfterClass" is-config="true" duration-ms="13734" started-at="2018-04-22T05:35:29Z" finished-at="2018-04-22T05:35:43Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：====== Blacklist/Whitelist ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="BeforeClass" is-config="true" duration-ms="27984" started-at="2018-04-22T04:01:15Z" finished-at="2018-04-22T04:01:43Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== SpeedDial ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="A_addExtension" duration-ms="28658" started-at="2018-04-22T04:01:43Z" finished-at="2018-04-22T04:02:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:02:12Z" finished-at="2018-04-22T04:02:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="B1_addSpeedDial" duration-ms="35436" started-at="2018-04-22T04:02:12Z" finished-at="2018-04-22T04:02:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加速拨码，speedDialCode=1，phoneNumber=1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addSpeedDial -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:02:47Z" finished-at="2018-04-22T04:02:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="B2_checkSpeedDial" duration-ms="28859" started-at="2018-04-22T04:02:47Z" finished-at="2018-04-22T04:03:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*991，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkSpeedDial -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:03:16Z" finished-at="2018-04-22T04:03:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_editSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="B3_editSpeedDial" duration-ms="20711" started-at="2018-04-22T04:03:16Z" finished-at="2018-04-22T04:03:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 修改速拨码，speedDialCode=2，phoneNumber=1101]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_editSpeedDial -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:03:37Z" finished-at="2018-04-22T04:03:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_checkSpeedDial1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="B4_checkSpeedDial1" duration-ms="11103" started-at="2018-04-22T04:03:37Z" finished-at="2018-04-22T04:03:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*991，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*991，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_checkSpeedDial1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:03:48Z" finished-at="2018-04-22T04:03:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_checkSpeedDial2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="B4_checkSpeedDial2" duration-ms="28863" started-at="2018-04-22T04:03:48Z" finished-at="2018-04-22T04:04:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*992，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_checkSpeedDial2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:04:17Z" finished-at="2018-04-22T04:04:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_editPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C1_editPrefix" duration-ms="8954" started-at="2018-04-22T04:04:17Z" finished-at="2018-04-22T04:04:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 修改speedDialPrefix为*999]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_editPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:04:26Z" finished-at="2018-04-22T04:04:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPrefix1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C2_checkPrefix1" duration-ms="11083" started-at="2018-04-22T04:04:26Z" finished-at="2018-04-22T04:04:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*992，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*992，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPrefix1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:04:37Z" finished-at="2018-04-22T04:04:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPrefix2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C2_checkPrefix2" duration-ms="11079" started-at="2018-04-22T04:04:37Z" finished-at="2018-04-22T04:04:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*99992，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*99992，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPrefix2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:04:48Z" finished-at="2018-04-22T04:04:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPrefix3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C2_checkPrefix3" duration-ms="28690" started-at="2018-04-22T04:04:48Z" finished-at="2018-04-22T04:05:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打*9992，预期呼出成功，分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPrefix3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:05:17Z" finished-at="2018-04-22T04:05:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_editPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C3_editPrefix" duration-ms="8896" started-at="2018-04-22T04:05:17Z" finished-at="2018-04-22T04:05:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改speedDialPrefix为*******]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_editPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:05:26Z" finished-at="2018-04-22T04:05:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_checkPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C4_checkPrefix" duration-ms="28682" started-at="2018-04-22T04:05:26Z" finished-at="2018-04-22T04:05:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机1000拨打*******2，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_checkPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:05:54Z" finished-at="2018-04-22T04:05:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_editPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C5_editPrefix" duration-ms="8741" started-at="2018-04-22T04:05:54Z" finished-at="2018-04-22T04:06:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改speedDialPrefix为0987654]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_editPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:06:03Z" finished-at="2018-04-22T04:06:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_checkPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C6_checkPrefix" duration-ms="28712" started-at="2018-04-22T04:06:03Z" finished-at="2018-04-22T04:06:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机1000拨打09876542，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_checkPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T04:06:32Z" finished-at="2018-04-22T04:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_editPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C7_editPrefix" duration-ms="8942" started-at="2018-04-22T04:06:32Z" finished-at="2018-04-22T04:06:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改speedDialPrefix为*123456]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_editPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:06:41Z" finished-at="2018-04-22T04:06:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_checkPrefix()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="C8_checkPrefix" duration-ms="28701" started-at="2018-04-22T04:06:41Z" finished-at="2018-04-22T04:07:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机1000拨打*1234562，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_checkPrefix -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:07:09Z" finished-at="2018-04-22T04:07:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_import()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="D1_import" duration-ms="22758" started-at="2018-04-22T04:07:09Z" finished-at="2018-04-22T04:07:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导入speedDial]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_import -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T04:07:32Z" finished-at="2018-04-22T04:07:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_add_outRouteDial()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="D2_add_outRouteDial" duration-ms="71158" started-at="2018-04-22T04:07:32Z" finished-at="2018-04-22T04:08:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加外线速拨码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Code：0000000；Number：23001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Code：*2；Number：42000]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Code：0；Number：62000]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Code：*******；Number：52000]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_add_outRouteDial -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:08:43Z" finished-at="2018-04-22T04:08:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_add_incorrect()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="D3_add_incorrect" duration-ms="25917" started-at="2018-04-22T04:08:43Z" finished-at="2018-04-22T04:09:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加一个SPS呼出路由前缀不对的速拨码,Code:111,Number:932000]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_code]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_add_incorrect -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T04:09:09Z" finished-at="2018-04-22T04:09:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_checkSIP()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E1_checkSIP" duration-ms="28648" started-at="2018-04-22T04:09:09Z" finished-at="2018-04-22T04:09:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证SIP外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_checkSIP -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T04:09:38Z" finished-at="2018-04-22T04:09:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_checkSPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E2_checkSPS" duration-ms="28848" started-at="2018-04-22T04:09:38Z" finished-at="2018-04-22T04:10:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证SPS外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkSPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:10:07Z" finished-at="2018-04-22T04:10:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T04:10:07Z" finished-at="2018-04-22T04:10:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_checkAccount()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E3_checkAccount" duration-ms="0" started-at="2018-04-22T04:10:07Z" finished-at="2018-04-22T04:10:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证ACCOUNT外线速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_checkAccount -->
        <test-method status="PASS" signature="E4_checkIAX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E4_checkIAX" duration-ms="28845" started-at="2018-04-22T04:10:07Z" finished-at="2018-04-22T04:10:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证IAX外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_checkIAX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T04:10:36Z" finished-at="2018-04-22T04:10:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E5_checkSPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E5_checkSPX" duration-ms="38440" started-at="2018-04-22T04:10:36Z" finished-at="2018-04-22T04:11:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：42000 实际：23001】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：42000 实际：23001】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial.E5_checkSPX(SpeedDial.java:368)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证SPX外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：42000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：42000 实际：23001】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_checkSPX -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="2083" started-at="2018-04-22T04:11:14Z" finished-at="2018-04-22T04:11:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E6_checkBRI()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E6_checkBRI" duration-ms="37979" started-at="2018-04-22T04:11:16Z" finished-at="2018-04-22T04:11:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：62000 实际：23001】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：62000 实际：23001】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial.E6_checkBRI(SpeedDial.java:385)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证BRI外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：62000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：62000 实际：23001】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_checkBRI -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="2099" started-at="2018-04-22T04:11:54Z" finished-at="2018-04-22T04:11:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E7_checkPSTN()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E7_checkPSTN" duration-ms="38140" started-at="2018-04-22T04:11:56Z" finished-at="2018-04-22T04:12:34Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：52000 实际：23001】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：52000 实际：23001】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:263)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:252)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial.E7_checkPSTN(SpeedDial.java:403)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证PSTN外线速拨码]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：52000 实际：23001】.jpg" target="_blank">Error: CDR被叫方检测 【预期：52000 实际：23001】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_checkPSTN -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="2132" started-at="2018-04-22T04:12:34Z" finished-at="2018-04-22T04:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E8_checkE1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E8_checkE1" duration-ms="0" started-at="2018-04-22T04:12:37Z" finished-at="2018-04-22T04:12:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证E1外线速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- E8_checkE1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:12:37Z" finished-at="2018-04-22T04:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E9_checkGSM()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="E9_checkGSM" duration-ms="0" started-at="2018-04-22T04:12:37Z" finished-at="2018-04-22T04:12:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证GSM外线速拨码]]>
            </line>
          </reporter-output>
        </test-method> <!-- E9_checkGSM -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:12:37Z" finished-at="2018-04-22T04:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_checkIncorrect()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="F_checkIncorrect" duration-ms="14084" started-at="2018-04-22T04:12:37Z" finished-at="2018-04-22T04:12:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证不正确的呼出前缀SPS外线速拨码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*12345#111，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_checkIncorrect -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:12:51Z" finished-at="2018-04-22T04:12:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_editOutRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="G1_editOutRoute" duration-ms="34824" started-at="2018-04-22T04:12:51Z" finished-at="2018-04-22T04:13:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps,分机不选择1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_editOutRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-04-22T04:13:26Z" finished-at="2018-04-22T04:13:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_checkSPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="G2_checkSPS" duration-ms="14091" started-at="2018-04-22T04:13:26Z" finished-at="2018-04-22T04:13:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证分机1000没有SPS呼出权限时，是否可成功呼出]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打*12345#890*#，预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_checkSPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:13:40Z" finished-at="2018-04-22T04:13:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_checkSPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="G3_checkSPS" duration-ms="28904" started-at="2018-04-22T04:13:40Z" finished-at="2018-04-22T04:14:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】验证有SPS呼出权限时，是否可成功呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_checkSPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T04:14:09Z" finished-at="2018-04-22T04:14:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H1_deleteOne_no" duration-ms="17115" started-at="2018-04-22T04:14:09Z" finished-at="2018-04-22T04:14:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个SpeedDial——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:14:26Z" finished-at="2018-04-22T04:14:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H2_deleteOne_yes" duration-ms="24863" started-at="2018-04-22T04:14:26Z" finished-at="2018-04-22T04:14:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除PIN——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T04:14:51Z" finished-at="2018-04-22T04:14:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H3_deletePart_no" duration-ms="14433" started-at="2018-04-22T04:14:51Z" finished-at="2018-04-22T04:15:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T04:15:05Z" finished-at="2018-04-22T04:15:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H4_deletePart_yes" duration-ms="14325" started-at="2018-04-22T04:15:05Z" finished-at="2018-04-22T04:15:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H4_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:15:19Z" finished-at="2018-04-22T04:15:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H5_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H5_deleteAll_no" duration-ms="9783" started-at="2018-04-22T04:15:19Z" finished-at="2018-04-22T04:15:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H5_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T04:15:29Z" finished-at="2018-04-22T04:15:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H6_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="H6_deleteAll_yes" duration-ms="13410" started-at="2018-04-22T04:15:29Z" finished-at="2018-04-22T04:15:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H6_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:15:43Z" finished-at="2018-04-22T04:15:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="I_recovery1" duration-ms="8749" started-at="2018-04-22T04:15:43Z" finished-at="2018-04-22T04:15:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 修改速拨码的prefix为*99]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T04:15:51Z" finished-at="2018-04-22T04:15:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="I_recovery2" duration-ms="29936" started-at="2018-04-22T04:15:51Z" finished-at="2018-04-22T04:16:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由OutRoute3_sps,分机选择全部]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:16:21Z" finished-at="2018-04-22T04:16:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial@18c1321]" name="AfterClass" is-config="true" duration-ms="14078" started-at="2018-04-22T04:16:21Z" finished-at="2018-04-22T04:16:35Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  SpeedDial  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.SpeedDial -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="BeforeClass" is-config="true" duration-ms="28391" started-at="2018-04-22T06:13:55Z" finished-at="2018-04-22T06:14:23Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== Emergency Number ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_registerExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="A1_registerExtensions" duration-ms="51421" started-at="2018-04-22T06:14:23Z" finished-at="2018-04-22T06:15:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3002]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_registerExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T06:15:15Z" finished-at="2018-04-22T06:15:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_addUnavailTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="A2_addUnavailTrunk" duration-ms="21628" started-at="2018-04-22T06:15:15Z" finished-at="2018-04-22T06:15:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加不可用的sip外线SIP4]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_addUnavailTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:15:37Z" finished-at="2018-04-22T06:15:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addEmergencyNum()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="B1_addEmergencyNum" duration-ms="31747" started-at="2018-04-22T06:15:37Z" finished-at="2018-04-22T06:16:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】  删除所有紧急号码]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有紧急号码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加紧急号码2000，通过SPS外线，通知人为1100]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addEmergencyNum -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T06:16:08Z" finished-at="2018-04-22T06:16:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_makeCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="B2_makeCall" duration-ms="52037" started-at="2018-04-22T06:16:08Z" finished-at="2018-04-22T06:17:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 验证紧急号码可正常使用，分机1000拨打2000，预期1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_makeCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:17:00Z" finished-at="2018-04-22T06:17:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_editEmergencyNumb()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="B3_editEmergencyNumb" duration-ms="34426" started-at="2018-04-22T06:17:00Z" finished-at="2018-04-22T06:17:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码，2000修改为001，trunk前缀为3，将SPS改为SIP，Notification改为1000分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_editEmergencyNumb -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:17:35Z" finished-at="2018-04-22T06:17:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_makeCall1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="B4_makeCall1" duration-ms="11082" started-at="2018-04-22T06:17:35Z" finished-at="2018-04-22T06:17:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1100拨打无效的紧急号码2000，预期呼出失败，分机1100为Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--Hungup]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_makeCall1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T06:17:46Z" finished-at="2018-04-22T06:17:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_makeCall2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="B4_makeCall2" duration-ms="52309" started-at="2018-04-22T06:17:46Z" finished-at="2018-04-22T06:18:38Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100通过SIP拨打001号码，预期3001响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000和分机3001状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_makeCall2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:18:38Z" finished-at="2018-04-22T06:18:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_edittrunk_Unavail()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C1_edittrunk_Unavail" duration-ms="34242" started-at="2018-04-22T06:18:38Z" finished-at="2018-04-22T06:19:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码001，号码改为2000，删除trunk前缀，线路改为SIP4，通知人为1100分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_edittrunk_Unavail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:19:13Z" finished-at="2018-04-22T06:19:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkUnavailTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C2_checkUnavailTrunk" duration-ms="32654" started-at="2018-04-22T06:19:13Z" finished-at="2018-04-22T06:19:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000拨打2000，预期分机1100响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkUnavailTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:19:45Z" finished-at="2018-04-22T06:19:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_addTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C3_addTrunk" duration-ms="45131" started-at="2018-04-22T06:19:45Z" finished-at="2018-04-22T06:20:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码2000，号码改为1234567890123456789012345678901，呼出前缀为#*+0123456789qw，trunk顺序为：SIP4、SPS、SIP；通知人为1000]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_addTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:20:30Z" finished-at="2018-04-22T06:20:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_checkTrunk1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C4_checkTrunk1" duration-ms="52025" started-at="2018-04-22T06:20:30Z" finished-at="2018-04-22T06:21:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100拨打1234567890123456789012345678901，预期被通知分机1000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000和分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_checkTrunk1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:21:22Z" finished-at="2018-04-22T06:21:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C4_checkTrunk2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C4_checkTrunk2" duration-ms="102927" started-at="2018-04-22T06:21:22Z" finished-at="2018-04-22T06:23:05Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:262)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber.C4_checkTrunk2(EmergencyNumber.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100先通过SPS外线呼出，让SPS外线处于正忙状态]]>
            </line>
            <line>
              <![CDATA[    Error:  预期2000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 接着分机1102也通过SPS外线呼出，分机1100不会被迫挂断电话，软件层面会再新增一条通道让1102通过SPS呼出；预期分机1100为TALKING状态，分机1000为RING]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：1100 [1100] 实际：1100dial1234567890123456789012345678901 [Emergency]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_checkTrunk2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="2078" started-at="2018-04-22T06:23:05Z" finished-at="2018-04-22T06:23:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_deleteTrunk_addNotification()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C5_deleteTrunk_addNotification" duration-ms="30678" started-at="2018-04-22T06:23:07Z" finished-at="2018-04-22T06:23:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码，号码改为3001，删除一条Trunk——SIP，新增一个通知人1101]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_deleteTrunk_addNotification -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T06:23:38Z" finished-at="2018-04-22T06:23:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_checkTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C6_checkTrunk" duration-ms="71934" started-at="2018-04-22T06:23:38Z" finished-at="2018-04-22T06:24:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100拨打3001，预期分机1000和1101为RING状态]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000状态和1101状态--RING，分机3001的状态也为RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_checkTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T06:24:50Z" finished-at="2018-04-22T06:24:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_deleteNotification()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C7_deleteNotification" duration-ms="26216" started-at="2018-04-22T06:24:50Z" finished-at="2018-04-22T06:25:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码，删除通知人1101]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_deleteNotification -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:25:16Z" finished-at="2018-04-22T06:25:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_checkNotification()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="C8_checkNotification" duration-ms="53070" started-at="2018-04-22T06:25:16Z" finished-at="2018-04-22T06:26:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1100拨打3001，预期分机1000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000和分机3001状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_checkNotification -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:26:09Z" finished-at="2018-04-22T06:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_addEmergency_line()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D1_addEmergency_line" duration-ms="99654" started-at="2018-04-22T06:26:09Z" finished-at="2018-04-22T06:27:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 验证紧急号码可以通过各物理外线正常呼出，添加经过各物理外线呼出的紧急号码]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加SPS]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加IAX和SPX]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加FXO_1]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加BRI]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_addEmergency_line -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:27:49Z" finished-at="2018-04-22T06:27:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_check_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D3_check_iax" duration-ms="52479" started-at="2018-04-22T06:27:49Z" finished-at="2018-04-22T06:28:42Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过IAX拨打3004号码，预期3004分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和分机3004状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_check_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T06:28:42Z" finished-at="2018-04-22T06:28:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_check_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D4_check_spx" duration-ms="52102" started-at="2018-04-22T06:28:42Z" finished-at="2018-04-22T06:29:34Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过SPX拨打444号码，预期2000分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_check_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T06:29:34Z" finished-at="2018-04-22T06:29:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_check_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D5_check_bri" duration-ms="52396" started-at="2018-04-22T06:29:34Z" finished-at="2018-04-22T06:30:26Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过BRI拨打666号码，预期2000分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_check_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:30:26Z" finished-at="2018-04-22T06:30:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_check_pstn()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D5_check_pstn" duration-ms="56287" started-at="2018-04-22T06:30:26Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过PSTN拨打2001号码，预期2001分机响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和分机2001状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_check_pstn -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_check_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D6_check_e1" duration-ms="0" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D6_check_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_check_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="D7_check_gsm" duration-ms="0" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D7_check_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:31:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_voipAndPhysical()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E1_voipAndPhysical" duration-ms="44333" started-at="2018-04-22T06:31:22Z" finished-at="2018-04-22T06:32:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码——验证第一条sip外线不可用时，走到第二条FXO外线呼出]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_voipAndPhysical -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:32:07Z" finished-at="2018-04-22T06:32:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_checkVoipAndPhy()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E2_checkVoipAndPhy" duration-ms="52411" started-at="2018-04-22T06:32:07Z" finished-at="2018-04-22T06:32:59Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100通过BRI拨打2000号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000和分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkVoipAndPhy -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T06:32:59Z" finished-at="2018-04-22T06:32:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_PhyAndVoip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E3_PhyAndVoip" duration-ms="35587" started-at="2018-04-22T06:32:59Z" finished-at="2018-04-22T06:33:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码——验证第一条FXO外线在忙时，走到第二条SPS外线呼出]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_PhyAndVoip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:33:35Z" finished-at="2018-04-22T06:33:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E4_checkPhyAndVoip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E4_checkPhyAndVoip" duration-ms="82509" started-at="2018-04-22T06:33:35Z" finished-at="2018-04-22T06:34:57Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：SPS1 实际：FXO7】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：SPS1 实际：FXO7】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:269)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber.E4_checkPhyAndVoip(EmergencyNumber.java:659)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过PSTN拨打52001号码，预期2001响铃]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Error:  预期2000状态为RING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：SPS1 实际：FXO7】.jpg" target="_blank">Error: CDR目的中继检测 【预期：SPS1 实际：FXO7】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_checkPhyAndVoip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="2078" started-at="2018-04-22T06:34:57Z" finished-at="2018-04-22T06:34:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_PhyAndPhy()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E5_PhyAndPhy" duration-ms="35539" started-at="2018-04-22T06:34:59Z" finished-at="2018-04-22T06:35:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑紧急号码——验证第一条FXO外线在忙时，走到第二条BRI外线呼出]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_PhyAndPhy -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:35:35Z" finished-at="2018-04-22T06:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E6_checkPhyAndPhy()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="E6_checkPhyAndPhy" duration-ms="74244" started-at="2018-04-22T06:35:35Z" finished-at="2018-04-22T06:36:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR目的中继检测 【预期：BRI1 实际：FXO7】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR目的中继检测 【预期：BRI1 实际：FXO7】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:269)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber.E6_checkPhyAndPhy(EmergencyNumber.java:721)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1100通过PSTN拨打52001号码，预期2001响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1102通过BRI拨打2000号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Error:  预期1100状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[    Error:  预期2000状态为RING，实际状态为2]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR目的中继检测 【预期：BRI1 实际：FXO7】.jpg" target="_blank">Error: CDR目的中继检测 【预期：BRI1 实际：FXO7】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_checkPhyAndPhy -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="2139" started-at="2018-04-22T06:36:49Z" finished-at="2018-04-22T06:36:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_Contacts1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F1_Contacts1" duration-ms="27210" started-at="2018-04-22T06:36:51Z" finished-at="2018-04-22T06:37:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加事件中心中的通知联系人——分机1103，通知方法为Call Extension]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_Contacts1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:37:19Z" finished-at="2018-04-22T06:37:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_Contacts2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F1_Contacts2" duration-ms="71517" started-at="2018-04-22T06:37:19Z" finished-at="2018-04-22T06:38:30Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1000通过SPS拨打111号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和1103状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass:  呼入路由目的地的分机2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_Contacts2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T06:38:30Z" finished-at="2018-04-22T06:38:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_Contacts3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F1_Contacts3" duration-ms="22123" started-at="2018-04-22T06:38:30Z" finished-at="2018-04-22T06:38:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】最近的一通紧急号码拨打时间为：2018-04-22 06:37:08]]>
            </line>
            <line>
              <![CDATA[  【执行操作】查看Event log]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Event log获取到的time为：2018-04-22 06:37:08]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_Contacts3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:38:52Z" finished-at="2018-04-22T06:38:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_EventCenter1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_EventCenter1" duration-ms="10011" started-at="2018-04-22T06:38:52Z" finished-at="2018-04-22T06:39:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】事件中心的紧急号码——不勾选Record，勾选Notification]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_EventCenter1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:39:02Z" finished-at="2018-04-22T06:39:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_EventCenter2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_EventCenter2" duration-ms="71729" started-at="2018-04-22T06:39:02Z" finished-at="2018-04-22T06:40:14Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1102通过SPS拨打111号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass:  被通知的分机1100和1103和2000状态--RING]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_EventCenter2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:40:14Z" finished-at="2018-04-22T06:40:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_EventCenter3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_EventCenter3" duration-ms="11494" started-at="2018-04-22T06:40:14Z" finished-at="2018-04-22T06:40:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_EventCenter3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:40:26Z" finished-at="2018-04-22T06:40:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_EventCenter4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_EventCenter4" duration-ms="8017" started-at="2018-04-22T06:40:26Z" finished-at="2018-04-22T06:40:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】事件中心的紧急号码——不勾选Record，不勾选Notification]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_EventCenter4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T06:40:34Z" finished-at="2018-04-22T06:40:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F2_EventCenter5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_EventCenter5" duration-ms="54192" started-at="2018-04-22T06:40:34Z" finished-at="2018-04-22T06:41:28Z">
          <exception class="com.codeborne.selenide.ex.ElementShould">
            <message>
              <![CDATA[Element should be visible {By.xpath: .//span[starts-with(@class,"x-btn-inner x-btn-inner-default-small") and text()="Search"]}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="st-el-search-btnInnerEl" unselectable="on" displayed:false></span>']]>
            </message>
            <full-stacktrace>
              <![CDATA[Element should be visible {By.xpath: .//span[starts-with(@class,"x-btn-inner x-btn-inner-default-small") and text()="Search"]}
Element: '<span class="x-btn-inner x-btn-inner-default-small" data-ref="btnInnerEl" id="st-el-search-btnInnerEl" unselectable="on" displayed:false></span>'
Screenshot: file:/F:/MyProject/SwebTest/build/reports/tests/1524350487760.5.png
Timeout: 15 s.
	at com.codeborne.selenide.impl.WebElementSource.checkCondition(WebElementSource.java:66)
	at com.codeborne.selenide.impl.WebElementSource.findAndAssertElementIsVisible(WebElementSource.java:72)
	at com.codeborne.selenide.commands.Click.execute(Click.java:14)
	at com.codeborne.selenide.commands.Click.execute(Click.java:11)
	at com.codeborne.selenide.commands.Commands.execute(Commands.java:140)
	at com.codeborne.selenide.impl.SelenideElementProxy.dispatchAndRetry(SelenideElementProxy.java:86)
	at com.codeborne.selenide.impl.SelenideElementProxy.invoke(SelenideElementProxy.java:62)
	at com.sun.proxy.$Proxy6.click(Unknown Source)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:260)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber.F2_EventCenter5(EmergencyNumber.java:900)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- com.codeborne.selenide.ex.ElementShould -->
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1101通过SPS拨打111号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Error:  预期被通知的分机1100状态为RING，实际状态为2;分机1103状态为IDLE，实际状态为4;分机2000状态为RING，实际状态为2]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_EventCenter5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="2088" started-at="2018-04-22T06:41:28Z" finished-at="2018-04-22T06:41:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_eventCenter6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_eventCenter6" duration-ms="13264" started-at="2018-04-22T06:41:30Z" finished-at="2018-04-22T06:41:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1000 has made an emergency call to 111.]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_eventCenter6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T06:41:43Z" finished-at="2018-04-22T06:41:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_eventCenter7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_eventCenter7" duration-ms="10060" started-at="2018-04-22T06:41:43Z" finished-at="2018-04-22T06:41:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】事件中心的紧急号码——勾选Record，不勾选Notification]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_eventCenter7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:41:53Z" finished-at="2018-04-22T06:41:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_eventCenter8()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_eventCenter8" duration-ms="71066" started-at="2018-04-22T06:41:53Z" finished-at="2018-04-22T06:43:04Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass:  分机1102通过SPS拨打111号码，预期2000响铃]]>
            </line>
            <line>
              <![CDATA[    Error:  预期被通知的分机1100状态为RING，实际状态为2;分机1103状态为IDLE，实际状态为4;分机2000状态为RING，实际状态为2]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_eventCenter8 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:43:04Z" finished-at="2018-04-22T06:43:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_eventCenter9()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F2_eventCenter9" duration-ms="24228" started-at="2018-04-22T06:43:04Z" finished-at="2018-04-22T06:43:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】CDR显示最近的一通紧急号码拨打时间为：2018-04-22 06:41:43]]>
            </line>
            <line>
              <![CDATA[  【执行操作】查看Event log]]>
            </line>
            <line>
              <![CDATA[  【执行操作】Event log获取到的time为：2018-04-22 06:41:43]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期type = "telephony"，实际Event log获取到的type为：telephony]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期name = "Emergency Call"，实际Event log获取到的name为：Emergency Call]]>
            </line>
            <line>
              <![CDATA[  【执行操作】预期message = "Extension 1000 has made an emergency call to 111"，实际Event log获取到的message为：Extension 1102 has made an emergency call to 111.]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_eventCenter9 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:43:29Z" finished-at="2018-04-22T06:43:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_recoveryEvent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="F3_recoveryEvent" duration-ms="19918" started-at="2018-04-22T06:43:29Z" finished-at="2018-04-22T06:43:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】事件中心的紧急号码——勾选Record，勾选Notification]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】实际row2:0]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_recoveryEvent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:43:48Z" finished-at="2018-04-22T06:43:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_addNumber()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G1_addNumber" duration-ms="3651" started-at="2018-04-22T06:43:48Z" finished-at="2018-04-22T06:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G1_addNumber -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:43:52Z" finished-at="2018-04-22T06:43:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G2_deleteOne_no" duration-ms="15174" started-at="2018-04-22T06:43:52Z" finished-at="2018-04-22T06:44:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个紧急号码111——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个紧急号码111-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:44:07Z" finished-at="2018-04-22T06:44:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G3_deleteOne_yes" duration-ms="24726" started-at="2018-04-22T06:44:07Z" finished-at="2018-04-22T06:44:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个紧急号码111——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个紧急号码111——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:44:32Z" finished-at="2018-04-22T06:44:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G4_deletePart_no" duration-ms="18346" started-at="2018-04-22T06:44:32Z" finished-at="2018-04-22T06:44:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:44:50Z" finished-at="2018-04-22T06:44:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G5_deletePart_yes" duration-ms="13338" started-at="2018-04-22T06:44:50Z" finished-at="2018-04-22T06:45:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】实际row:2]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-04-22T06:45:04Z" finished-at="2018-04-22T06:45:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G6_deleteAll_no" duration-ms="9711" started-at="2018-04-22T06:45:04Z" finished-at="2018-04-22T06:45:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:45:14Z" finished-at="2018-04-22T06:45:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_delteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="G7_delteAll_yes" duration-ms="13271" started-at="2018-04-22T06:45:14Z" finished-at="2018-04-22T06:45:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_delteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:45:27Z" finished-at="2018-04-22T06:45:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="H_recovery" duration-ms="43635" started-at="2018-04-22T06:45:27Z" finished-at="2018-04-22T06:46:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除SIP4——选择yes]]>
            </line>
            <line>
              <![CDATA[  【执行操作】实际值row2:9]]>
            </line>
            <line>
              <![CDATA[  【执行操作】期望值row3:9]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除SIP4——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-04-22T06:46:10Z" finished-at="2018-04-22T06:46:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber@1aeada1]" name="AfterClass" is-config="true" duration-ms="13640" started-at="2018-04-22T06:46:10Z" finished-at="2018-04-22T06:46:24Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：====== Emergency Number ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.EmergencyNumber -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="BeforeClass" is-config="true" duration-ms="26883" started-at="2018-04-22T01:25:51Z" finished-at="2018-04-22T01:26:17Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：=======  Conference  =======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Register" is-config="true" duration-ms="28111" started-at="2018-04-22T01:26:17Z" finished-at="2018-04-22T01:26:46Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="A1_Init" duration-ms="30067" started-at="2018-04-22T01:26:46Z" finished-at="2018-04-22T01:27:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:27:16Z" finished-at="2018-04-22T01:27:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="A2_AddConferences" duration-ms="15845" started-at="2018-04-22T01:27:16Z" data-provider="add" finished-at="2018-04-22T01:27:32Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6400, ParticipantPassword=, AllowInvite=true, ModeratorPassword=123, Moderators=ExtensionGroup1,1103, DID=, Name=Conference6400}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加会议室Conference6400：6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:27:32Z" finished-at="2018-04-22T01:27:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="A2_AddConferences" duration-ms="14394" started-at="2018-04-22T01:27:32Z" data-provider="add" finished-at="2018-04-22T01:27:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6401, ParticipantPassword=789, AllowInvite=true, ModeratorPassword=, Moderators=1000, DID=5503301, Name=6401}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加会议室6401：6401]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="67" started-at="2018-04-22T01:27:46Z" finished-at="2018-04-22T01:27:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="A2_AddConferences" duration-ms="14488" started-at="2018-04-22T01:27:46Z" data-provider="add" finished-at="2018-04-22T01:28:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=exten, waitModerator=true, Number=6402, ParticipantPassword=, AllowInvite=false, ModeratorPassword=456, Moderators=1000, DID=5503302, Name=a}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加会议室a：6402]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:28:01Z" finished-at="2018-04-22T01:28:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AddInbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="B1_AddInbound" duration-ms="20280" started-at="2018-04-22T01:28:01Z" finished-at="2018-04-22T01:28:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T01:28:21Z" finished-at="2018-04-22T01:28:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="B2_AddInbound" duration-ms="30724" started-at="2018-04-22T01:28:21Z" data-provider="add" finished-at="2018-04-22T01:28:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6400, ParticipantPassword=, AllowInvite=true, ModeratorPassword=123, Moderators=ExtensionGroup1,1103, DID=, Name=Conference6400}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：Conference6400，DID：，Destination：Conference6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T01:28:52Z" finished-at="2018-04-22T01:28:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="B2_AddInbound" duration-ms="30716" started-at="2018-04-22T01:28:52Z" data-provider="add" finished-at="2018-04-22T01:29:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6401, ParticipantPassword=789, AllowInvite=true, ModeratorPassword=, Moderators=1000, DID=5503301, Name=6401}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：6401，DID：5503301，Destination：6401]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T01:29:23Z" finished-at="2018-04-22T01:29:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="B2_AddInbound" duration-ms="29624" started-at="2018-04-22T01:29:23Z" data-provider="add" finished-at="2018-04-22T01:29:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=exten, waitModerator=true, Number=6402, ParticipantPassword=, AllowInvite=false, ModeratorPassword=456, Moderators=1000, DID=5503302, Name=a}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加呼入路由：a，DID：5503302，Destination：a]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-04-22T01:29:52Z" finished-at="2018-04-22T01:29:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="B3_Apply" duration-ms="8127" started-at="2018-04-22T01:29:52Z" finished-at="2018-04-22T01:30:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:30:00Z" finished-at="2018-04-22T01:30:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C1_extension" duration-ms="32466" started-at="2018-04-22T01:30:00Z" finished-at="2018-04-22T01:30:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000呼入会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有1个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:30:33Z" finished-at="2018-04-22T01:30:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C2_sps" duration-ms="31725" started-at="2018-04-22T01:30:33Z" finished-at="2018-04-22T01:31:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有2个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:31:05Z" finished-at="2018-04-22T01:31:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C3_sip" duration-ms="31748" started-at="2018-04-22T01:31:05Z" finished-at="2018-04-22T01:31:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有3个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:31:36Z" finished-at="2018-04-22T01:31:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C4_spx" duration-ms="25859" started-at="2018-04-22T01:31:36Z" finished-at="2018-04-22T01:32:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打88888通过spx外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有4个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T01:32:02Z" finished-at="2018-04-22T01:32:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_iax1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C5_iax1" duration-ms="31838" started-at="2018-04-22T01:32:02Z" finished-at="2018-04-22T01:32:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3003拨打3100通过iax外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有5个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_iax1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-04-22T01:32:34Z" finished-at="2018-04-22T01:32:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T01:32:34Z" finished-at="2018-04-22T01:32:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_iax2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C5_iax2" duration-ms="0" started-at="2018-04-22T01:32:34Z" finished-at="2018-04-22T01:32:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_iax2 -->
        <test-method status="PASS" signature="C6_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C6_fxo" duration-ms="25837" started-at="2018-04-22T01:32:34Z" finished-at="2018-04-22T01:33:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2003拨打2010通过pstn外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有6个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T01:33:00Z" finished-at="2018-04-22T01:33:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C7_bri" duration-ms="25905" started-at="2018-04-22T01:33:00Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2004拨打66666通过BRI外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有7个成员]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C8_e1" duration-ms="0" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="69" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="C9_gsm" duration-ms="1" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C9_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca1_hangup_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca1_hangup_extension" duration-ms="27871" started-at="2018-04-22T01:33:26Z" finished-at="2018-04-22T01:33:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有6个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca1_hangup_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:33:54Z" finished-at="2018-04-22T01:33:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca2_hangup_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca2_hangup_sps" duration-ms="29421" started-at="2018-04-22T01:33:54Z" finished-at="2018-04-22T01:34:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有5个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca2_hangup_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:34:23Z" finished-at="2018-04-22T01:34:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca3_hangup_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca3_hangup_sip" duration-ms="29320" started-at="2018-04-22T01:34:23Z" finished-at="2018-04-22T01:34:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有4个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca3_hangup_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T01:34:53Z" finished-at="2018-04-22T01:34:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca4_hangup_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca4_hangup_spx" duration-ms="21444" started-at="2018-04-22T01:34:53Z" finished-at="2018-04-22T01:35:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca4_hangup_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="82" started-at="2018-04-22T01:35:14Z" finished-at="2018-04-22T01:35:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca5_hangup_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca5_hangup_iax" duration-ms="21200" started-at="2018-04-22T01:35:14Z" finished-at="2018-04-22T01:35:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3003退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca5_hangup_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:35:35Z" finished-at="2018-04-22T01:35:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca6_hangup_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca6_hangup_fxo" duration-ms="21541" started-at="2018-04-22T01:35:35Z" finished-at="2018-04-22T01:35:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2003退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca6_hangup_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T01:35:57Z" finished-at="2018-04-22T01:35:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca7_hangup_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca7_hangup_bri" duration-ms="21499" started-at="2018-04-22T01:35:57Z" finished-at="2018-04-22T01:36:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2004退出会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca7_hangup_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-04-22T01:36:18Z" finished-at="2018-04-22T01:36:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T01:36:18Z" finished-at="2018-04-22T01:36:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca8_hangup_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca8_hangup_e1" duration-ms="0" started-at="2018-04-22T01:36:18Z" finished-at="2018-04-22T01:36:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca8_hangup_e1 -->
        <test-method status="PASS" signature="Ca9_hangup_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="Ca9_hangup_gsm" duration-ms="0" started-at="2018-04-22T01:36:19Z" finished-at="2018-04-22T01:36:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca9_hangup_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:36:19Z" finished-at="2018-04-22T01:36:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_Participant1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="D1_Participant1" duration-ms="58972" started-at="2018-04-22T01:36:19Z" finished-at="2018-04-22T01:37:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入与会者密码：789]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入与会者密码前，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入与会者密码后，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_Participant1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T01:37:17Z" finished-at="2018-04-22T01:37:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_Participant2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="D2_Participant2" duration-ms="35553" started-at="2018-04-22T01:37:18Z" finished-at="2018-04-22T01:37:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_Participant2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T01:37:53Z" finished-at="2018-04-22T01:37:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_Participant3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="D3_Participant3" duration-ms="49279" started-at="2018-04-22T01:37:53Z" finished-at="2018-04-22T01:38:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入错误的与会密码：123，再次输入正确的与会者密码：789]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入错误的与会密码123后，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入正确的与会密码789后，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_Participant3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T01:38:42Z" finished-at="2018-04-22T01:38:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_Participant4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="D4_Participant4" duration-ms="144511" started-at="2018-04-22T01:38:42Z" finished-at="2018-04-22T01:41:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室，保持通话]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 修改会议室的与会密码为空,立即生效]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000进入会议室，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100加入会议室，预期会议室6401有2个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: 所有成员退出会议室，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】所有成员退出会议室6401， 1100再次拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100进入会议室，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_Participant4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T01:41:07Z" finished-at="2018-04-22T01:41:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_Prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="E1_Prompt" duration-ms="0" started-at="2018-04-22T01:41:07Z" finished-at="2018-04-22T01:41:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 AMI未打印提示音相关信息--请手动验证]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_Prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T01:41:07Z" finished-at="2018-04-22T01:41:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_waitModerator()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="F1_waitModerator" duration-ms="141166" started-at="2018-04-22T01:41:07Z" finished-at="2018-04-22T01:43:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6402呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1000拨打6402呼入到会议室6402，管理员进入会议室---判断方法：AMI不会打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402等到管理员，进行通话]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_waitModerator -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T01:43:28Z" finished-at="2018-04-22T01:43:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_ModeratorPassword()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="G1_ModeratorPassword" duration-ms="99981" started-at="2018-04-22T01:43:28Z" finished-at="2018-04-22T01:45:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100拨打6402呼入到会议室6402，输入管理员密码：456---判断方法：AMI不会打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100成为会议室6402的管理员]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_ModeratorPassword -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T01:45:08Z" finished-at="2018-04-22T01:45:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_AllowInvite()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="H1_AllowInvite" duration-ms="187433" started-at="2018-04-22T01:45:08Z" finished-at="2018-04-22T01:48:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2000拨打99999通过sps外线呼入到会议室6400，按#邀请成员1100加入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000进入会议室，预期会议室6400有1个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100被2000邀请进入会议室，预期会议室6400有2个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100按#13001邀请外线号码加入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 3001被1100邀请进入会议室，预期会议室6400有3个成员]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 1100按#1000邀请管理员加入会议室]]>
            </line>
            <line>
              <![CDATA[    Pass: 管理员1000被1100邀请进入会议室，预期会议室6400有4个成员]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_AllowInvite -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T01:48:16Z" finished-at="2018-04-22T01:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_menu()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="I1_menu" duration-ms="1" started-at="2018-04-22T01:48:16Z" finished-at="2018-04-22T01:48:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 语音菜单--AMI未打印相关信息--请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_menu -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:48:16Z" finished-at="2018-04-22T01:48:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="J1_delete" duration-ms="62299" started-at="2018-04-22T01:48:16Z" finished-at="2018-04-22T01:49:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 表格删除：Conference6400-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6400-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 表格删除：Conference6400-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：conference6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：a-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：a-取消删除]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除：a-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：a-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T01:49:18Z" finished-at="2018-04-22T01:49:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="K1_recovery" duration-ms="25295" started-at="2018-04-22T01:49:18Z" finished-at="2018-04-22T01:49:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 恢复初始化环境]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加Conference1:6400]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T01:49:43Z" finished-at="2018-04-22T01:49:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="K2_recovery" duration-ms="57269" started-at="2018-04-22T01:49:43Z" finished-at="2018-04-22T01:50:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T01:50:41Z" finished-at="2018-04-22T01:50:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@181e022]" name="AfterClass" is-config="true" duration-ms="13708" started-at="2018-04-22T01:50:41Z" finished-at="2018-04-22T01:50:54Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：=======  Conference  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="BeforeClass" is-config="true" duration-ms="27494" started-at="2018-04-22T06:46:24Z" finished-at="2018-04-22T06:46:52Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== Disa ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="A_addExtensions" duration-ms="29340" started-at="2018-04-22T06:46:52Z" finished-at="2018-04-22T06:47:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3004]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2002]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备3注册分机4001]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:47:21Z" finished-at="2018-04-22T06:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_addUnavil()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="B1_addUnavil" duration-ms="25775" started-at="2018-04-22T06:47:21Z" finished-at="2018-04-22T06:47:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加不可用的sip外线SIP3]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_addUnavil -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:47:47Z" finished-at="2018-04-22T06:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_addRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="B2_addRoute1" duration-ms="24791" started-at="2018-04-22T06:47:47Z" finished-at="2018-04-22T06:48:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由Out_All]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_addRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T06:48:12Z" finished-at="2018-04-22T06:48:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_addRoute2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="B2_addRoute2" duration-ms="14325" started-at="2018-04-22T06:48:12Z" finished-at="2018-04-22T06:48:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 添加sip的呼出路由Out_sip]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_addRoute2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T06:48:26Z" finished-at="2018-04-22T06:48:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addDisa1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="B3_addDisa1" duration-ms="41660" started-at="2018-04-22T06:48:26Z" finished-at="2018-04-22T06:49:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_addDisa1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:49:08Z" finished-at="2018-04-22T06:49:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_addDisa2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="B3_addDisa2" duration-ms="10894" started-at="2018-04-22T06:49:08Z" finished-at="2018-04-22T06:49:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_addDisa2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T06:49:19Z" finished-at="2018-04-22T06:49:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="C_editInRoute" duration-ms="57126" started-at="2018-04-22T06:49:19Z" finished-at="2018-04-22T06:50:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1——呼入目的地到DISA ]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:50:16Z" finished-at="2018-04-22T06:50:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk1" duration-ms="39907" started-at="2018-04-22T06:50:16Z" finished-at="2018-04-22T06:50:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T06:50:56Z" finished-at="2018-04-22T06:50:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk2" duration-ms="39906" started-at="2018-04-22T06:50:56Z" finished-at="2018-04-22T06:51:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨31111通过SPS呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T06:51:36Z" finished-at="2018-04-22T06:51:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk3" duration-ms="39771" started-at="2018-04-22T06:51:36Z" finished-at="2018-04-22T06:52:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打88999通过SPX外线呼入，进入DISA，拨23001通过IAX1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:52:15Z" finished-at="2018-04-22T06:52:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk4" duration-ms="41730" started-at="2018-04-22T06:52:15Z" finished-at="2018-04-22T06:52:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3100通过iax外线呼入，进入DISA，拨42000通过SPX呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T06:52:57Z" finished-at="2018-04-22T06:52:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk5" duration-ms="39779" started-at="2018-04-22T06:52:57Z" finished-at="2018-04-22T06:53:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨66666通过E1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T06:53:37Z" finished-at="2018-04-22T06:53:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk6" duration-ms="0" started-at="2018-04-22T06:53:37Z" finished-at="2018-04-22T06:53:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D_checkTrunk6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T06:53:37Z" finished-at="2018-04-22T06:53:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk7" duration-ms="39764" started-at="2018-04-22T06:53:37Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨52000通过E1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_checkTrunk7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk8()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk8" duration-ms="1" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D_checkTrunk8 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_checkTrunk9()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="D_checkTrunk9" duration-ms="0" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D_checkTrunk9 -->
        <test-method status="PASS" signature="E1_editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E1_editInRoute" duration-ms="33507" started-at="2018-04-22T06:54:17Z" finished-at="2018-04-22T06:54:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由目的地为DISA3]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-04-22T06:54:50Z" finished-at="2018-04-22T06:54:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_checkPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E2_checkPriority1" duration-ms="39802" started-at="2018-04-22T06:54:50Z" finished-at="2018-04-22T06:55:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:55:30Z" finished-at="2018-04-22T06:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_checkPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E2_checkPriority2" duration-ms="39802" started-at="2018-04-22T06:55:30Z" finished-at="2018-04-22T06:56:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨31111通过SPS呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T06:56:10Z" finished-at="2018-04-22T06:56:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_checkPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E2_checkPriority3" duration-ms="49944" started-at="2018-04-22T06:56:10Z" finished-at="2018-04-22T06:57:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 3001拨打3000通过sip外线呼入,进入DISA，拨93111]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_checkPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:57:00Z" finished-at="2018-04-22T06:57:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_editOutRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E3_editOutRoute" duration-ms="27743" started-at="2018-04-22T06:57:00Z" finished-at="2018-04-22T06:57:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由：修改OutRoute1_sip前缀为92.  Strip 2位]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_editOutRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T06:57:28Z" finished-at="2018-04-22T06:57:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_checkPriority()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E4_checkPriority" duration-ms="40394" started-at="2018-04-22T06:57:28Z" finished-at="2018-04-22T06:58:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨923001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_checkPriority -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:58:08Z" finished-at="2018-04-22T06:58:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_editDisa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E5_editDisa" duration-ms="37184" started-at="2018-04-22T06:58:08Z" finished-at="2018-04-22T06:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E5_editDisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T06:58:45Z" finished-at="2018-04-22T06:58:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_checkPriority()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E6_checkPriority" duration-ms="40203" started-at="2018-04-22T06:58:45Z" finished-at="2018-04-22T06:59:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨923001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_checkPriority -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T06:59:25Z" finished-at="2018-04-22T06:59:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_recoveryOutRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="E7_recoveryOutRoute" duration-ms="27682" started-at="2018-04-22T06:59:25Z" finished-at="2018-04-22T06:59:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑呼出路由：修改OutRoute1_sip前缀为1.  Strip 1位]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_recoveryOutRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T06:59:53Z" finished-at="2018-04-22T06:59:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_editPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F1_editPin" duration-ms="39054" started-at="2018-04-22T06:59:53Z" finished-at="2018-04-22T07:00:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 编辑DISA3：password改为test1]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_editPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T07:00:32Z" finished-at="2018-04-22T07:00:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_checkPin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F2_checkPin1" duration-ms="38091" started-at="2018-04-22T07:00:32Z" finished-at="2018-04-22T07:01:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_checkPin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T07:01:10Z" finished-at="2018-04-22T07:01:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_checkPin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F2_checkPin2" duration-ms="63452" started-at="2018-04-22T07:01:10Z" finished-at="2018-04-22T07:02:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后第三次输入正确的Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_checkPin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T07:02:14Z" finished-at="2018-04-22T07:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_checkPin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F2_checkPin3" duration-ms="54188" started-at="2018-04-22T07:02:14Z" finished-at="2018-04-22T07:03:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后正确输入Pin码后不加#]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为IDLE，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【执行操作】CDR最新记录的Call to是：DISA3]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA输入pin码后不加#,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_checkPin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T07:03:08Z" finished-at="2018-04-22T07:03:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F3_editInRoute" duration-ms="36187" started-at="2018-04-22T07:03:08Z" finished-at="2018-04-22T07:03:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改Out_All呼出路由的呼出密码为123]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T07:03:44Z" finished-at="2018-04-22T07:03:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_checkPin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="F4_checkPin4" duration-ms="65124" started-at="2018-04-22T07:03:44Z" finished-at="2018-04-22T07:04:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】3001拨打3000通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号,最后正确输入呼出路由的呼出密码]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_checkPin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="66" started-at="2018-04-22T07:04:49Z" finished-at="2018-04-22T07:04:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_editSinglePin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="G1_editSinglePin" duration-ms="39133" started-at="2018-04-22T07:04:49Z" finished-at="2018-04-22T07:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G1_editSinglePin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T07:05:29Z" finished-at="2018-04-22T07:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_checkSiglePin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="G2_checkSiglePin" duration-ms="68969" started-at="2018-04-22T07:05:29Z" finished-at="2018-04-22T07:06:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_checkSiglePin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T07:06:38Z" finished-at="2018-04-22T07:06:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_checkNewSinglePin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="G3_checkNewSinglePin" duration-ms="28091" started-at="2018-04-22T07:06:38Z" finished-at="2018-04-22T07:07:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_checkNewSinglePin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T07:07:06Z" finished-at="2018-04-22T07:07:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_editSinglePin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="G4_editSinglePin" duration-ms="32239" started-at="2018-04-22T07:07:06Z" finished-at="2018-04-22T07:07:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G4_editSinglePin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T07:07:38Z" finished-at="2018-04-22T07:07:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_newCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="G5_newCall" duration-ms="104064" started-at="2018-04-22T07:07:38Z" finished-at="2018-04-22T07:09:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2002拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_newCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T07:09:22Z" finished-at="2018-04-22T07:09:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_editNone()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="H1_editNone" duration-ms="32964" started-at="2018-04-22T07:09:22Z" finished-at="2018-04-22T07:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- H1_editNone -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T07:09:55Z" finished-at="2018-04-22T07:09:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkNewNone()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="H2_checkNewNone" duration-ms="9084" started-at="2018-04-22T07:09:55Z" finished-at="2018-04-22T07:10:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkNewNone -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T07:10:04Z" finished-at="2018-04-22T07:10:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_editNone()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="H3_editNone" duration-ms="33032" started-at="2018-04-22T07:10:04Z" finished-at="2018-04-22T07:10:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 修改DISA3的SinglePin为135]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_editNone -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T07:10:37Z" finished-at="2018-04-22T07:10:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H4_newCall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="H4_newCall" duration-ms="73155" started-at="2018-04-22T07:10:37Z" finished-at="2018-04-22T07:11:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2002拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H4_newCall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-04-22T07:11:50Z" finished-at="2018-04-22T07:11:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_checkResponse()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="I1_checkResponse" duration-ms="27084" started-at="2018-04-22T07:11:50Z" finished-at="2018-04-22T07:12:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA超过设置的ResponseTimeout后被挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，进入DISA后输错Pin码三次,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_checkResponse -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T07:12:17Z" finished-at="2018-04-22T07:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I2_editResponse()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="I2_editResponse" duration-ms="32202" started-at="2018-04-22T07:12:17Z" finished-at="2018-04-22T07:12:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改DISA3：responseTimeout设置为20]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_editResponse -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-04-22T07:12:50Z" finished-at="2018-04-22T07:12:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I3_checkResponse1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="I3_checkResponse1" duration-ms="38095" started-at="2018-04-22T07:12:50Z" finished-at="2018-04-22T07:13:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，超过设置的ResponseTimeout后被挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过设置的ResponseTimeout后被挂断通话,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_checkResponse1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T07:13:28Z" finished-at="2018-04-22T07:13:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I3_checkResponse2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="I3_checkResponse2" duration-ms="63410" started-at="2018-04-22T07:13:28Z" finished-at="2018-04-22T07:14:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_checkResponse2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T07:14:31Z" finished-at="2018-04-22T07:14:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_checkDigit()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="J1_checkDigit" duration-ms="30587" started-at="2018-04-22T07:14:31Z" finished-at="2018-04-22T07:15:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001的分机状态为：4,预期是HANGUP状态]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过Digit时间,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_checkDigit -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T07:15:02Z" finished-at="2018-04-22T07:15:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_editDigit()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="J2_editDigit" duration-ms="32587" started-at="2018-04-22T07:15:02Z" finished-at="2018-04-22T07:15:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 修改DISA3：responseTimeout设置为15，digitTimeout设置为10]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_editDigit -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-04-22T07:15:34Z" finished-at="2018-04-22T07:15:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J3_checkDigit()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="J3_checkDigit" duration-ms="75092" started-at="2018-04-22T07:15:34Z" finished-at="2018-04-22T07:16:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_checkDigit -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T07:16:50Z" finished-at="2018-04-22T07:16:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J4_checkDigit()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="J4_checkDigit" duration-ms="35658" started-at="2018-04-22T07:16:50Z" finished-at="2018-04-22T07:17:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后输入Pin码，验证Digit]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001的分机状态为：4,预期是HANGUP状态]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过SPS外线呼入，超过Digit时间,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- J4_checkDigit -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T07:17:25Z" finished-at="2018-04-22T07:17:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_addDisa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K1_addDisa" duration-ms="16250" started-at="2018-04-22T07:17:25Z" finished-at="2018-04-22T07:17:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】新增DISA1——用于后面的删除操作，外线选择sip和sps]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_addDisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T07:17:42Z" finished-at="2018-04-22T07:17:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_deleteOne_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K2_deleteOne_no" duration-ms="16715" started-at="2018-04-22T07:17:42Z" finished-at="2018-04-22T07:17:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个DISA1——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_deleteOne_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T07:17:58Z" finished-at="2018-04-22T07:17:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K3_deleteOne_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K3_deleteOne_yes" duration-ms="24822" started-at="2018-04-22T07:17:58Z" finished-at="2018-04-22T07:18:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除DISA1——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_deleteOne_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T07:18:23Z" finished-at="2018-04-22T07:18:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K4_deletePart_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K4_deletePart_no" duration-ms="15993" started-at="2018-04-22T07:18:23Z" finished-at="2018-04-22T07:18:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_deletePart_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T07:18:39Z" finished-at="2018-04-22T07:18:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K5_deletePart_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K5_deletePart_yes" duration-ms="13396" started-at="2018-04-22T07:18:39Z" finished-at="2018-04-22T07:18:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K5_deletePart_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T07:18:53Z" finished-at="2018-04-22T07:18:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K6_deleteAll_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K6_deleteAll_no" duration-ms="9820" started-at="2018-04-22T07:18:53Z" finished-at="2018-04-22T07:19:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K6_deleteAll_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T07:19:02Z" finished-at="2018-04-22T07:19:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K7_deleteAll_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K7_deleteAll_yes" duration-ms="13326" started-at="2018-04-22T07:19:02Z" finished-at="2018-04-22T07:19:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K7_deleteAll_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T07:19:16Z" finished-at="2018-04-22T07:19:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K8_checkDestination()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="K8_checkDestination" duration-ms="11087" started-at="2018-04-22T07:19:16Z" finished-at="2018-04-22T07:19:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到hangup,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 2001拨打99999通过sps外线呼入到hangup,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- K8_checkDestination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T07:19:27Z" finished-at="2018-04-22T07:19:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_recovery_deleteRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="L1_recovery_deleteRoute" duration-ms="37577" started-at="2018-04-22T07:19:27Z" finished-at="2018-04-22T07:20:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个呼出路由Out_sip、Out_ALL——选择yes]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_recovery_deleteRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T07:20:04Z" finished-at="2018-04-22T07:20:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L2_recovery_deleteTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="L2_recovery_deleteTrunk" duration-ms="35683" started-at="2018-04-22T07:20:04Z" finished-at="2018-04-22T07:20:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除SIP3——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除SIP3——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_recovery_deleteTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T07:20:40Z" finished-at="2018-04-22T07:20:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L3_addDisa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="L3_addDisa" duration-ms="28357" started-at="2018-04-22T07:20:40Z" finished-at="2018-04-22T07:21:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除所有DISA]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- L3_addDisa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-04-22T07:21:08Z" finished-at="2018-04-22T07:21:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L4_addInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="L4_addInRoute" duration-ms="56215" started-at="2018-04-22T07:21:08Z" finished-at="2018-04-22T07:22:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 添加呼入路由InRoute1]]>
            </line>
          </reporter-output>
        </test-method> <!-- L4_addInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T07:22:05Z" finished-at="2018-04-22T07:22:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa@8931cf]" name="AfterClass" is-config="true" duration-ms="13608" started-at="2018-04-22T07:22:05Z" finished-at="2018-04-22T07:22:18Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  DISA  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Disa -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="BeforeClass" is-config="true" duration-ms="27226" started-at="2018-04-22T03:53:27Z" finished-at="2018-04-22T03:53:54Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：====== PINList ======]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="A_addExtension" duration-ms="12269" started-at="2018-04-22T03:53:54Z" finished-at="2018-04-22T03:54:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 辅助设备2注册分机2001]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:54:06Z" finished-at="2018-04-22T03:54:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_addPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="B_addPin" duration-ms="18989" started-at="2018-04-22T03:54:06Z" finished-at="2018-04-22T03:54:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B_addPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T03:54:25Z" finished-at="2018-04-22T03:54:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_editDISA()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="C_editDISA" duration-ms="29188" started-at="2018-04-22T03:54:25Z" finished-at="2018-04-22T03:54:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】编辑DISA1：选择pin码——ABCDE~*_-+.?123456789012345678901234567890~~~》《》？、“：+-——）（*……）”]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_editDISA -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T03:54:54Z" finished-at="2018-04-22T03:54:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_editInRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="D_editInRoute" duration-ms="34150" started-at="2018-04-22T03:54:54Z" finished-at="2018-04-22T03:55:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的目的地到DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_editInRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T03:55:29Z" finished-at="2018-04-22T03:55:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E_checkPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="E_checkPin" duration-ms="53281" started-at="2018-04-22T03:55:29Z" finished-at="2018-04-22T03:56:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后正确的Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pinList]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_checkPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-04-22T03:56:22Z" finished-at="2018-04-22T03:56:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_deletePinNumber()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="F_deletePinNumber" duration-ms="23226" started-at="2018-04-22T03:56:22Z" finished-at="2018-04-22T03:56:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改ABCDE~*_-+.?123456789012345678901234567890~~~》《》？、“：+-——）（*……）”的PIN_Value为12,123,456,12345678]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_deletePinNumber -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T03:56:45Z" finished-at="2018-04-22T03:56:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_checkPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="G_checkPin" duration-ms="58104" started-at="2018-04-22T03:56:45Z" finished-at="2018-04-22T03:57:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进入DISA后先输入错误pin码，接着输入正确Pin码，再进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pinList]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_checkPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T03:57:43Z" finished-at="2018-04-22T03:57:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_deleteOnePin_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="H1_deleteOnePin_no" duration-ms="19834" started-at="2018-04-22T03:57:43Z" finished-at="2018-04-22T03:58:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除单个PIN——选择no]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_deleteOnePin_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:58:03Z" finished-at="2018-04-22T03:58:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_deleteOnePin_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="H2_deleteOnePin_yes" duration-ms="27887" started-at="2018-04-22T03:58:03Z" finished-at="2018-04-22T03:58:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 删除PIN——选择yes]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除DISA1——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_deleteOnePin_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:58:31Z" finished-at="2018-04-22T03:58:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_checkPin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="I_checkPin" duration-ms="36759" started-at="2018-04-22T03:58:31Z" finished-at="2018-04-22T03:59:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】2001拨打99999通过SPS外线呼入，进行二次拨号]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_checkPin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-04-22T03:59:08Z" finished-at="2018-04-22T03:59:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_deletePartPin_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="J1_deletePartPin_no" duration-ms="14405" started-at="2018-04-22T03:59:08Z" finished-at="2018-04-22T03:59:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_deletePartPin_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-04-22T03:59:22Z" finished-at="2018-04-22T03:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_deletePartPin_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="J2_deletePartPin_yes" duration-ms="13342" started-at="2018-04-22T03:59:22Z" finished-at="2018-04-22T03:59:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_deletePartPin_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:59:36Z" finished-at="2018-04-22T03:59:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J3_deleteAllPin_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="J3_deleteAllPin_no" duration-ms="9814" started-at="2018-04-22T03:59:36Z" finished-at="2018-04-22T03:59:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_deleteAllPin_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-04-22T03:59:45Z" finished-at="2018-04-22T03:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J4_deleteAllPin_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="J4_deleteAllPin_yes" duration-ms="13318" started-at="2018-04-22T03:59:45Z" finished-at="2018-04-22T03:59:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J4_deleteAllPin_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-04-22T03:59:59Z" finished-at="2018-04-22T03:59:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_recovery_InRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="K1_recovery_InRoute" duration-ms="27771" started-at="2018-04-22T03:59:59Z" finished-at="2018-04-22T04:00:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】修改呼入路由的目的地到DISA]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_recovery_InRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-04-22T04:00:26Z" finished-at="2018-04-22T04:00:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_recovery_Pin()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="K2_recovery_Pin" duration-ms="10250" started-at="2018-04-22T04:00:26Z" finished-at="2018-04-22T04:00:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】新增Pin——test1、test2]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_recovery_Pin -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-04-22T04:00:37Z" finished-at="2018-04-22T04:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K3_recovery_Disa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="K3_recovery_Disa" duration-ms="24494" started-at="2018-04-22T04:00:37Z" finished-at="2018-04-22T04:01:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】新增DISA——DISA1]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_recovery_Disa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-04-22T04:01:01Z" finished-at="2018-04-22T04:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList@5fd85d]" name="AfterClass" is-config="true" duration-ms="13484" started-at="2018-04-22T04:01:01Z" finished-at="2018-04-22T04:01:15Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  PINList  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.PINList -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="BeforeClass" is-config="true" duration-ms="59902" started-at="2018-04-22T00:49:04Z" finished-at="2018-04-22T00:50:04Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】开始执行：======  VoicePrompts  ======]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[  【执行操作】 删除所有提示音]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_record_satisfaction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="A1_record_satisfaction" duration-ms="41720" started-at="2018-04-22T00:50:04Z" finished-at="2018-04-22T00:50:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音satisfaction]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_record_satisfaction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T00:50:45Z" finished-at="2018-04-22T00:50:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_record_prompt1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="A2_record_prompt1" duration-ms="41365" started-at="2018-04-22T00:50:45Z" finished-at="2018-04-22T00:51:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_record_prompt1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-04-22T00:51:27Z" finished-at="2018-04-22T00:51:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_record_agentid()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="A3_record_agentid" duration-ms="47452" started-at="2018-04-22T00:51:27Z" finished-at="2018-04-22T00:52:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音agentid]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_record_agentid -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="62" started-at="2018-04-22T00:52:14Z" finished-at="2018-04-22T00:52:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_record_Join()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="A4_record_Join" duration-ms="46603" started-at="2018-04-22T00:52:14Z" finished-at="2018-04-22T00:53:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音Join]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_record_Join -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-04-22T00:53:01Z" finished-at="2018-04-22T00:53:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A5_record_AgentAnnouncement()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="A5_record_AgentAnnouncement" duration-ms="41622" started-at="2018-04-22T00:53:01Z" finished-at="2018-04-22T00:53:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000录制提示音AgentAnnouncement]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[    Pass: 生成自定义提示音]]>
            </line>
          </reporter-output>
        </test-method> <!-- A5_record_AgentAnnouncement -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-04-22T00:53:43Z" finished-at="2018-04-22T00:53:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_play()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="B_play" duration-ms="57295" started-at="2018-04-22T00:53:43Z" finished-at="2018-04-22T00:54:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000播放提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_play -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-04-22T00:54:40Z" finished-at="2018-04-22T00:54:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C_reRecord()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="C_reRecord" duration-ms="52174" started-at="2018-04-22T00:54:40Z" finished-at="2018-04-22T00:55:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 分机1000重新录制提示音prompt1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_reRecord -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T00:55:32Z" finished-at="2018-04-22T00:55:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D_upload()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="D_upload" duration-ms="12266" started-at="2018-04-22T00:55:32Z" finished-at="2018-04-22T00:55:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】 上传提示音autotestprompt]]>
            </line>
            <line>
              <![CDATA[    Pass: 导入提示音autotestprompt]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_upload -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-04-22T00:55:44Z" finished-at="2018-04-22T00:55:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E_MusicOnHold()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="E_MusicOnHold" duration-ms="21866" started-at="2018-04-22T00:55:44Z" finished-at="2018-04-22T00:56:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】选择Music on Hold提示音列表的第一个提示音，点击“Play”在1000播放]]>
            </line>
            <line>
              <![CDATA[    Pass: 等待音乐播放]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_MusicOnHold -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-04-22T00:56:06Z" finished-at="2018-04-22T00:56:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="F_CreateNewPlaylist()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="F_CreateNewPlaylist" duration-ms="18344" started-at="2018-04-22T00:56:06Z" finished-at="2018-04-22T00:56:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Autotest未自动显示 【预期：Autotest 实际：default】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Autotest未自动显示 【预期：Autotest 实际：default】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts.F_CreateNewPlaylist(VoicePrompts.java:227)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建一个新的Autotest]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\Autotest未自动显示 【预期：Autotest 实际：default】.jpg" target="_blank">Error: Autotest未自动显示 【预期：Autotest 实际：default】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_CreateNewPlaylist -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-04-22T00:56:25Z" finished-at="2018-04-22T00:56:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G_UploadMusicOnHold()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="G_UploadMusicOnHold" duration-ms="38572" started-at="2018-04-22T00:56:25Z" finished-at="2018-04-22T00:57:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】新的Autotest上传音乐molihua.wav]]>
            </line>
            <line>
              <![CDATA[    Pass: Autotest等待音乐播放]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_UploadMusicOnHold -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-04-22T00:57:03Z" finished-at="2018-04-22T00:57:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts@4a52ec]" name="AfterClass" is-config="true" duration-ms="13755" started-at="2018-04-22T00:57:03Z" finished-at="2018-04-22T00:57:17Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】执行完毕：======  VoicePrompts  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.VoicePrompts -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
