<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="36" total="468" passed="432">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 11时22分20秒开始执行：=======  Queue  =======]]>
    </line>
    <line>
      <![CDATA[  【11时22分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时22分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时22分48秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时22分51秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【11时22分53秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时22分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时23分02秒 执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【11时23分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【11时23分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【11时23分08秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【11时23分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时23分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时23分13秒 执行操作】deletes  删除所有Queue: 1]]>
    </line>
    <line>
      <![CDATA[  【11时23分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时23分18秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【11时23分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时23分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时23分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时23分27秒 执行操作】deleting  删除所有Queue: 0]]>
    </line>
    <line>
      <![CDATA[  【11时23分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时23分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【11时23分37秒 执行操作】添加队列a：6701]]>
    </line>
    <line>
      <![CDATA[  【11时23分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时23分41秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
    </line>
    <line>
      <![CDATA[  【11时23分42秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时23分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时23分45秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时23分46秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('56,53')]]>
    </line>
    <line>
      <![CDATA[  【11时23分48秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时23分50秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('Autotest')]]>
    </line>
    <line>
      <![CDATA[  【11时23分51秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时23分53秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时23分54秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时23分55秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[Default]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时23分56秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('ls_builtin_member_service')]]>
    </line>
    <line>
      <![CDATA[  【11时24分00秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时24分01秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
    </line>
    <line>
      <![CDATA[  【11时24分05秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时24分06秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时24分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时24分08秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分09秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时24分10秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【11时24分11秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时24分12秒 执行操作】添加队列队列6702：6702]]>
    </line>
    <line>
      <![CDATA[  【11时24分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时24分16秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
    </line>
    <line>
      <![CDATA[  【11时24分17秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时24分19秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分22秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分23秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时24分24秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时24分25秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分26秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时24分27秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分31秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时24分32秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分36秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时24分37秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时24分38秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('120')]]>
    </line>
    <line>
      <![CDATA[  【11时24分39秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时24分40秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('120')]]>
    </line>
    <line>
      <![CDATA[  【11时24分41秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时24分42秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时24分44秒 执行操作】添加队列FailtoExtension：6703]]>
    </line>
    <line>
      <![CDATA[  【11时24分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时24分48秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
    </line>
    <line>
      <![CDATA[  【11时24分49秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时24分51秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时24分52秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时24分56秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时24分57秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
    </line>
    <line>
      <![CDATA[  【11时24分58秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分01秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分02秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时25分03秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时25分04秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分05秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时25分06秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分10秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时25分11秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分15秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时25分16秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时25分17秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('120')]]>
    </line>
    <line>
      <![CDATA[  【11时25分18秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分19秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('120')]]>
    </line>
    <line>
      <![CDATA[  【11时25分20秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时25分21秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时25分22秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时25分23秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时25分28秒 执行操作】添加队列12345abcdefghijklmnopqrstuvwxyz：6704]]>
    </line>
    <line>
      <![CDATA[  【11时25分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时25分32秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('random')]]>
    </line>
    <line>
      <![CDATA[  【11时25分33秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【11时25分35秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时25分36秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('55')]]>
    </line>
    <line>
      <![CDATA[  【11时25分40秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时25分41秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
    </line>
    <line>
      <![CDATA[  【11时25分43秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时25分45秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分46秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时25分47秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时25分48秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分49秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时25分50秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分54秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时25分55秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时25分59秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时26分00秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时26分01秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时26分02秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时26分03秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时26分04秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('2')]]>
    </line>
    <line>
      <![CDATA[  【11时26分05秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【11时26分07秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时26分08秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('55')]]>
    </line>
    <line>
      <![CDATA[  【11时26分12秒 执行操作】添加队列*.*：6705]]>
    </line>
    <line>
      <![CDATA[  【11时26分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时26分16秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('rrmemory')]]>
    </line>
    <line>
      <![CDATA[  【11时26分17秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【11时26分19秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时26分20秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('14')]]>
    </line>
    <line>
      <![CDATA[  【11时26分24秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时26分25秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
    </line>
    <line>
      <![CDATA[  【11时26分26秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时26分29秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时26分30秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时26分31秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时26分32秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时26分33秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时26分34秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时26分38秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时26分39秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时26分43秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时26分44秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时26分45秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时26分46秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时26分47秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时26分48秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【11时26分49秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【11时26分50秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时26分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('14')]]>
    </line>
    <line>
      <![CDATA[  【11时26分56秒 执行操作】添加队列Queue6705：6706]]>
    </line>
    <line>
      <![CDATA[  【11时26分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时27分00秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('linear')]]>
    </line>
    <line>
      <![CDATA[  【11时27分01秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【11时27分03秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时27分04秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【11时27分08秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时27分11秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分12秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时27分13秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时27分14秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分15秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时27分16秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分20秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时27分21秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分25秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时27分26秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时27分27秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时27分28秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时27分29秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时27分30秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【11时27分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【11时27分32秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时27分33秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【11时27分37秒 执行操作】添加队列さようなら：6707]]>
    </line>
    <line>
      <![CDATA[  【11时27分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时27分41秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
    </line>
    <line>
      <![CDATA[  【11时27分42秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时27分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时27分45秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('21')]]>
    </line>
    <line>
      <![CDATA[  【11时27分50秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时27分52秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分54秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时27分55秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时27分56秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时27分57秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时27分58秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分02秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时28分03秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时28分08秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时28分09秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时28分10秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时28分11秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时28分12秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【11时28分13秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时28分14秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时28分15秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('21')]]>
    </line>
    <line>
      <![CDATA[  【11时28分19秒 执行操作】添加队列Досвидания：6708]]>
    </line>
    <line>
      <![CDATA[  【11时28分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时28分23秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
    </line>
    <line>
      <![CDATA[  【11时28分24秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【11时28分26秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时28分27秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('9')]]>
    </line>
    <line>
      <![CDATA[  【11时28分32秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时28分34秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分36秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时28分37秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时28分38秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分39秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时28分40秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时28分45秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时28分49秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时28分50秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时28分51秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时28分52秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时28分53秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时28分54秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('6')]]>
    </line>
    <line>
      <![CDATA[  【11时28分55秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【11时28分56秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时28分57秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('9')]]>
    </line>
    <line>
      <![CDATA[  【11时29分01秒 执行操作】添加队列viszontlátasra：6709]]>
    </line>
    <line>
      <![CDATA[  【11时29分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时29分06秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
    </line>
    <line>
      <![CDATA[  【11时29分07秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('D')]]>
    </line>
    <line>
      <![CDATA[  【11时29分09秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时29分11秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时29分13秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时29分14秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时29分15秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时29分16秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时29分17秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时29分21秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时29分22秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时29分26秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时29分27秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时29分28秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时29分29秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时29分30秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时29分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('7')]]>
    </line>
    <line>
      <![CDATA[  【11时29分32秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('D')]]>
    </line>
    <line>
      <![CDATA[  【11时29分33秒 执行操作】添加队列Autotest：6710]]>
    </line>
    <line>
      <![CDATA[  【11时29分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时29分37秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('leastrecent')]]>
    </line>
    <line>
      <![CDATA[  【11时29分38秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时29分40秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时29分41秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【11时29分45秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时29分46秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时29分47秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('50,55')]]>
    </line>
    <line>
      <![CDATA[  【11时29分49秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时29分51秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【11时29分52秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时29分53秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时29分54秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时29分55秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时29分57秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时30分01秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时30分02秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时30分06秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时30分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时30分08秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时30分09秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时30分10秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时30分11秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('8')]]>
    </line>
    <line>
      <![CDATA[  【11时30分12秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时30分13秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时30分14秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【11时30分18秒 执行操作】添加队列Queue_fewstcalls：6711]]>
    </line>
    <line>
      <![CDATA[  【11时30分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时30分22秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
    </line>
    <line>
      <![CDATA[  【11时30分23秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时30分25秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时30分27秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时30分28秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,55')]]>
    </line>
    <line>
      <![CDATA[  【11时30分29秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时30分31秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【11时30分33秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时30分34秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时30分35秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
    </line>
    <line>
      <![CDATA[  【11时30分36秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时30分37秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
    </line>
    <line>
      <![CDATA[  【11时30分41秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时30分42秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
    </line>
    <line>
      <![CDATA[  【11时30分46秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时30分47秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时30分48秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时30分49秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时30分50秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时30分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时30分52秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时30分53秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时30分54秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时30分58秒 执行操作】添加队列Queue_random：6712]]>
    </line>
    <line>
      <![CDATA[  【11时31分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时31分03秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('random')]]>
    </line>
    <line>
      <![CDATA[  【11时31分04秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时31分06秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时31分09秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【11时31分10秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时31分11秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时31分12秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时31分13秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时31分14秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时31分18秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时31分19秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
    </line>
    <line>
      <![CDATA[  【11时31分23秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时31分24秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时31分25秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时31分26秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时31分27秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时31分28秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时31分29秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时31分30秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时31分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时31分35秒 执行操作】添加队列Queue_rrmemory：6713]]>
    </line>
    <line>
      <![CDATA[  【11时31分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时31分40秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('rrmemory')]]>
    </line>
    <line>
      <![CDATA[  【11时31分41秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时31分43秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时31分44秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('56')]]>
    </line>
    <line>
      <![CDATA[  【11时31分45秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时31分48秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【11时31分49秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时31分50秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时31分51秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
    </line>
    <line>
      <![CDATA[  【11时31分52秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时31分53秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
    </line>
    <line>
      <![CDATA[  【11时31分57秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时31分58秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
    </line>
    <line>
      <![CDATA[  【11时32分02秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时32分03秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时32分04秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时32分05秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时32分06秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时32分07秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时32分08秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时32分09秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时32分10秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时32分14秒 执行操作】添加队列Queue_linear：6714]]>
    </line>
    <line>
      <![CDATA[  【11时32分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时32分19秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('linear')]]>
    </line>
    <line>
      <![CDATA[  【11时32分20秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【11时32分22秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时32分23秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时32分24秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时32分25秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,50,55')]]>
    </line>
    <line>
      <![CDATA[  【11时32分26秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
    </line>
    <line>
      <![CDATA[  【11时32分29秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【11时32分30秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时32分31秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时32分32秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
    </line>
    <line>
      <![CDATA[  【11时32分33秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时32分34秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
    </line>
    <line>
      <![CDATA[  【11时32分38秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
    </line>
    <line>
      <![CDATA[  【11时32分39秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
    </line>
    <line>
      <![CDATA[  【11时32分43秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时32分44秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【11时32分45秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时32分46秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【11时32分47秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
    </line>
    <line>
      <![CDATA[  【11时32分48秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【11时32分49秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【11时32分50秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时32分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【11时32分58秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【11时33分02秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【11时33分03秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【11时33分04秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【11时33分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时33分09秒 执行操作】deletes  删除所有呼入路由: 1]]>
    </line>
    <line>
      <![CDATA[  【11时33分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时33分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【11时33分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时33分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时33分54秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【11时33分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时33分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【11时33分56秒 执行操作】添加呼入路由：aDID：，Destination：a]]>
    </line>
    <line>
      <![CDATA[  【11时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分00秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时34分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分05秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时34分06秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时34分07秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时34分08秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('21')]]>
    </line>
    <line>
      <![CDATA[  【11时34分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分16秒 执行操作】添加呼入路由：队列6702DID：5503301，Destination：队列6702]]>
    </line>
    <line>
      <![CDATA[  【11时34分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分20秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时34分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分25秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时34分26秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时34分27秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "队列6702", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时34分28秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('22')]]>
    </line>
    <line>
      <![CDATA[  【11时34分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分36秒 执行操作】添加呼入路由：FailtoExtensionDID：5503302，Destination：FailtoExtension]]>
    </line>
    <line>
      <![CDATA[  【11时34分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时34分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时34分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时34分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时34分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "FailtoExtension", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时34分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('23')]]>
    </line>
    <line>
      <![CDATA[  【11时34分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时34分57秒 执行操作】添加呼入路由：12345abcdefghijklmnopqrstuvwxyzDID：5503303，Destination：12345abcdefghijklmnopqrstuvwxyz]]>
    </line>
    <line>
      <![CDATA[  【11时34分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时35分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时35分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时35分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "12345abcdefghijklmnopqrstuvwxyz", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时35分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('24')]]>
    </line>
    <line>
      <![CDATA[  【11时35分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分18秒 执行操作】添加呼入路由：*.*DID：5503304，Destination：*.*]]>
    </line>
    <line>
      <![CDATA[  【11时35分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时35分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分27秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时35分28秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时35分29秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "*.*", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时35分30秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【11时35分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分38秒 执行操作】添加呼入路由：Queue6705DID：5503305，Destination：Queue6705]]>
    </line>
    <line>
      <![CDATA[  【11时35分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时35分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时35分47秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时35分48秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时35分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue6705", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时35分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('26')]]>
    </line>
    <line>
      <![CDATA[  【11时35分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时35分59秒 执行操作】添加呼入路由：さようならDID：5503306，Destination：さようなら]]>
    </line>
    <line>
      <![CDATA[  【11时36分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时36分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时36分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分08秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时36分09秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时36分10秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "さようなら", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时36分11秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('27')]]>
    </line>
    <line>
      <![CDATA[  【11时36分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时36分19秒 执行操作】添加呼入路由：ДосвиданияDID：5503307，Destination：Досвидания]]>
    </line>
    <line>
      <![CDATA[  【11时36分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时36分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时36分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分28秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时36分29秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时36分30秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Досвидания", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时36分31秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('28')]]>
    </line>
    <line>
      <![CDATA[  【11时36分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时36分40秒 执行操作】添加呼入路由：viszontlátasraDID：5503308，Destination：viszontlátasra]]>
    </line>
    <line>
      <![CDATA[  【11时36分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时36分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时36分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时36分49秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时36分50秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时36分51秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "viszontlátasra", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时36分52秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('29')]]>
    </line>
    <line>
      <![CDATA[  【11时36分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分00秒 执行操作】添加呼入路由：AutotestDID：5503309，Destination：Autotest]]>
    </line>
    <line>
      <![CDATA[  【11时37分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时37分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分09秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时37分10秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时37分11秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Autotest", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时37分12秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【11时37分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分21秒 执行操作】添加呼入路由：Queue_fewstcallsDID：5503310，Destination：Queue_fewstcalls]]>
    </line>
    <line>
      <![CDATA[  【11时37分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时37分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分30秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时37分31秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时37分32秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_fewstcalls", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时37分33秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('31')]]>
    </line>
    <line>
      <![CDATA[  【11时37分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分41秒 执行操作】添加呼入路由：Queue_randomDID：5503311，Destination：Queue_random]]>
    </line>
    <line>
      <![CDATA[  【11时37分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时37分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时37分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分50秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时37分51秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时37分52秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时37分53秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_random", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时37分54秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('32')]]>
    </line>
    <line>
      <![CDATA[  【11时38分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时38分02秒 执行操作】添加呼入路由：Queue_rrmemoryDID：5503312，Destination：Queue_rrmemory]]>
    </line>
    <line>
      <![CDATA[  【11时38分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时38分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时38分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分12秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时38分13秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时38分14秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_rrmemory", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时38分15秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('33')]]>
    </line>
    <line>
      <![CDATA[  【11时38分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时38分23秒 执行操作】添加呼入路由：Queue_linearDID：5503313，Destination：Queue_linear]]>
    </line>
    <line>
      <![CDATA[  【11时38分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时38分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时38分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分31秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【11时38分32秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【11时38分33秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【11时38分34秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_linear", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【11时38分35秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('34')]]>
    </line>
    <line>
      <![CDATA[  【11时38分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时38分52秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【11时38分52秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【11时38分52秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【11时38分52秒 执行操作】注册分机1000/1100/1101/1102/1103/1105/3001/2000/2001]]>
    </line>
    <line>
      <![CDATA[  【11时38分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时39分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时40分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分48秒 执行操作】 2000拨打99999通过sps外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【11时41分53秒 执行操作】Answer Call  2  1100]]>
    </line>
    <line>
      <![CDATA[  【11时41分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时41分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时42分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时42分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时42分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时42分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时42分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时42分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时42分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时42分35秒 执行操作】 3001拨打3000通过sip外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【11时42分42秒 执行操作】Answer Call  11  1000]]>
    </line>
    <line>
      <![CDATA[  【11时42分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时42分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时43分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时43分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时43分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时43分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时43分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时43分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时43分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时43分24秒 执行操作】 2000拨打995503301通过sps外线呼入到队列6702，预期到Failover：Hangup]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会HangUp]]>
    </line>
    <line>
      <![CDATA[  【11时43分35秒 执行操作】 2000拨打995503302通过sps外线呼入到队列6703，预期到Failover：分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时43分51秒 执行操作】Answer Call  14  1000]]>
    </line>
    <line>
      <![CDATA[  【11时43分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时43分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时43分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时44分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时44分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时44分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时44分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时44分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时44分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时44分25秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时44分26秒 执行操作】 2000拨打995503303通过sps外线呼入到队列6704，预期到Failover：分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[  【11时45分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时45分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时45分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时45分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时45分29秒 执行操作】 分机1105登录，查看存在2000留下的语音留言]]>
    </line>
    <line>
      <![CDATA[  【11时45分46秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【11时45分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时45分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时45分54秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时46分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时46分06秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【11时46分07秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【11时46分08秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【11时46分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时46分13秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时46分14秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时46分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【11时46分16秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为2000(2000)]]>
    </line>
    <line>
      <![CDATA[  【11时46分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时46分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时46分50秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时46分53秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【11时46分55秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时46分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时46分57秒 执行操作】 2000拨打995503304通过sps外线呼入到队列6705，预期到Failover：IVR1，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时47分17秒 执行操作】Answer Call  17  1000]]>
    </line>
    <line>
      <![CDATA[  【11时47分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时47分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时47分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时47分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时47分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时47分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时47分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时47分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时47分47秒 执行操作】 2000拨打995503305通过sps外线呼入到队列6706，预期到Failover：RingGroup，所有成员1000、1100、1105同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时48分01秒 执行操作】Answer Call  19  1100]]>
    </line>
    <line>
      <![CDATA[  【11时48分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时48分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时48分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时48分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时48分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时48分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时48分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时48分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时48分32秒 执行操作】 2000拨打995503306通过sps外线呼入到队列6707，预期到Failover：Queue6701，所有成员都同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【11时48分47秒 执行操作】Answer Call  26  1103]]>
    </line>
    <line>
      <![CDATA[  【11时48分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时48分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时48分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时49分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时49分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时49分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时49分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时49分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时49分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时49分41秒 执行操作】 2000拨打995503307通过sps外线呼入到队列6708，预期Failover：Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会Talking]]>
    </line>
    <line>
      <![CDATA[  【11时50分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时50分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时50分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时50分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时50分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时50分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时50分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时50分33秒 执行操作】 2000拨打995503308通过sps外线呼入到队列6709，预期Failover：DialByName]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【11时51分02秒 执行操作】Answer Call  30  1103]]>
    </line>
    <line>
      <![CDATA[  【11时51分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时51分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时51分28秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701，按0，预期被挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会HangUp]]>
    </line>
    <line>
      <![CDATA[  【11时51分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时51分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时51分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时51分59秒 执行操作】 2000拨打995503302通过sps外线呼入到队列6703，按1，预期分机1000响铃，接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时52分11秒 执行操作】Answer Call  6  1000]]>
    </line>
    <line>
      <![CDATA[  【11时52分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时52分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时52分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时52分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时52分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时52分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时52分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时52分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时52分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时52分43秒 执行操作】 2001拨打995503303通过sps外线呼入到队列6704，按2，预期到分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[  【11时53分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时53分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时53分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时53分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时53分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时53分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时53分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时53分42秒 执行操作】 分机1105登录，查看存在2001留下的语音留言]]>
    </line>
    <line>
      <![CDATA[  【11时54分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分06秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时54分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分18秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【11时54分19秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【11时54分20秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【11时54分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分31秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时54分32秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【11时54分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【11时54分35秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 语音留言检查:预期第2行的CallerID为2001(2001)]]>
    </line>
    <line>
      <![CDATA[  【11时54分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时54分58秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时55分02秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【11时55分03秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时55分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时55分06秒 执行操作】 2000拨打995503304通过sps外线呼入到队列6705，按3，预期到IVR1，按1到分机1000，接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时55分22秒 执行操作】Answer Call  9  1000]]>
    </line>
    <line>
      <![CDATA[  【11时55分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时55分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时55分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时55分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时55分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时55分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时55分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时55分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时55分52秒 执行操作】 2000拨打995503305通过sps外线呼入到队列6706，按4，预期到RingGroup1，分机1000、1100、1105同时响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[  【11时56分03秒 执行操作】Answer Call  12  1100]]>
    </line>
    <line>
      <![CDATA[  【11时56分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时56分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时56分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时56分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时56分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时56分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时56分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时56分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时56分37秒 执行操作】 2000拨打995503306通过sps外线呼入到队列6707，按5，预期到Queue：a，所有成员同时响铃，分机1101接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【11时56分51秒 执行操作】Answer Call  17  1101]]>
    </line>
    <line>
      <![CDATA[  【11时56分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【11时57分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时57分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时57分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时57分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时57分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时57分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时57分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时57分29秒 执行操作】 2000拨打995503307通过sps外线呼入到队列6708，按6，预期到Conference1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Talking]]>
    </line>
    <line>
      <![CDATA[  【11时58分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时58分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时58分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时58分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时58分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时58分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时58分19秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时58分20秒 执行操作】 2000拨打995503308通过sps外线呼入到队列6709，按7，预期到DialbyName，按957，按1确认，分机1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【11时58分47秒 执行操作】Answer Call  22  1103]]>
    </line>
    <line>
      <![CDATA[  【11时59分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【11时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【11时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【11时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【11时59分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【11时59分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【11时59分13秒 执行操作】 1102拨打6701*加入队列6701，密码：空]]>
    </line>
    <line>
      <![CDATA[  【11时59分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102]]>
    </line>
    <line>
      <![CDATA[  【11时59分27秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期所有坐席同时响铃，1102接听]]>
    </line>
    <line>
      <![CDATA[  【11时59分38秒 执行操作】F2_dynamic_call6701 分机通话状态 预期1000 1100 1101 1102 1103 1105会同时Ring 222222]]>
    </line>
    <line>
      <![CDATA[  【11时59分38秒 执行操作】Answer Call  25  1102]]>
    </line>
    <line>
      <![CDATA[  【11时59分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时00分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时00分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时00分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时00分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时00分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时00分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时00分27秒 执行操作】 1102拨打6701**退出队列6701]]>
    </line>
    <line>
      <![CDATA[  【12时00分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102退出队列6701]]>
    </line>
    <line>
      <![CDATA[  【12时00分40秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期1102不会响铃，其它坐席同时响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[  【12时00分46秒 执行操作】F4_dynamic_call6701 分机通话状态 预期1000 1100 1101 1103 1105会同时Ring 22222]]>
    </line>
    <line>
      <![CDATA[  【12时00分46秒 执行操作】F4_dynamic_call6701 分机通话状态 预期1102不会同时Ring 4]]>
    </line>
    <line>
      <![CDATA[  【12时00分46秒 执行操作】Answer Call  1  1103]]>
    </line>
    <line>
      <![CDATA[  【12时00分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时00分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时01分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时01分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时01分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时01分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时01分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时01分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时01分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时01分32秒 执行操作】 1103拨打6710*加入队列6710，密码123]]>
    </line>
    <line>
      <![CDATA[  【12时01分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时01分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时01分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1103输入密码123]]>
    </line>
    <line>
      <![CDATA[  【12时01分48秒 执行操作】 1102拨打6711*加入队列6711，密码123]]>
    </line>
    <line>
      <![CDATA[  【12时01分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时01分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时01分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1102输入密码123]]>
    </line>
    <line>
      <![CDATA[  【12时02分04秒 执行操作】 1101拨打6712*加入队列6712，密码1234567890]]>
    </line>
    <line>
      <![CDATA[  【12时02分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时02分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时02分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1101输入密码1234567890]]>
    </line>
    <line>
      <![CDATA[  【12时02分28秒 执行操作】 1101拨打6713*加入队列6713，密码1--1101已经是该队列的静态坐席]]>
    </line>
    <line>
      <![CDATA[  【12时02分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时02分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时02分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1101输入密码1]]>
    </line>
    <line>
      <![CDATA[  【12时02分44秒 执行操作】 1101拨打6714*加入队列6714，密码0]]>
    </line>
    <line>
      <![CDATA[  【12时02分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1101输入密码0]]>
    </line>
    <line>
      <![CDATA[  【12时02分54秒 执行操作】 1103拨打6714*加入队列6714，密码0]]>
    </line>
    <line>
      <![CDATA[  【12时02分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时02分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时03分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时03分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时03分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 动态坐席1103输入密码0]]>
    </line>
    <line>
      <![CDATA[  【12时03分16秒 执行操作】 2000拨打995503313通过sps外线呼入，预期呼入到队列6714,2000会听到进入队列的提示音Join，无坐席应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000呼入时播放提示音“Join”]]>
    </line>
    <line>
      <![CDATA[  【12时03分30秒 执行操作】 2000拨打999999通过sps外线呼入，预期呼入到队列6701，预期播放Music on Hold：Autotest]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000呼入时播放Music on hold ：Autotest]]>
    </line>
    <line>
      <![CDATA[  【12时03分36秒 执行操作】 1103拨打6710呼入队列6710，预期播放Music on Hold：default]]>
    </line>
    <line>
      <![CDATA[    Pass: 1103呼入6710时播放Music on hold ：default]]>
    </line>
    <line>
      <![CDATA[  【12时03分39秒 执行操作】 坐席播报工号提示音----AMI未打印相关信息------请手动测试]]>
    </line>
    <line>
      <![CDATA[  【12时03分42秒 执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，1100先挂断，预期2000会听到满意度调查提示音：satisfaction]]>
    </line>
    <line>
      <![CDATA[  【12时03分47秒 执行操作】G5_Satisfaction 预期1000 1100 1101 1105 1103会同时Ring 22222]]>
    </line>
    <line>
      <![CDATA[  【12时03分47秒 执行操作】Answer Call  24  1100]]>
    </line>
    <line>
      <![CDATA[  【12时03分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】.jpg" target="_blank">Error: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时05分49秒 执行操作】 用户公告----AMI未打印相关信息---请手动测试]]>
    </line>
    <line>
      <![CDATA[  【12时05分49秒 执行操作】 系统公告----AMI未打印相关信息---请手动测试 ]]>
    </line>
    <line>
      <![CDATA[  【12时05分49秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701，坐席响铃15s后挂断，20s左右会再次响铃,坐席循环第3次响铃时，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101会同时Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101会同时Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时06分01秒 执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，挂断；再次呼入队列，预期1100会马上响铃（warp time：0）]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1100会同时Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1100会同时Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时06分06秒 执行操作】 2000拨打995503311呼入到队列6712，动态坐席1101应答后，挂断；再次呼入队列，预期1101不会马上响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时06分32秒 执行操作】 2000拨打995503309呼入到队列6710，预期1103第1个响铃，无应答，1103会再次响铃，应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会Ring]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1103结束Ring，约响铃10s 【预期：4 实际：2】.jpg" target="_blank">Error: 预期1103结束Ring，约响铃10s 【预期：4 实际：2】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时06分50秒 执行操作】 2000再次拨打995503309呼入到队列6710，预期1105第1个响铃，接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[  【12时06分51秒 执行操作】Answer Call  25  1105]]>
    </line>
    <line>
      <![CDATA[  【12时06分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时07分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时07分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时07分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时07分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时07分29秒 执行操作】 2000再次拨打995503309呼入到队列6710，预期1100第1个响铃，接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1100会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1100会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时07分53秒 执行操作】 2000拨打995503310呼入到队列6711，预期1102响铃，无应答，1102会再次响铃，应答]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1102会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时08分15秒 执行操作】 2000拨打995503310再次呼入到队列6711，预期1105响铃，接听保持通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1105会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1105会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时08分36秒 执行操作】 2000拨打995503310再次呼入队列6711，预期1000响铃，接听保持通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000会Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时08分58秒 执行操作】 响铃策略：random没有规律，无法自动化测试--请手动验证]]>
    </line>
    <line>
      <![CDATA[  【12时08分58秒 执行操作】 2000拨打995503312呼入到队列6713，预期1000第1个响铃,轮到1101响铃时接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000会第1个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000会第1个Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时09分20秒 执行操作】 2000拨打995503312呼入到队列6713，预期1105第一个响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会Ring]]>
    </line>
    <line>
      <![CDATA[  【12时09分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时09分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时09分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时09分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时09分51秒 执行操作】 2000拨打995503313通过sps外线呼入到队列6714，预期按线性响铃，1100第2次响铃时接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000第1个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000第1个Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时10分20秒 执行操作】 2000拨打995503313通过sps外线再次呼入到队列6714，预期按线性响铃，1103接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000第1个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100第2个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105第3个Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101第4个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101第4个Ring 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时11分55秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701,1100接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【12时12分01秒 执行操作】Answer Call  21  1100]]>
    </line>
    <line>
      <![CDATA[  【12时12分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100在Talking]]>
    </line>
    <line>
      <![CDATA[  【12时12分06秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701,1103接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【12时12分21秒 执行操作】Answer Call  29  1103]]>
    </line>
    <line>
      <![CDATA[  【12时12分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时12分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时12分28秒 执行操作】 1102拨打6701呼入到队列6701,1105接听并保持通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101会同时Ring]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会同时Ring]]>
    </line>
    <line>
      <![CDATA[  【12时12分36秒 执行操作】Answer Call  2  1105]]>
    </line>
    <line>
      <![CDATA[  【12时12分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时12分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时12分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时13分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时13分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时13分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时13分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时13分31秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时13分32秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时13分33秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时13分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时13分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【12时14分03秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时14分05秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时14分05秒 执行操作】 编辑队列6702，MaxWaitTime：1800，LeaveWhenEmpty：启用，JoinEmpty：启用]]>
    </line>
    <line>
      <![CDATA[  【12时14分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时14分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时14分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时14分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时14分29秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时14分30秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时14分41秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【12时14分42秒 执行操作】 编辑队列6702，LeaveWhenEmpty：启用，JoinEmpty：不启用]]>
    </line>
    <line>
      <![CDATA[  【12时14分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时14分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时14分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时14分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时14分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时14分59秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时15分00秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时15分11秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【12时15分12秒 执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：不启用]]>
    </line>
    <line>
      <![CDATA[  【12时15分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时15分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时15分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时15分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时15分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时15分29秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时15分30秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时15分41秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【12时15分47秒 执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：启用]]>
    </line>
    <line>
      <![CDATA[  【12时15分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时15分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时15分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时15分57秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时16分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时16分04秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时16分05秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时16分16秒 执行操作】 1102拨打6702，预期：1102不会被直接挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1102不会被直接挂断]]>
    </line>
    <line>
      <![CDATA[  【12时16分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【12时16分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(50)]]>
    </line>
    <line>
      <![CDATA[  【12时16分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时16分45秒 执行操作】 表格删除：队列6702-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时16分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时16分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时16分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时16分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时16分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【12时17分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时17分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：队列6702-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分04秒 执行操作】 表格删除：队列6702-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【12时17分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时17分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：queue6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分17秒 执行操作】 删除：Досвидания-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时17分19秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时17分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[4].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[5].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[6].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时17分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时17分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时17分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Досвидания-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分36秒 执行操作】 删除：Досвидания-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时17分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Досвидания-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时17分49秒 执行操作】 恢复初始化环境]]>
    </line>
    <line>
      <![CDATA[  【12时17分49秒 执行操作】 删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【12时17分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【12时17分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【12时17分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时17分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时18分01秒 执行操作】deletes  删除所有Queue: 12]]>
    </line>
    <line>
      <![CDATA[  【12时18分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时18分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【12时18分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分45秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时18分45秒 执行操作】deleting  删除所有Queue: 0]]>
    </line>
    <line>
      <![CDATA[  【12时18分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时18分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Queue]]>
    </line>
    <line>
      <![CDATA[  【12时18分47秒 执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
    </line>
    <line>
      <![CDATA[  【12时18分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时18分51秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时18分52秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时18分53秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时18分54秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,50,55')]]>
    </line>
    <line>
      <![CDATA[  【12时18分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时18分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时19分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时19分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分06秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【12时19分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【12时19分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【12时19分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时19分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时19分17秒 执行操作】deletes  删除所有呼入路由: 14]]>
    </line>
    <line>
      <![CDATA[  【12时19分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时19分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【12时19分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时19分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时20分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时20分02秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【12时20分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时20分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【12时20分04秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【12时20分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时20分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时20分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【12时20分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【12时20分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【12时20分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【12时20分13秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【12时20分14秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时20分15秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时20分16秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时20分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 12时20分32秒执行完毕：=======  Queue  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 12时20分50秒开始执行：=======  PagingGroup & Intercom  =======]]>
    </line>
    <line>
      <![CDATA[  【12时21分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时21分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时21分17秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时21分20秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【12时21分22秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时21分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时21分25秒 执行操作】 注册分机1000、1100、1103、1105、2000]]>
    </line>
    <line>
      <![CDATA[  【12时21分25秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【12时21分25秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【12时21分25秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【12时21分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时21分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时21分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时21分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时21分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时21分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时22分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时22分02秒 执行操作】 设置对讲的特征码为*5]]>
    </line>
    <line>
      <![CDATA[  【12时22分08秒 执行操作】Extjs： Ext.getCmp('st-feature-enbintercom').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时22分11秒 执行操作】 初始化广播组设置：删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【12时22分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分16秒 执行操作】 删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【12时22分20秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【12时22分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【12时22分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时22分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时22分27秒 执行操作】deletes  删除所有广播组: 2]]>
    </line>
    <line>
      <![CDATA[  【12时22分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时22分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【12时22分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时22分41秒 执行操作】deleting  删除所有广播组: 0]]>
    </line>
    <line>
      <![CDATA[  【12时22分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时22分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有广播组]]>
    </line>
    <line>
      <![CDATA[  【12时22分45秒 执行操作】 新建广播组Paging6300--单工、不启用*Answer、成员分机：1100、1105]]>
    </line>
    <line>
      <![CDATA[  【12时22分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分49秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('paging')]]>
    </line>
    <line>
      <![CDATA[  【12时22分50秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时22分51秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时22分52秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时22分53秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,55')]]>
    </line>
    <line>
      <![CDATA[  【12时22分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时22分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时23分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时23分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分04秒 执行操作】 新建广播组AutoPag6301--双工、启用*Answer、成员：ExtensionGroup1]]>
    </line>
    <line>
      <![CDATA[  【12时23分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分08秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('intercom')]]>
    </line>
    <line>
      <![CDATA[  【12时23分09秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时23分10秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分11秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('56')]]>
    </line>
    <line>
      <![CDATA[  【12时23分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时23分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时23分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分21秒 执行操作】 新建广播组NewPage6302--双工、不启用*Answer、成员分机：1100、1103、1105]]>
    </line>
    <line>
      <![CDATA[  【12时23分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分26秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('intercom')]]>
    </line>
    <line>
      <![CDATA[  【12时23分27秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时23分28秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分29秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分30秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分31秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,53,55')]]>
    </line>
    <line>
      <![CDATA[  【12时23分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时23分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时23分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分41秒 执行操作】 新建广播组Paging6303--单工、启用*Answer、成员1100、1105]]>
    </line>
    <line>
      <![CDATA[  【12时23分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分45秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('paging')]]>
    </line>
    <line>
      <![CDATA[  【12时23分46秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时23分47秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分48秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时23分49秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,55')]]>
    </line>
    <line>
      <![CDATA[  【12时23分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时23分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时23分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时23分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时24分08秒 执行操作】 1000拨打*716300将通话总是转移到广播组6300]]>
    </line>
    <line>
      <![CDATA[  【12时24分16秒 执行操作】 1000拨打6300--预期分机1100、1105自动应答，AMI不会打印,d]]>
    </line>
    <line>
      <![CDATA[  【12时24分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时24分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期：AMI不会打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【12时25分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时25分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时25分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时25分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时25分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时25分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时25分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时25分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时25分14秒 执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答，AMI打印,d]]>
    </line>
    <line>
      <![CDATA[  【12时25分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期：AMI会打印,d]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【12时25分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时25分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时25分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时25分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时26分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时26分09秒 执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答后，1105按*Answer，1100、1101自动被挂断]]>
    </line>
    <line>
      <![CDATA[  【12时26分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【12时26分23秒 执行操作】 1105按*Answer--预期1100、1101会挂断通话]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1101--Hungup]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【12时26分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时26分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时26分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时26分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时26分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时26分52秒 执行操作】 1000拨打6302--预期分机1100、1103、1105自动应答，1105按*，分机1100、1103不会被挂断]]>
    </line>
    <line>
      <![CDATA[    Error:  1100、1103、1105自动应答失败]]>
    </line>
    <line>
      <![CDATA[  【12时27分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时27分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时27分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时27分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时27分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
    </line>
    <line>
      <![CDATA[  【12时27分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时27分32秒 执行操作】 2000拨打99999通过sps外线呼入到分机1000，总是转移到广播组6300，预期：分机1100、1105自动应答]]>
    </line>
    <line>
      <![CDATA[    Pass:  1100--Talking]]>
    </line>
    <line>
      <![CDATA[    Pass:  1105--Talking]]>
    </line>
    <line>
      <![CDATA[  【12时28分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时28分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时28分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时28分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分14秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时28分15秒 执行操作】 1000拨打*51105，1105自动应答]]>
    </line>
    <line>
      <![CDATA[  【12时28分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时28分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时28分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时28分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时28分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时28分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时28分51秒 执行操作】 编辑对讲的特征码为*055]]>
    </line>
    <line>
      <![CDATA[  【12时28分57秒 执行操作】Extjs： Ext.getCmp('st-feature-enbintercom').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时29分09秒 执行操作】 1000拨打*0551105，预期1105自动应答]]>
    </line>
    <line>
      <![CDATA[  【12时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass: 1105预期：自动应答]]>
    </line>
    <line>
      <![CDATA[  【12时29分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时29分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时29分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时29分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时29分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时29分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时29分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').plugins[0].setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【12时29分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.setPageSize(25)]]>
    </line>
    <line>
      <![CDATA[  【12时29分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时29分53秒 执行操作】 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时29分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时29分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时29分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时30分02秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【12时30分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时30分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分09秒 执行操作】 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【12时30分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时30分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分23秒 执行操作】 删除：AutoPag6301-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时30分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时30分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时30分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时30分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时30分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：AutoPag6301-取消删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分33秒 执行操作】 删除：AutoPag6301-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时30分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：AutoPag6301-确定删除]]>
    </line>
    <line>
      <![CDATA[  【12时30分46秒 执行操作】 1000拨打*071将通话总是转移到广播组6300]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 12时30分53秒执行完毕：=======  PagingGroup & Intercom  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 12时31分10秒开始执行：=======  IVR  =======]]>
    </line>
    <line>
      <![CDATA[  【12时31分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时31分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时31分36秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时31分40秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【12时31分41秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时31分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时31分44秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【12时31分44秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【12时31分44秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【12时31分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时31分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时32分40秒 执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【12时32分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【12时32分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【12时32分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时32分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时32分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时32分51秒 执行操作】deletes  删除所有IVR: 1]]>
    </line>
    <line>
      <![CDATA[  【12时32分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时32分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【12时32分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时33分05秒 执行操作】deleting  删除所有IVR: 0]]>
    </line>
    <line>
      <![CDATA[  【12时33分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时33分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【12时33分07秒 执行操作】添加IVR：a：6501]]>
    </line>
    <line>
      <![CDATA[  【12时33分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分11秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【12时33分13秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时33分14秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时33分15秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时33分17秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【12时33分18秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('D')]]>
    </line>
    <line>
      <![CDATA[  【12时33分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分22秒 执行操作】添加IVR：Yeastar202Yeastar202：6502]]>
    </line>
    <line>
      <![CDATA[  【12时33分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分26秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【12时33分27秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时33分28秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时33分29秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时33分30秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【12时33分31秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【12时33分32秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【12时33分33秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
    </line>
    <line>
      <![CDATA[  【12时33分35秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时33分37秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时33分38秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【12时33分39秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时33分40秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时33分44秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('name', "Callback1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时33分45秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('25')]]>
    </line>
    <line>
      <![CDATA[  【12时33分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分53秒 执行操作】添加IVR：12345abcdefghijklmnopqrstuvwxyz：6503]]>
    </line>
    <line>
      <![CDATA[  【12时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时33分57秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('1')]]>
    </line>
    <line>
      <![CDATA[  【12时33分58秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时33分59秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时34分00秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时34分03秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【12时34分04秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('d')]]>
    </line>
    <line>
      <![CDATA[  【12时34分05秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时34分06秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('55')]]>
    </line>
    <line>
      <![CDATA[  【12时34分10秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时34分11秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【12时34分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时34分18秒 执行操作】添加IVR：*.*：6504]]>
    </line>
    <line>
      <![CDATA[  【12时34分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时34分22秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('2')]]>
    </line>
    <line>
      <![CDATA[  【12时34分23秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时34分24秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时34分25秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时34分26秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【12时34分27秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【12时34分28秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【12时34分29秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
    </line>
    <line>
      <![CDATA[  【12时34分30秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时34分33秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【12时34分34秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时34分35秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时34分36秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('15')]]>
    </line>
    <line>
      <![CDATA[  【12时34分40秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时34分41秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时34分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时34分48秒 执行操作】添加IVR：IVR6505：6505]]>
    </line>
    <line>
      <![CDATA[  【12时34分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时34分52秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【12时34分53秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时34分54秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时34分55秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时34分58秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【12时34分59秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时35分00秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时35分01秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【12时35分05秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时35分06秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时35分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时35分13秒 执行操作】添加IVR：さようなら：6506]]>
    </line>
    <line>
      <![CDATA[  【12时35分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时35分17秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【12时35分19秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时35分20秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时35分21秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时35分22秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分23秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分24秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分25秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
    </line>
    <line>
      <![CDATA[  【12时35分26秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时35分28秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【12时35分29秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时35分30秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时35分31秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【12时35分35秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时35分36秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时35分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时35分43秒 执行操作】添加IVR：Досвидания：6507]]>
    </line>
    <line>
      <![CDATA[  【12时35分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时35分47秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【12时35分49秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时35分50秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时35分51秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时35分52秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分53秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分54秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【12时35分55秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
    </line>
    <line>
      <![CDATA[  【12时35分56秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时35分58秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【12时35分59秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时36分00秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时36分01秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('9')]]>
    </line>
    <line>
      <![CDATA[  【12时36分05秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时36分06秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时36分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时36分13秒 执行操作】添加IVR：viszontlátasra：6508]]>
    </line>
    <line>
      <![CDATA[  【12时36分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时36分17秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【12时36分19秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时36分20秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【12时36分21秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【12时36分23秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('p')]]>
    </line>
    <line>
      <![CDATA[  【12时36分24秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时36分25秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时36分26秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【12时36分30秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时36分31秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【12时36分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时36分39秒 执行操作】 编辑IVR：Yeastar202Yeastar202，Prompt：选择prompt1，按2到Voicemail:1105，按3到RingGroup1，按4到Queue1，按5到Conference1，按6到prompt1，按7到分机到IVR：*.*，按8到1106（fxs），按9到Dial by Name，按#到分机1100，按*到分机1101，Timeout到分机1102，Invalid到prompt1]]>
    </line>
    <line>
      <![CDATA[  【12时36分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时36分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时36分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时36分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时36分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时36分54秒 执行操作】Extjs： Ext.getCmp('st-ivr-prompt0').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【12时36分57秒 执行操作】Extjs： Ext.getCmp('key2action').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【12时36分58秒 执行操作】Extjs： Ext.getCmp('key3action').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【12时36分59秒 执行操作】Extjs： Ext.getCmp('key4action').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【12时37分00秒 执行操作】Extjs： Ext.getCmp('key5action').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【12时37分01秒 执行操作】Extjs： Ext.getCmp('key6action').setValue('p')]]>
    </line>
    <line>
      <![CDATA[  【12时37分02秒 执行操作】Extjs： Ext.getCmp('key7action').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【12时37分03秒 执行操作】Extjs： Ext.getCmp('key8action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时37分04秒 执行操作】Extjs： Ext.getCmp('key9action').setValue('D')]]>
    </line>
    <line>
      <![CDATA[  【12时37分05秒 执行操作】Extjs： Ext.getCmp('keysharpaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时37分06秒 执行操作】Extjs： Ext.getCmp('keystaraction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时37分07秒 执行操作】Extjs： Ext.getCmp('timeoutaction').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【12时37分08秒 执行操作】Extjs： Ext.getCmp('invalidaction').setValue('p')]]>
    </line>
    <line>
      <![CDATA[  【12时37分09秒 执行操作】Extjs： return  Ext.getCmp('key2dest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分10秒 执行操作】Extjs： Ext.getCmp('key2dest').setValue('55')]]>
    </line>
    <line>
      <![CDATA[  【12时37分14秒 执行操作】Extjs： return  Ext.getCmp('key3dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分16秒 执行操作】Extjs： Ext.getCmp('key3dest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【12时37分20秒 执行操作】Extjs： return  Ext.getCmp('key4dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分21秒 执行操作】Extjs： Ext.getCmp('key4dest').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【12时37分25秒 执行操作】Extjs： return  Ext.getCmp('key5dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分26秒 执行操作】Extjs： Ext.getCmp('key5dest').setValue('9')]]>
    </line>
    <line>
      <![CDATA[  【12时37分30秒 执行操作】Extjs： return  Ext.getCmp('key6dest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分31秒 执行操作】Extjs： Ext.getCmp('key6dest').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【12时37分35秒 执行操作】Extjs： return  Ext.getCmp('key7dest').getStore().findRecord('name', "*.*", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分36秒 执行操作】Extjs： Ext.getCmp('key7dest').setValue('18')]]>
    </line>
    <line>
      <![CDATA[  【12时37分40秒 执行操作】Extjs： return  Ext.getCmp('keysharpdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分41秒 执行操作】Extjs： Ext.getCmp('keysharpdest').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【12时37分45秒 执行操作】Extjs： return  Ext.getCmp('keystardest').getStore().findRecord('username', "1101", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分46秒 执行操作】Extjs： Ext.getCmp('keystardest').setValue('51')]]>
    </line>
    <line>
      <![CDATA[  【12时37分50秒 执行操作】Extjs： return  Ext.getCmp('timeoutdest').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分51秒 执行操作】Extjs： Ext.getCmp('timeoutdest').setValue('52')]]>
    </line>
    <line>
      <![CDATA[  【12时37分55秒 执行操作】Extjs： return  Ext.getCmp('invaliddest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时37分56秒 执行操作】Extjs： Ext.getCmp('invaliddest').setValue('prompt1')]]>
    </line>
    <line>
      <![CDATA[  【12时38分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时38分03秒 执行操作】 编辑呼入路由InRoute1，到IVR：Yeastar202Yeastar202]]>
    </line>
    <line>
      <![CDATA[  【12时38分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时38分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【12时38分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【12时38分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时38分19秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【12时38分20秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Yeastar202Yeastar202", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【12时38分21秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('16')]]>
    </line>
    <line>
      <![CDATA[  【12时38分33秒 执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时38分59秒 执行操作】Answer Call  1  1000]]>
    </line>
    <line>
      <![CDATA[  【12时39分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时39分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时39分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时39分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时39分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时39分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时39分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时39分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时39分33秒 执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时40分04秒 执行操作】Answer Call  3  1100]]>
    </line>
    <line>
      <![CDATA[  【12时40分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时40分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时40分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时40分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时40分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时40分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时40分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时40分37秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时40分38秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按1到Callback1]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时41分02秒 执行操作】Answer Call  5  2000]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时41分03秒 执行操作】Answer Call  6  1000]]>
    </line>
    <line>
      <![CDATA[  【12时41分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时41分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时41分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时41分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时41分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时41分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时41分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时41分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时41分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时41分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时41分42秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按2到1105的Voicemail]]>
    </line>
    <line>
      <![CDATA[  【12时42分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时42分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时42分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时42分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时42分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时42分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时42分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时42分50秒 执行操作】 1105登录查看存在CallerID为2000的语音留言]]>
    </line>
    <line>
      <![CDATA[  【12时43分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时43分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时43分14秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时43分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时43分26秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【12时43分27秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【12时43分28秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【12时43分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时43分33秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时43分35秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【12时43分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】.jpg" target="_blank">Error: 语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时43分37秒 执行操作】 admin重新登录]]>
    </line>
    <line>
      <![CDATA[  【12时43分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时43分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时44分01秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时44分02秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按3到RingGroup1,1100应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时44分21秒 执行操作】Answer Call  10  1100]]>
    </line>
    <line>
      <![CDATA[  【12时44分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时44分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时44分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时44分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时44分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时44分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时44分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时44分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时44分52秒 执行操作】 2000拨打99999通过sps外线呼入到IVR:6502，按4到Queue1，1105应答]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时45分01秒 执行操作】Answer Call  13  1105]]>
    </line>
    <line>
      <![CDATA[  【12时45分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时45分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时45分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时45分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时45分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时45分30秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按5到Conference1]]>
    </line>
    <line>
      <![CDATA[  【12时45分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时45分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时46分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时46分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时46分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时46分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时46分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时46分08秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按6到prompt1,提示音播放完就挂断]]>
    </line>
    <line>
      <![CDATA[  【12时47分19秒 执行操作】Q_IVRtoCustomCall TcpSocket return: false]]>
    </line>
    <line>
      <![CDATA[  【12时47分29秒 执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[    Error: 预期2000会挂断,实际4]]>
    </line>
    <line>
      <![CDATA[  【12时47分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时47分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时47分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时47分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时47分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时47分54秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时47分55秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按7到IVR6504：*.*，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【12时48分11秒 执行操作】 2000按1到分机1000]]>
    </line>
    <line>
      <![CDATA[    Error: 预期1000会响铃 实际：2]]>
    </line>
    <line>
      <![CDATA[  【12时48分18秒 执行操作】Answer Call  19  1000]]>
    </line>
    <line>
      <![CDATA[  【12时48分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时48分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时48分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时48分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时48分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时48分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时48分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时48分44秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按9到DialByName按957到分机1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时49分20秒 执行操作】Answer Call  21  1103]]>
    </line>
    <line>
      <![CDATA[  【12时49分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时49分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时49分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时49分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时49分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时49分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时49分49秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时49分58秒 执行操作】Answer Call  23  1100]]>
    </line>
    <line>
      <![CDATA[  【12时50分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时50分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时50分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时50分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时50分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时50分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时50分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时50分25秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按*到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1101为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时50分47秒 执行操作】Answer Call  25  1101]]>
    </line>
    <line>
      <![CDATA[  【12时51分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时51分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时51分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时51分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时51分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时51分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时51分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时51分13秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，Timeout到分机1102]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102为Ring状态 【预期：2 实际：0】.jpg" target="_blank">Error: 预期1102为Ring状态 【预期：2 实际：0】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时53分45秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按A到Custom Prompt：prompt1]]>
    </line>
    <line>
      <![CDATA[  【12时55分09秒 执行操作】2000的通话状态1：3]]>
    </line>
    <line>
      <![CDATA[  【12时55分14秒 执行操作】Q_IVRtoCustomCall TcpSocket return: true]]>
    </line>
    <line>
      <![CDATA[  【12时55分22秒 执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[  【12时55分23秒 执行操作】2000的通话状态2：3]]>
    </line>
    <line>
      <![CDATA[  【12时55分28秒 执行操作】Answer Call  29  1000]]>
    </line>
    <line>
      <![CDATA[  【12时55分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时55分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时55分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】</a>]]>
    </line>
    <line>
      <![CDATA[  【12时55分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时55分50秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播分机号码1103]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1103会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时56分00秒 执行操作】Answer Call  31  1103]]>
    </line>
    <line>
      <![CDATA[  【12时56分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时56分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时56分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时56分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时56分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时56分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时56分35秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播响铃组号码6200,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100会响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1105会响铃]]>
    </line>
    <line>
      <![CDATA[  【12时56分49秒 执行操作】Answer Call  2  1100]]>
    </line>
    <line>
      <![CDATA[  【12时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时56分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时57分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时57分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时57分23秒 执行操作】 1100拨打6508呼入到IVR：6508，直播分机号1103，预期：走到key 1到分机1000，即1000响铃]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1000为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时57分33秒 执行操作】Answer Call  5  1000]]>
    </line>
    <line>
      <![CDATA[  【12时57分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【12时57分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时57分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时57分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分00秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时58分00秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期3001为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时58分10秒 执行操作】Answer Call  7  3001]]>
    </line>
    <line>
      <![CDATA[  【12时58分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时58分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时58分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时58分38秒 执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打32000通过sps外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期2000为Ring状态]]>
    </line>
    <line>
      <![CDATA[  【12时58分51秒 执行操作】Answer Call  9  2000]]>
    </line>
    <line>
      <![CDATA[  【12时59分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时59分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时59分19秒 执行操作】 1100拨打6503，按32000（未启用Dial Outbound Routes)，预期1100被挂断]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Hang up状态]]>
    </line>
    <line>
      <![CDATA[  【12时59分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【12时59分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【12时59分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【12时59分51秒 执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按*02查看分机1105的语音留言]]>
    </line>
    <line>
      <![CDATA[  【13时00分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时00分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时00分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时00分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时00分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时00分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时00分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时00分45秒 执行操作】 1100拨打6506，按*02查看语音留言（未启用Dial to Check Voicemail）]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期1100为Hang up状态]]>
    </line>
    <line>
      <![CDATA[  【13时01分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时01分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时01分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时01分16秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，检查播放4次的prompt1]]>
    </line>
    <line>
      <![CDATA[  【13时04分00秒 执行操作】H_prompt AMI info true true true true]]>
    </line>
    <line>
      <![CDATA[  【13时04分00秒 执行操作】 2000按0到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时04分04秒 执行操作】Answer Call  14  1000]]>
    </line>
    <line>
      <![CDATA[  【13时04分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时04分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时04分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时04分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时04分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时04分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时04分31秒 执行操作】备份IVR基础环境]]>
    </line>
    <line>
      <![CDATA[  【13时04分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时04分38秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时04分39秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时04分40秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时04分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时04分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【13时05分08秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时05分09秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时05分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时05分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时05分22秒 执行操作】 表格删除：*.*-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时05分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时05分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时05分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时05分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时05分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时05分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时05分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时05分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时05分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：*.*-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时05分46秒 执行操作】 表格删除：*.*-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时05分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时05分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时05分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：*.*-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时05分59秒 执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时06分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时06分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时06分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时06分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时06分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时06分12秒 执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时06分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时06分19秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时06分20秒 执行操作】 IVR恢复BeforeTest设置]]>
    </line>
    <line>
      <![CDATA[  【13时06分24秒 执行操作】 删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【13时06分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时06分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时06分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时06分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分35秒 执行操作】deletes  删除所有IVR: 6]]>
    </line>
    <line>
      <![CDATA[  【13时06分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分40秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时06分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分49秒 执行操作】deleting  删除所有IVR: 0]]>
    </line>
    <line>
      <![CDATA[  【13时06分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时06分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有IVR]]>
    </line>
    <line>
      <![CDATA[  【13时06分51秒 执行操作】 添加IVR1：6500,按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时06分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时06分59秒 执行操作】 编辑IVR1:按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时07分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时07分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时07分14秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时07分15秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时07分16秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时07分27秒 执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时07分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时07分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时07分38秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时07分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时07分43秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时07分44秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时07分45秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 13时07分58秒执行完毕：=======  IVR  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 13时08分10秒开始执行：=======  Conference  =======]]>
    </line>
    <line>
      <![CDATA[  【13时08分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时08分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时08分37秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时08分40秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【13时08分42秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时08分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时08分45秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【13时08分45秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【13时08分45秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【13时08分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时08分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时09分20秒 执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时09分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时09分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时09分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时09分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时09分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时09分31秒 执行操作】deletes  删除所有Conference: 1]]>
    </line>
    <line>
      <![CDATA[  【13时09分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时09分36秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时09分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时09分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时09分45秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时09分45秒 执行操作】deleting  删除所有Conference: 0]]>
    </line>
    <line>
      <![CDATA[  【13时09分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时09分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时09分56秒 执行操作】添加会议室Conference6400：6400]]>
    </line>
    <line>
      <![CDATA[  【13时09分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分00秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时10分01秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【13时10分02秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【13时10分03秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时10分04秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时10分05秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('56,53')]]>
    </line>
    <line>
      <![CDATA[  【13时10分10秒 执行操作】添加会议室6401：6401]]>
    </line>
    <line>
      <![CDATA[  【13时10分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分14秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时10分15秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('default')]]>
    </line>
    <line>
      <![CDATA[  【13时10分16秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【13时10分17秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时10分18秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时10分23秒 执行操作】添加会议室a：6402]]>
    </line>
    <line>
      <![CDATA[  【13时10分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分27秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【13时10分28秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('exten')]]>
    </line>
    <line>
      <![CDATA[  【13时10分29秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时10分30秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时10分31秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时10分38秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时10分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时10分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时10分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时10分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时10分49秒 执行操作】deletes  删除所有呼入路由: 1]]>
    </line>
    <line>
      <![CDATA[  【13时10分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时10分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时10分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时10分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时11分34秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时11分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时11分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时11分36秒 执行操作】添加呼入路由：Conference6400，DID：，Destination：Conference6400]]>
    </line>
    <line>
      <![CDATA[  【13时11分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分40秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时11分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时11分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时11分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时11分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时11分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时11分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【13时11分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference6400", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时11分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('10')]]>
    </line>
    <line>
      <![CDATA[  【13时11分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时11分57秒 执行操作】添加呼入路由：6401，DID：5503301，Destination：6401]]>
    </line>
    <line>
      <![CDATA[  【13时11分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时12分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时12分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分06秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时12分07秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【13时12分08秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "6401", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时12分09秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('11')]]>
    </line>
    <line>
      <![CDATA[  【13时12分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时12分17秒 执行操作】添加呼入路由：a，DID：5503302，Destination：a]]>
    </line>
    <line>
      <![CDATA[  【13时12分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时12分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时12分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时12分26秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时12分27秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【13时12分28秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时12分29秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('12')]]>
    </line>
    <line>
      <![CDATA[  【13时12分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时12分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时12分54秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时12分55秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时12分56秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时12分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时12分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分09秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【13时13分21秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时13分23秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时13分24秒 执行操作】 分机1000呼入会议室6400]]>
    </line>
    <line>
      <![CDATA[  【13时13分47秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时13分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分53秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时13分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时13分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时13分56秒 执行操作】会议室成员数：2]]>
    </line>
    <line>
      <![CDATA[  【13时13分56秒 执行操作】 2000拨打99999通过sps外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[  【13时14分18秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时14分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分24秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时14分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有2个成员]]>
    </line>
    <line>
      <![CDATA[  【13时14分27秒 执行操作】会议室成员数：3]]>
    </line>
    <line>
      <![CDATA[  【13时14分27秒 执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
    </line>
    <line>
      <![CDATA[  【13时14分50秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时14分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分56秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时14分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时14分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有3个成员]]>
    </line>
    <line>
      <![CDATA[  【13时14分59秒 执行操作】会议室成员数：3]]>
    </line>
    <line>
      <![CDATA[  【13时14分59秒 执行操作】 1000退出会议室]]>
    </line>
    <line>
      <![CDATA[  【13时15分10秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时15分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时15分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有2个成员]]>
    </line>
    <line>
      <![CDATA[  【13时15分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时15分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时15分31秒 执行操作】 2000退出会议室]]>
    </line>
    <line>
      <![CDATA[  【13时15分41秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时15分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时15分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时15分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时15分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时15分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时16分03秒 执行操作】 3001退出会议室]]>
    </line>
    <line>
      <![CDATA[  【13时16分13秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时16分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时16分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6400有0个成员]]>
    </line>
    <line>
      <![CDATA[  【13时16分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时16分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时16分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时16分38秒 执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入与会者密码：789]]>
    </line>
    <line>
      <![CDATA[  【13时16分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时16分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时16分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时16分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入与会者密码前，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[  【13时17分06秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时17分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时17分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时17分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入与会者密码后，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时17分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时17分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时17分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时17分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时17分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时17分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时17分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时17分32秒 执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室]]>
    </line>
    <line>
      <![CDATA[  【13时17分43秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时17分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时17分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时17分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时17分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时18分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时18分07秒 执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入错误的与会密码：123，再次输入正确的与会者密码：789]]>
    </line>
    <line>
      <![CDATA[  【13时18分18秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时18分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时18分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时18分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入错误的与会密码123后，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[  【13时18分31秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时18分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时18分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时18分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 输入正确的与会密码789后，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时18分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时18分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时18分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时18分56秒 执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室，保持通话]]>
    </line>
    <line>
      <![CDATA[  【13时19分04秒 执行操作】 修改会议室的与会密码为空,立即生效]]>
    </line>
    <line>
      <![CDATA[  【13时19分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时19分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时19分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时19分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时19分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时19分36秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时19分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时19分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时19分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000进入会议室，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时19分41秒 执行操作】 1100拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
    </line>
    <line>
      <![CDATA[  【13时20分23秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时20分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100加入会议室，预期会议室6401有2个成员]]>
    </line>
    <line>
      <![CDATA[  【13时20分36秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时20分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 所有成员退出会议室，预期会议室6401有0个成员]]>
    </line>
    <line>
      <![CDATA[  【13时20分40秒 执行操作】所有成员退出会议室6401， 1100再次拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
    </line>
    <line>
      <![CDATA[  【13时20分53秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时20分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时20分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100进入会议室，预期会议室6401有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时21分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时21分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时21分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时21分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时21分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时21分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时21分18秒 执行操作】 AMI未打印提示音相关信息--请手动验证]]>
    </line>
    <line>
      <![CDATA[  【13时21分20秒 执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[  【13时22分51秒 执行操作】 1100拨打6402呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[  【13时23分23秒 执行操作】 1000拨打6402呼入到会议室6402，管理员进入会议室---判断方法：AMI不会打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402等到管理员，进行通话]]>
    </line>
    <line>
      <![CDATA[  【13时25分52秒 执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
    </line>
    <line>
      <![CDATA[  【13时27分23秒 执行操作】 1100拨打6402呼入到会议室6402，输入管理员密码：456---判断方法：AMI不会打印Status: off]]>
    </line>
    <line>
      <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100成为会议室6402的管理员]]>
    </line>
    <line>
      <![CDATA[  【13时29分42秒 执行操作】 2000拨打99999通过sps外线呼入到会议室6400，按#邀请成员1100加入会议室]]>
    </line>
    <line>
      <![CDATA[  【13时30分06秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时30分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时30分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 2000进入会议室，预期会议室6400有1个成员]]>
    </line>
    <line>
      <![CDATA[  【13时30分22秒 执行操作】Answer Call  15  1100]]>
    </line>
    <line>
      <![CDATA[  【13时30分33秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时30分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时30分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100被2000邀请进入会议室，预期会议室6400有2个成员]]>
    </line>
    <line>
      <![CDATA[  【13时30分36秒 执行操作】 1100按#13001邀请外线号码加入会议室]]>
    </line>
    <line>
      <![CDATA[  【13时30分49秒 执行操作】Answer Call  16  3001]]>
    </line>
    <line>
      <![CDATA[  【13时31分00秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时31分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时31分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】.jpg" target="_blank">Error: 3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】</a>]]>
    </line>
    <line>
      <![CDATA[  【13时31分04秒 执行操作】 语音菜单--AMI未打印相关信息--请手动测试]]>
    </line>
    <line>
      <![CDATA[  【13时31分09秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【13时31分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(50)]]>
    </line>
    <line>
      <![CDATA[  【13时31分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时31分11秒 执行操作】 表格删除：Conference6400-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时31分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时31分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时31分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时31分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时31分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Conference6400-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分28秒 执行操作】 表格删除：Conference6400-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分34秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时31分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时31分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：conference6201-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分41秒 执行操作】 删除：a-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时31分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时31分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时31分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时31分47秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时31分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时31分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：a-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分53秒 执行操作】 删除：a-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时31分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时31分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：a-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时32分06秒 执行操作】 恢复初始化环境]]>
    </line>
    <line>
      <![CDATA[  【13时32分06秒 执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时32分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时32分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时32分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时32分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时32分17秒 执行操作】deletes  删除所有Conference: 1]]>
    </line>
    <line>
      <![CDATA[  【13时32分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时32分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时32分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时32分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时33分02秒 执行操作】deleting  删除所有Conference: 0]]>
    </line>
    <line>
      <![CDATA[  【13时33分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时33分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时33分04秒 执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【13时33分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时33分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时33分15秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时33分19秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时33分20秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时33分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时33分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时33分26秒 执行操作】deletes  删除所有呼入路由: 3]]>
    </line>
    <line>
      <![CDATA[  【13时33分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时33分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时33分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时33分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时34分11秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时34分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时34分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时34分13秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【13时34分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时34分17秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时34分18秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时34分19秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时34分20秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时34分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时34分22秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时34分23秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时34分24秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时34分25秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时34分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 13时34分41秒执行完毕：=======  Conference  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 13时35分05秒开始执行：=======  Callback  =======]]>
    </line>
    <line>
      <![CDATA[  【13时35分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时35分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时35分33秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时35分36秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【13时35分38秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时35分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时35分41秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【13时35分41秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【13时35分41秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【13时35分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时35分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时36分39秒 执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【13时36分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时36分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时36分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时36分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时36分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时36分51秒 执行操作】deletes  删除所有Callback: 1]]>
    </line>
    <line>
      <![CDATA[  【13时36分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时36分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时36分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时37分04秒 执行操作】deleting  删除所有Callback: 0]]>
    </line>
    <line>
      <![CDATA[  【13时37分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时37分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【13时37分06秒 执行操作】 创建Callback_SPS，Through：SPS1外线，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【13时37分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分12秒 执行操作】Extjs： return  Ext.getCmp('st-callback-callbacktrunk').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时37分13秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('19')]]>
    </line>
    <line>
      <![CDATA[  【13时37分17秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时37分18秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时37分19秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时37分25秒 执行操作】 创建Callback_SIP，Through：SIP1外线，Destination：1100]]>
    </line>
    <line>
      <![CDATA[  【13时37分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分31秒 执行操作】Extjs： return  Ext.getCmp('st-callback-callbacktrunk').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时37分32秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('15')]]>
    </line>
    <line>
      <![CDATA[  【13时37分36秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时37分37秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时37分38秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【13时37分47秒 执行操作】添加Callback：Callback1_Hangup，Destination：]]>
    </line>
    <line>
      <![CDATA[  【13时37分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分50秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时37分51秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【13时37分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分56秒 执行操作】添加Callback：Callback2_Extension，Destination：1000]]>
    </line>
    <line>
      <![CDATA[  【13时37分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时37分59秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时38分01秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时38分02秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时38分03秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时38分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分10秒 执行操作】添加Callback：Callback3_Voicemail，Destination：1105]]>
    </line>
    <line>
      <![CDATA[  【13时38分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分14秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时38分15秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【13时38分16秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时38分17秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('55')]]>
    </line>
    <line>
      <![CDATA[  【13时38分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分24秒 执行操作】添加Callback：Callback4_IVR，Destination：IVR1]]>
    </line>
    <line>
      <![CDATA[  【13时38分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分28秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时38分29秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【13时38分30秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时38分31秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('23')]]>
    </line>
    <line>
      <![CDATA[  【13时38分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分38秒 执行操作】添加Callback：Callback5_RingGroup，Destination：RingGroup1]]>
    </line>
    <line>
      <![CDATA[  【13时38分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分42秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时38分43秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【13时38分44秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时38分45秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【13时38分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分53秒 执行操作】添加Callback：Callback6_Queue，Destination：Queue1]]>
    </line>
    <line>
      <![CDATA[  【13时38分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时38分56秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时38分58秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【13时38分59秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时39分00秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【13时39分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分07秒 执行操作】添加Callback：Callback7_Conference，Destination：Conference1]]>
    </line>
    <line>
      <![CDATA[  【13时39分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分11秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时39分12秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【13时39分13秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时39分14秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('13')]]>
    </line>
    <line>
      <![CDATA[  【13时39分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分22秒 执行操作】添加Callback：Callback8_DISA，Destination：DISA1]]>
    </line>
    <line>
      <![CDATA[  【13时39分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分25秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
    </line>
    <line>
      <![CDATA[  【13时39分27秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('d')]]>
    </line>
    <line>
      <![CDATA[  【13时39分28秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时39分29秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【13时39分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分38秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时39分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时39分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时39分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时39分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时39分49秒 执行操作】deletes  删除所有呼入路由: 1]]>
    </line>
    <line>
      <![CDATA[  【13时39分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时39分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时39分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时39分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时40分35秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时40分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时40分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时40分37秒 执行操作】 添加呼入路由：Callback_SPS，DID：3000，Destination：Callback_SPS]]>
    </line>
    <line>
      <![CDATA[  【13时40分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时40分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时40分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时40分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时40分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时40分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时40分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时40分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback_SPS", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时40分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('26')]]>
    </line>
    <line>
      <![CDATA[  【13时40分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时40分57秒 执行操作】 添加呼入路由：Callback_SIP，DID：6603302，Destination：Callback_SIP]]>
    </line>
    <line>
      <![CDATA[  【13时40分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时41分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时41分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时41分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback_SIP", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时41分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('27')]]>
    </line>
    <line>
      <![CDATA[  【13时41分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分18秒 执行操作】添加呼入路由：Callback1_HangupDID：5503301，Destination：Callback1_Hangup]]>
    </line>
    <line>
      <![CDATA[  【13时41分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时41分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分27秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时41分28秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时41分29秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback1_Hangup", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时41分30秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('28')]]>
    </line>
    <line>
      <![CDATA[  【13时41分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分39秒 执行操作】添加呼入路由：Callback2_ExtensionDID：，Destination：Callback2_Extension]]>
    </line>
    <line>
      <![CDATA[  【13时41分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时41分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时41分48秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时41分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时41分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback2_Extension", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时41分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('29')]]>
    </line>
    <line>
      <![CDATA[  【13时41分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时41分59秒 执行操作】添加呼入路由：Callback3_VoicemailDID：5503303，Destination：Callback3_Voicemail]]>
    </line>
    <line>
      <![CDATA[  【13时42分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时42分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时42分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分09秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时42分10秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时42分11秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback3_Voicemail", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时42分12秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('30')]]>
    </line>
    <line>
      <![CDATA[  【13时42分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时42分20秒 执行操作】添加呼入路由：Callback4_IVRDID：5503304，Destination：Callback4_IVR]]>
    </line>
    <line>
      <![CDATA[  【13时42分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时42分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时42分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分29秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时42分30秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时42分31秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback4_IVR", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时42分32秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('31')]]>
    </line>
    <line>
      <![CDATA[  【13时42分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时42分41秒 执行操作】添加呼入路由：Callback5_RingGroupDID：5503305，Destination：Callback5_RingGroup]]>
    </line>
    <line>
      <![CDATA[  【13时42分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时42分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时42分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时42分50秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时42分51秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时42分52秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback5_RingGroup", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时42分53秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('32')]]>
    </line>
    <line>
      <![CDATA[  【13时43分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分01秒 执行操作】添加呼入路由：Callback6_QueueDID：5503306，Destination：Callback6_Queue]]>
    </line>
    <line>
      <![CDATA[  【13时43分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时43分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时43分12秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时43分13秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback6_Queue", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时43分14秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('33')]]>
    </line>
    <line>
      <![CDATA[  【13时43分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分22秒 执行操作】添加呼入路由：Callback7_ConferenceDID：5503307，Destination：Callback7_Conference]]>
    </line>
    <line>
      <![CDATA[  【13时43分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时43分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分31秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时43分32秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时43分34秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback7_Conference", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时43分35秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('34')]]>
    </line>
    <line>
      <![CDATA[  【13时43分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分43秒 执行操作】添加呼入路由：Callback8_DISADID：5503308，Destination：Callback8_DISA]]>
    </line>
    <line>
      <![CDATA[  【13时43分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时43分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时43分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分50秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分51秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时43分52秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时43分53秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【13时43分54秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback8_DISA", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时43分55秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【13时44分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时44分11秒 执行操作】 3001拨打3000通过sip外线呼入，预期通过sps回拨，2000分机响铃接听后，分机1000响铃]]>
    </line>
    <line>
      <![CDATA[  【13时44分59秒 执行操作】Answer Call  1  2000]]>
    </line>
    <line>
      <![CDATA[  【13时45分00秒 执行操作】Answer Call  2  1000]]>
    </line>
    <line>
      <![CDATA[  【13时45分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时45分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时45分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时45分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时45分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时45分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时45分31秒 执行操作】 2000拨打996603302通过sps外线呼入，预期通过sip回拨，3001分机响铃接听后，分机1100响铃]]>
    </line>
    <line>
      <![CDATA[  【13时45分37秒 执行操作】Answer Call  4  3001]]>
    </line>
    <line>
      <![CDATA[  【13时45分39秒 执行操作】Answer Call  5  1100]]>
    </line>
    <line>
      <![CDATA[  【13时45分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时45分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时46分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时46分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时46分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时46分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时46分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时46分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时46分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时46分11秒 执行操作】 2000拨打995503301通过sps外线呼入，预期通过sps回拨，回拨Destination：Hangup]]>
    </line>
    <line>
      <![CDATA[  【13时46分17秒 执行操作】Answer Call  7  2000]]>
    </line>
    <line>
      <![CDATA[  【13时46分25秒 执行操作】 2000拨打999999通过sps外线呼入，预期通过sps回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时46分32秒 执行操作】Answer Call  9  2000]]>
    </line>
    <line>
      <![CDATA[  【13时46分37秒 执行操作】Answer Call  10  1000]]>
    </line>
    <line>
      <![CDATA[  【13时46分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时46分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时46分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时47分07秒 执行操作】 2000拨打995503304通过sps外线呼入，预期通过sps回拨，回拨Destination：IVR1，按1到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时47分16秒 执行操作】Answer Call  12  2000]]>
    </line>
    <line>
      <![CDATA[  【13时47分24秒 执行操作】Answer Call  13  1000]]>
    </line>
    <line>
      <![CDATA[  【13时47分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时47分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时47分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时47分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时47分53秒 执行操作】 2000拨打995503305通过sps外线呼入，预期通过sps外线回拨，回拨Destination：RingGroup1，成员都响铃，1105接听]]>
    </line>
    <line>
      <![CDATA[  【13时48分03秒 执行操作】Answer Call  15  2000]]>
    </line>
    <line>
      <![CDATA[  【13时48分11秒 执行操作】Answer Call  18  1105]]>
    </line>
    <line>
      <![CDATA[  【13时48分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时48分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时48分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时48分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时48分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时48分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时48分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时48分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时48分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时48分44秒 执行操作】 2000拨打995503306通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Queue1，坐席都响铃，1100接听]]>
    </line>
    <line>
      <![CDATA[  【13时48分56秒 执行操作】Answer Call  20  2000]]>
    </line>
    <line>
      <![CDATA[  【13时49分04秒 执行操作】Answer Call  22  1100]]>
    </line>
    <line>
      <![CDATA[  【13时49分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时49分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时49分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时49分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时49分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时49分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】</a>]]>
    </line>
    <line>
      <![CDATA[  【13时49分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时49分34秒 执行操作】 2000拨打995503307通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Conference1]]>
    </line>
    <line>
      <![CDATA[  【13时49分46秒 执行操作】Answer Call  25  2000]]>
    </line>
    <line>
      <![CDATA[  【13时50分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时50分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时50分13秒 执行操作】 2000拨打995503308通过sps外线呼入，预期通过sps外线回拨，回拨Destination：DISA1]]>
    </line>
    <line>
      <![CDATA[  【13时50分26秒 执行操作】Answer Call  27  2000]]>
    </line>
    <line>
      <![CDATA[  【13时50分28秒 执行操作】 转入DISA后，2000发送DTMF：13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[  【13时50分37秒 执行操作】Answer Call  28  3001]]>
    </line>
    <line>
      <![CDATA[  【13时50分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时50分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时50分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时51分06秒 执行操作】 2000拨打999999通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时51分13秒 执行操作】Answer Call  30  2000]]>
    </line>
    <line>
      <![CDATA[  【13时51分16秒 执行操作】Answer Call  31  1000]]>
    </line>
    <line>
      <![CDATA[  【13时51分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时51分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【13时51分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时51分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时51分53秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时51分54秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时51分55秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时51分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时51分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时51分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时52分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时52分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【13时52分19秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【13时52分21秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时52分22秒 执行操作】 表格删除：Callback7_Conference-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时52分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时52分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时52分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时52分32秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时52分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时52分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Callback7_Conference-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时52分39秒 执行操作】 表格删除：Callback7_Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时52分45秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【13时52分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时52分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 表格删除：Callback7_Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时52分52秒 执行操作】 删除：Callback5_RingGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时52分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时52分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时52分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时52分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时52分58秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【13时53分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Callback5_RingGroup-取消删除]]>
    </line>
    <line>
      <![CDATA[  【13时53分04秒 执行操作】 删除：Callback5_RingGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时53分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除：Callback5_RingGroup-确定删除]]>
    </line>
    <line>
      <![CDATA[  【13时53分09秒 执行操作】 删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【13时53分13秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时53分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时53分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时53分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时53分20秒 执行操作】deletes  删除所有Callback: 8]]>
    </line>
    <line>
      <![CDATA[  【13时53分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时53分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时53分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时53分34秒 执行操作】deleting  删除所有Callback: 0]]>
    </line>
    <line>
      <![CDATA[  【13时53分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时53分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Callback]]>
    </line>
    <line>
      <![CDATA[  【13时53分36秒 执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
    </line>
    <line>
      <![CDATA[  【13时53分48秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时53分49秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时53分50秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时53分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时53分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时53分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时53分59秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时54分03秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时54分04秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时54分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时54分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时54分10秒 执行操作】deletes  删除所有呼入路由: 10]]>
    </line>
    <line>
      <![CDATA[  【13时54分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时54分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时54分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时54分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时54分55秒 执行操作】deleting  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时54分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时54分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时54分57秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【13时54分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时55分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时55分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时55分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时55分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时55分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时55分06秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时55分07秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时55分08秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时55分09秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时55分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 13时55分18秒执行完毕：=======  Callback  =======

]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 13时55分36秒开始执行：====== InboundRoutes ======]]>
    </line>
    <line>
      <![CDATA[  【13时56分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时56分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时56分04秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时56分07秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【13时56分09秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时56分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时56分12秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【13时56分12秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【13时56分12秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[  【13时56分12秒 执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时56分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时56分19秒 执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[  【13时56分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时56分25秒 执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[  【13时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时56分30秒 执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[  【13时56分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时56分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【13时56分39秒 执行操作】 主测设备注册分机1106]]>
    </line>
    <line>
      <![CDATA[  【13时56分39秒 执行操作】 辅助设备1注册分机3000]]>
    </line>
    <line>
      <![CDATA[  【13时56分39秒 执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【13时56分44秒 执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【13时56分46秒 执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【13时56分48秒 执行操作】 辅助设备2注册分机2005]]>
    </line>
    <line>
      <![CDATA[  【13时56分50秒 执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【13时56分52秒 执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【13时56分55秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时57分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时57分01秒 执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时57分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时57分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时57分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时57分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分12秒 执行操作】deletes  删除所有Conference: 1]]>
    </line>
    <line>
      <![CDATA[  【13时57分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分17秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时57分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分26秒 执行操作】deleting  删除所有Conference: 0]]>
    </line>
    <line>
      <![CDATA[  【13时57分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【13时57分28秒 执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【13时57分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【13时57分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时57分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时57分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时57分47秒 执行操作】删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时57分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时57分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时57分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时57分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时57分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时57分58秒 执行操作】deletes 删除所有呼入路由: 1]]>
    </line>
    <line>
      <![CDATA[  【13时57分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时58分02秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【13时58分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时58分42秒 执行操作】deleting 删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时58分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时58分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时58分45秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时58分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【13时58分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【13时58分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【13时58分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时58分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时58分56秒 执行操作】deletes  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【13时58分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时58分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【13时58分58秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【13时59分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时59分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时59分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【13时59分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【13时59分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【13时59分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【13时59分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【13时59分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【13时59分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【13时59分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【13时59分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时59分19秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【13时59分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【13时59分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】</a>]]>
    </line>
    <line>
      <![CDATA[  【13时59分49秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【13时59分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时59分51秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【13时59分51秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【13时59分52秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【13时59分53秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【13时59分53秒 执行操作】修改呼入路由的DID为：.]]>
    </line>
    <line>
      <![CDATA[  【13时59分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【13时59分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时00分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时00分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时00分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时00分23秒 执行操作】 2001拨打999a]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时00分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时00分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时00分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时00分53秒 执行操作】 2001拨打99]]>
    </line>
    <line>
      <![CDATA[  【14时01分04秒 执行操作】 2001拨打99,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时01分06秒 执行操作】修改呼入路由的DID为：X.]]>
    </line>
    <line>
      <![CDATA[  【14时01分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时01分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时01分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时01分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时01分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时01分36秒 执行操作】 2001拨打9999]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时01分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时01分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时01分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时01分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时01分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时02分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时02分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时02分04秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时02分05秒 执行操作】 2001拨打999]]>
    </line>
    <line>
      <![CDATA[  【14时02分16秒 执行操作】 2001拨打999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时02分18秒 执行操作】修改呼入路由的DID为：N.]]>
    </line>
    <line>
      <![CDATA[  【14时02分19秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时02分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时02分26秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时02分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时02分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时02分47秒 执行操作】 2001拨打9929]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时03分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时03分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时03分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时03分16秒 执行操作】 2001拨打9919]]>
    </line>
    <line>
      <![CDATA[  【14时03分27秒 执行操作】 2001拨打9919,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时03分29秒 执行操作】修改呼入路由的DID为：Z.]]>
    </line>
    <line>
      <![CDATA[  【14时03分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时03分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时03分38秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时03分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时03分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时03分58秒 执行操作】 2001拨打9919]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时04分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时04分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时04分27秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时04分27秒 执行操作】 2001拨打99aa]]>
    </line>
    <line>
      <![CDATA[  【14时04分38秒 执行操作】 2001拨打99aa,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时04分40秒 执行操作】修改呼入路由的DID为：NZXNZX.]]>
    </line>
    <line>
      <![CDATA[  【14时04分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时04分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时04分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时04分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时05分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时05分10秒 执行操作】 2001拨打992202101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时05分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时05分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时05分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时05分38秒 执行操作】 2001拨打99220210]]>
    </line>
    <line>
      <![CDATA[  【14时05分50秒 执行操作】 2001拨打99220210,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时05分52秒 执行操作】修改呼入路由的DID为：[12-6].]]>
    </line>
    <line>
      <![CDATA[  【14时05分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时05分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时06分00秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时06分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时06分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时06分21秒 执行操作】 2001拨打9969]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时06分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时06分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时06分51秒 执行操作】 2001拨打9979]]>
    </line>
    <line>
      <![CDATA[  【14时07分02秒 执行操作】 2001拨打9979,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时07分04秒 执行操作】修改呼入路由的DID为：[158]X9ZN[1-5]X.]]>
    </line>
    <line>
      <![CDATA[  【14时07分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时07分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时07分13秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时07分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时07分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时07分34秒 执行操作】 2001拨打9950912501]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时07分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时07分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时07分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时07分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时07分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时08分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时08分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时08分03秒 执行操作】 2001拨打9950812501]]>
    </line>
    <line>
      <![CDATA[  【14时08分14秒 执行操作】 2001拨打9950812501,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时08分16秒 执行操作】修改呼入路由的DID为：+12abc06032456N]]>
    </line>
    <line>
      <![CDATA[  【14时08分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时08分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时08分25秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时08分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时08分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时08分46秒 执行操作】 2001拨打99+12abc06032456N]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时09分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时09分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时09分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时09分16秒 执行操作】 2001拨打99+12abc06032456a]]>
    </line>
    <line>
      <![CDATA[  【14时09分27秒 执行操作】 2001拨打99+12abc06032456a,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时09分29秒 执行操作】修改呼入路由的DID为：XXXNZ!]]>
    </line>
    <line>
      <![CDATA[  【14时09分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时09分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时09分37秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时09分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时09分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时09分58秒 执行操作】 2001拨打99xxx21]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B2_checkDID()99xxx21.jpg" target="_blank">Error: B2_checkDID()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【14时10分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时10分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时10分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时10分46秒 执行操作】 2001拨打99aaa21]]>
    </line>
    <line>
      <![CDATA[  【14时10分57秒 执行操作】 2001拨打99aaa21,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时10分59秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时11分01秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时11分01秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时11分01秒 执行操作】修改呼入路由的DID为：13950174296!]]>
    </line>
    <line>
      <![CDATA[  【14时11分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时11分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时11分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时11分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时11分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时11分31秒 执行操作】 2001拨打9913950174296]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时11分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时11分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时11分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时11分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时11分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时12分00秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时12分01秒 执行操作】 2001拨打9913950174295]]>
    </line>
    <line>
      <![CDATA[  【14时12分12秒 执行操作】 2001拨打9913950174295,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时12分14秒 执行操作】修改呼入路由的DID为：0123456789]]>
    </line>
    <line>
      <![CDATA[  【14时12分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时12分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时12分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时12分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时12分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时12分43秒 执行操作】 2001拨打990123456789]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时13分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时13分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时13分12秒 执行操作】 2001拨打990123456786]]>
    </line>
    <line>
      <![CDATA[  【14时13分23秒 执行操作】 2001拨打990123456786,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时13分25秒 执行操作】修改呼入路由的Caller ID为[128]X[0-6]12]]>
    </line>
    <line>
      <![CDATA[  【14时13分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时13分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时13分34秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时13分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时13分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时13分54秒 执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B3_checkCaller1()分机1000.jpg" target="_blank">Error: B3_checkCaller1()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【14时14分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时14分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时14分32秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时14分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时14分34秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时14分34秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时14分36秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时14分36秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时14分36秒 执行操作】修改呼入路由的Caller ID为NXZ1!]]>
    </line>
    <line>
      <![CDATA[  【14时14分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时14分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时14分45秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时14分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时14分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时15分05秒 执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B4_checkCaller2()分机1000.jpg" target="_blank">Error: B4_checkCaller2()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【14时15分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时15分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时15分43秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时15分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时15分45秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时15分45秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时15分46秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时15分47秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时15分47秒 执行操作】修改呼入路由的DID为5503301-5503305，CallerID为NXZ1!
2001]]>
    </line>
    <line>
      <![CDATA[  【14时15分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时15分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时15分55秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时15分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时16分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时16分16秒 执行操作】 2005（CallerID为2X612）拨打995503302，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B5_checkDIDAndCaller()分机1000.jpg" target="_blank">Error: B5_checkDIDAndCaller()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【14时17分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时17分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时17分15秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时17分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时17分17秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时17分17秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时17分18秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时17分19秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时17分19秒 执行操作】修改呼入路由的DID和CallerID为空]]>
    </line>
    <line>
      <![CDATA[  【14时17分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时17分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时17分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时17分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时17分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时17分47秒 执行操作】 添加呼入路由InRoute2——呼入目的地到HangUp ]]>
    </line>
    <line>
      <![CDATA[  【14时17分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时17分51秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时17分52秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时17分53秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时17分54秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时17分55秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时17分56秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时17分57秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【14时18分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分02秒 执行操作】 添加呼入路由InRoute3——呼入目的地到sip分机1100 ]]>
    </line>
    <line>
      <![CDATA[  【14时18分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时18分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时18分13秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【14时18分14秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时18分15秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【14时18分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分23秒 执行操作】 添加呼入路由InRoute5——呼入目的地到Extension Range ]]>
    </line>
    <line>
      <![CDATA[  【14时18分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时18分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分31秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分32秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时18分33秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('E')]]>
    </line>
    <line>
      <![CDATA[  【14时18分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分39秒 执行操作】 添加呼入路由InRoute6——呼入目的地到voicemail ]]>
    </line>
    <line>
      <![CDATA[  【14时18分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时18分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时18分48秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时18分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('v')]]>
    </line>
    <line>
      <![CDATA[  【14时18分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时18分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【14时18分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时18分59秒 执行操作】 添加呼入路由InRoute7——呼入目的地到IVR ]]>
    </line>
    <line>
      <![CDATA[  【14时19分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时19分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时19分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分08秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时19分09秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【14时19分10秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时19分11秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('23')]]>
    </line>
    <line>
      <![CDATA[  【14时19分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时19分20秒 执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
    </line>
    <line>
      <![CDATA[  【14时19分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时19分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时19分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分29秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时19分30秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【14时19分31秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时19分32秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【14时19分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时19分40秒 执行操作】 添加呼入路由InRoute9——呼入目的地到Queue ]]>
    </line>
    <line>
      <![CDATA[  【14时19分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时19分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时19分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时19分49秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时19分50秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【14时19分51秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时19分52秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('35')]]>
    </line>
    <line>
      <![CDATA[  【14时19分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分00秒 执行操作】 添加呼入路由InRoute10——呼入目的地到Conference ]]>
    </line>
    <line>
      <![CDATA[  【14时20分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时20分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分10秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时20分11秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【14时20分12秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时20分13秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('14')]]>
    </line>
    <line>
      <![CDATA[  【14时20分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分21秒 执行操作】 添加呼入路由InRoute11——呼入目的地到DISA ]]>
    </line>
    <line>
      <![CDATA[  【14时20分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时20分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分30秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时20分31秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('d')]]>
    </line>
    <line>
      <![CDATA[  【14时20分32秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时20分33秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【14时20分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分41秒 执行操作】 添加呼入路由InRoute12——呼入目的地到Callback ]]>
    </line>
    <line>
      <![CDATA[  【14时20分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时20分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时20分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时20分50秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时20分51秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【14时20分52秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时20分53秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('36')]]>
    </line>
    <line>
      <![CDATA[  【14时21分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时21分01秒 执行操作】 添加呼入路由InRoute13——呼入目的地到Outbound Route_sip ]]>
    </line>
    <line>
      <![CDATA[  【14时21分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时21分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时21分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时21分12秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('o')]]>
    </line>
    <line>
      <![CDATA[  【14时21分13秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时21分14秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('11')]]>
    </line>
    <line>
      <![CDATA[  【14时21分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时21分22秒 执行操作】 添加呼入路由InRoute18——呼入目的地到Outbound Route_Account ]]>
    </line>
    <line>
      <![CDATA[  【14时21分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时21分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时21分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时21分31秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时21分32秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('o')]]>
    </line>
    <line>
      <![CDATA[  【14时21分33秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "OutRoute9_account", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时21分34秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('13')]]>
    </line>
    <line>
      <![CDATA[  【14时21分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时21分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时21分47秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时21分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时21分48秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时21分54秒 执行操作】 2001拨打991105通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时22分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时22分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时22分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时22分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时22分49秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时22分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时22分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时22分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时22分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时22分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时22分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时23分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时23分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时23分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时23分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时23分05秒 执行操作】 移动第9行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时23分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时23分21秒 执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时23分27秒 执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时23分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时23分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时23分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时24分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时24分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时24分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时24分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时24分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时24分29秒 执行操作】 移动第8行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时24分35秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时24分45秒 执行操作】 3001拨打3000呼入到响铃组，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000/1100和1105响铃]]>
    </line>
    <line>
      <![CDATA[  【14时24分54秒 执行操作】Answer Call  15  1105]]>
    </line>
    <line>
      <![CDATA[  【14时24分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态——TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时24分58秒 执行操作】 2001拨打99999通过sps外线呼入到响铃组，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000和1100响铃]]>
    </line>
    <line>
      <![CDATA[  【14时25分08秒 执行操作】Answer Call  18  1100]]>
    </line>
    <line>
      <![CDATA[  【14时25分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态——TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时25分15秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时25分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时25分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时25分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时25分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时25分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时25分57秒 执行操作】 删除呼入路由InRoute8（RingGroup）——选择yes]]>
    </line>
    <line>
      <![CDATA[  【14时25分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时26分06秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【14时26分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时26分20秒 执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时26分32秒 执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时26分45秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时26分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时26分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时26分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时26分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时27分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时27分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时27分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时27分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时28分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时28分04秒 执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
    </line>
    <line>
      <![CDATA[  【14时28分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时28分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时28分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【14时28分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【14时28分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【14时28分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【14时28分13秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【14时28分14秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【14时28分15秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时28分16秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【14时28分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时28分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时28分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时28分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时28分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时28分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时28分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时28分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时28分36秒 执行操作】 移动第3行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时28分42秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时28分52秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时29分01秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时29分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时29分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时29分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时29分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时29分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时29分12秒 执行操作】 移动第5行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时29分18秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时29分28秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时29分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时29分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时29分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时29分57秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时30分03秒 执行操作】Answer Call  26  1101]]>
    </line>
    <line>
      <![CDATA[  【14时30分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时30分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时30分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时30分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时30分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Busy 实际：Voicemail】.jpg" target="_blank">Error: CDR_Status检测 【预期：Busy 实际：Voicemail】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时30分44秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时30分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时30分46秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时30分46秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时30分48秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时30分48秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时30分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时30分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时30分58秒 执行操作】 移动第6行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时31分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时31分14秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时31分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时31分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时31分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时31分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时31分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分01秒 执行操作】 移动第11行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时32分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时32分17秒 执行操作】 2001拨打9913001通过sps外线呼入转sip外线呼出到分机3001]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时32分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时32分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时32分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时32分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时32分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时32分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[11].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时33分08秒 执行操作】 移动第12行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时33分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[11].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时33分25秒 执行操作】 2001拨打9991111通过sps外线呼入转account外线到分机1000，分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机4000状态为TALKING，实际状态为-1]]>
    </line>
    <line>
      <![CDATA[  【14时34分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时34分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时34分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时34分07秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时34分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时34分09秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时34分10秒 执行操作】 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【14时34分10秒 执行操作】删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【14时34分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时34分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时34分16秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时34分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时34分21秒 执行操作】deletes 删除所有时间条件——Workday: 1]]>
    </line>
    <line>
      <![CDATA[  【14时34分22秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时34分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【14时34分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时34分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时35分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时35分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时35分06秒 执行操作】deleting 删除所有时间条件——Workday: 0]]>
    </line>
    <line>
      <![CDATA[  【14时35分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时35分08秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【14时35分08秒 执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[  【14时35分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时35分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【14时35分15秒 执行操作】 添加时间条件workday2_24hour:每天24小时都是工作时间]]>
    </line>
    <line>
      <![CDATA[  【14时35分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时35分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【14时35分23秒 执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时35分23秒 执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时35分27秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时35分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时35分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时35分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时35分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时35分34秒 执行操作】deletes 删除所有Holiday: 0]]>
    </line>
    <line>
      <![CDATA[  【14时35分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时35分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时35分36秒 执行操作】 新建HolidayByDay：2018-01-01~2200-12-31]]>
    </line>
    <line>
      <![CDATA[  【14时35分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('holiday').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时35分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时35分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时35分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时35分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时35分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时35分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时35分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时36分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时36分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时36分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时36分04秒 执行操作】 移动第6行到第一行 ]]>
    </line>
    <line>
      <![CDATA[  【14时36分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时36分20秒 执行操作】修改InRoute10_Conference呼入路由:勾选TimeCondition]]>
    </line>
    <line>
      <![CDATA[  【14时36分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时36分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时36分28秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时36分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时36分34秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【14时36分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时36分49秒 执行操作】 2001拨打99999，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时37分00秒 执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【14时37分02秒 执行操作】修改InRoute10_Conference呼入路由:otherTime的目的地选择分机1000]]>
    </line>
    <line>
      <![CDATA[  【14时37分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时37分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时37分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时37分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时37分18秒 执行操作】Extjs： Ext.getCmp('combo-7378').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【14时37分21秒 执行操作】Extjs： return  Ext.getCmp('combo-7379').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时37分22秒 执行操作】Extjs： Ext.getCmp('combo-7379').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【14时37分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时37分38秒 执行操作】 3001拨打3000，预期呼入成功，分机1000未接]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--RING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时37分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时38分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时38分10秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[  【14时38分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时38分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时38分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时38分43秒 执行操作】 4001拨打11000通过account外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【14时39分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时39分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时39分21秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时39分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时39分23秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时39分23秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时39分24秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时39分25秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时39分25秒 执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——workday_24hour]]>
    </line>
    <line>
      <![CDATA[  【14时39分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时39分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时39分33秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时39分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时39分42秒 执行操作】Extjs： return  Ext.getCmp('combo-7790').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时39分43秒 执行操作】Extjs： Ext.getCmp('combo-7790').setValue('2')]]>
    </line>
    <line>
      <![CDATA[  【14时39分46秒 执行操作】Extjs： Ext.getCmp('combo-7791').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【14时39分49秒 执行操作】Extjs： return  Ext.getCmp('combo-7792').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时39分50秒 执行操作】Extjs： Ext.getCmp('combo-7792').setValue('50')]]>
    </line>
    <line>
      <![CDATA[  【14时39分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时40分06秒 执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时40分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时40分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时40分37秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时40分38秒 执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——holiday]]>
    </line>
    <line>
      <![CDATA[  【14时40分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时40分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时40分46秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时40分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时40分55秒 执行操作】Extjs： return  Ext.getCmp('combo-7947').getStore().findRecord('name', "[Holiday]", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时40分56秒 执行操作】Extjs： Ext.getCmp('combo-7947').setValue('h')]]>
    </line>
    <line>
      <![CDATA[  【14时40分59秒 执行操作】Extjs： Ext.getCmp('combo-7948').setValue('q')]]>
    </line>
    <line>
      <![CDATA[  【14时41分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时41分14秒 执行操作】 3001拨打3000通过sip外线呼入到Queue6700,1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
    </line>
    <line>
      <![CDATA[  【14时41分22秒 执行操作】Answer Call  9  1100]]>
    </line>
    <line>
      <![CDATA[  【14时41分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时41分36秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时41分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时41分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时41分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时41分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时41分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时41分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时41分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时41分56秒 执行操作】 当前的时间为：2018-10-18 14:41:56]]>
    </line>
    <line>
      <![CDATA[  【14时41分56秒 执行操作】 今天星期：thu]]>
    </line>
    <line>
      <![CDATA[  【14时41分58秒 执行操作】 添加时间条件NoWorkday:当前时间不是上班时间]]>
    </line>
    <line>
      <![CDATA[  【14时42分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【14时42分05秒 执行操作】修改NoWorkday：取消勾选当前的星期]]>
    </line>
    <line>
      <![CDATA[  【14时42分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时42分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时42分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时42分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分29秒 执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时42分29秒 执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时42分33秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【14时42分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【14时42分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【14时42分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时42分40秒 执行操作】deletes 删除所有Holiday: 1]]>
    </line>
    <line>
      <![CDATA[  【14时42分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时42分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【14时42分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时42分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时43分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时43分25秒 执行操作】deleting 删除所有Holiday: 0]]>
    </line>
    <line>
      <![CDATA[  【14时43分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时43分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时43分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('holiday').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加Holiday]]>
    </line>
    <line>
      <![CDATA[  【14时43分38秒 执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时43分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时44分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时44分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时44分47秒 执行操作】修改InRoute10_Conference呼入路由:编辑workday当前时间不是上班时间]]>
    </line>
    <line>
      <![CDATA[  【14时44分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时44分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时44分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时44分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时45分03秒 执行操作】Extjs： return  Ext.getCmp('combo-8358').getStore().findRecord('name', "NoWorkday", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时45分04秒 执行操作】Extjs： Ext.getCmp('combo-8358').setValue('4')]]>
    </line>
    <line>
      <![CDATA[  【14时45分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时45分20秒 执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时45分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时45分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时45分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时45分49秒 执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[  【14时45分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时45分55秒 执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[  【14时46分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时46分00秒 执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[  【14时46分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时46分06秒 执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[  【14时46分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时46分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时46分15秒 执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【14时46分17秒 执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【14时46分19秒 执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【14时46分21秒 执行操作】 辅助设备2注册分机2005]]>
    </line>
    <line>
      <![CDATA[  【14时46分23秒 执行操作】 辅助设备3注册分机4000]]>
    </line>
    <line>
      <![CDATA[  【14时46分25秒 执行操作】 辅助设备3注册分机4001]]>
    </line>
    <line>
      <![CDATA[  【14时46分28秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时46分30秒 执行操作】 添加时间条件threeMinuteWork:三分钟后为上班时间]]>
    </line>
    <line>
      <![CDATA[  【14时46分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【14时46分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时46分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分14秒 执行操作】修改InRoute10_Conference呼入路由:新增threeMinuteWork]]>
    </line>
    <line>
      <![CDATA[  【14时47分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时47分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时47分23秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时47分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分32秒 执行操作】Extjs： return  Ext.getCmp('combo-8617').getStore().findRecord('name', "threeMinuteWork", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时47分33秒 执行操作】Extjs： Ext.getCmp('combo-8617').setValue('5')]]>
    </line>
    <line>
      <![CDATA[  【14时47分36秒 执行操作】Extjs： Ext.getCmp('combo-8618').setValue('r')]]>
    </line>
    <line>
      <![CDATA[  【14时47分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时47分51秒 执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()分机1000.jpg" target="_blank">Error: G8_timeDelay()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【14时48分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时48分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时51分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时51分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时52分12秒 执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()响铃组.jpg" target="_blank">Error: G8_timeDelay()响铃组</a>]]>
    </line>
    <line>
      <![CDATA[  【14时52分40秒 执行操作】1100的状态：0]]>
    </line>
    <line>
      <![CDATA[  【14时52分51秒 执行操作】1000的状态0]]>
    </line>
    <line>
      <![CDATA[  【14时53分02秒 执行操作】1105的状态0]]>
    </line>
    <line>
      <![CDATA[  【14时53分02秒 执行操作】Answer Call  8  1105]]>
    </line>
    <line>
      <![CDATA[  【14时53分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时53分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时53分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时53分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【14时53分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()分机1105.jpg" target="_blank">Error: G8_timeDelay()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【14时53分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时53分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时53分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时53分54秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时53分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时53分56秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时53分56秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时53分58秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时53分58秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时53分58秒 执行操作】修改InRoute10_Conference呼入路由目的地]]>
    </line>
    <line>
      <![CDATA[  【14时53分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时54分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时54分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时54分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时54分14秒 执行操作】Extjs： return  Ext.getCmp('combo-8927').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时54分15秒 执行操作】Extjs： Ext.getCmp('combo-8927').setValue('2')]]>
    </line>
    <line>
      <![CDATA[  【14时54分18秒 执行操作】Extjs： Ext.getCmp('combo-8928').setValue('i')]]>
    </line>
    <line>
      <![CDATA[  【14时54分21秒 执行操作】Extjs： return  Ext.getCmp('combo-8930').getStore().findRecord('name', "workday2_24hour", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时54分22秒 执行操作】Extjs： Ext.getCmp('combo-8930').setValue('3')]]>
    </line>
    <line>
      <![CDATA[  【14时54分25秒 执行操作】Extjs： Ext.getCmp('combo-8931').setValue('c')]]>
    </line>
    <line>
      <![CDATA[  【14时54分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时54分41秒 执行操作】 2001拨打99999，预期呼入成功，IVR6500接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时54分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时55分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时55分11秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时55分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时55分51秒 执行操作】修改InRoute10_Conference呼入路由顺序]]>
    </line>
    <line>
      <![CDATA[  【14时55分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时55分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时55分59秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时56分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时56分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【14时56分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时56分27秒 执行操作】 2001拨打99999，预期呼入成功，Conference6400接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【14时56分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时56分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【14时56分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时56分56秒 执行操作】修改InRoute10_Conference呼入路由顺序]]>
    </line>
    <line>
      <![CDATA[  【14时56分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时56分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时57分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时57分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时57分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【14时57分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时57分32秒 执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G9_timeOrder3()响铃组.jpg" target="_blank">Error: G9_timeOrder3()响铃组</a>]]>
    </line>
    <line>
      <![CDATA[  【14时58分01秒 执行操作】1100的状态：0]]>
    </line>
    <line>
      <![CDATA[  【14时58分12秒 执行操作】1000的状态0]]>
    </line>
    <line>
      <![CDATA[  【14时58分23秒 执行操作】1105的状态0]]>
    </line>
    <line>
      <![CDATA[  【14时58分23秒 执行操作】Answer Call  8  1105]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【14时58分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时58分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【14时59分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
    </line>
    <line>
      <![CDATA[  【14时59分01秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时59分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时59分03秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时59分03秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【14时59分04秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时59分05秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【14时59分07秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时59分07秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【14时59分17秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
    </line>
    <line>
      <![CDATA[  【14时59分20秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【14时59分21秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【14时59分32秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【14时59分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时59分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时59分41秒 执行操作】检查时间特征码+修改InRoute10_Conference呼入路由：将workday_24hour改为NoWorkday]]>
    </line>
    <line>
      <![CDATA[  【14时59分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【14时59分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时59分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【14时59分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【14时59分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时59分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【14时59分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时00分01秒 执行操作】Extjs： return  Ext.getCmp('combo-10413').getStore().findRecord('name', "NoWorkday", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时00分02秒 执行操作】Extjs： Ext.getCmp('combo-10413').setValue('4')]]>
    </line>
    <line>
      <![CDATA[    Pass:  特征码生成正确]]>
    </line>
    <line>
      <![CDATA[  【15时00分11秒 执行操作】检查时间特征码]]>
    </line>
    <line>
      <![CDATA[  【15时00分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时00分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时00分22秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【15时00分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时00分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass:  特征码生成正确]]>
    </line>
    <line>
      <![CDATA[  【15时00分29秒 执行操作】 分机1000拨打特征码*8803强制启用非工作时间]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时00分54秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到ivr]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时01分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时01分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时01分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时01分23秒 执行操作】 分机1000拨打特征码*8802强制启用工作时间]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时01分48秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时02分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时02分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时02分20秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时02分21秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【15时02分22秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时02分23秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【15时02分23秒 执行操作】 分机1000拨打特征码*8800重置]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时02分48秒 执行操作】 2001拨打99999，预期呼入到响铃组，分机1105接听]]>
    </line>
    <line>
      <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H2_checkFeatureCode4()响铃组.jpg" target="_blank">Error: H2_checkFeatureCode4()响铃组</a>]]>
    </line>
    <line>
      <![CDATA[  【15时03分16秒 执行操作】1100的状态：0]]>
    </line>
    <line>
      <![CDATA[  【15时03分27秒 执行操作】1000的状态4]]>
    </line>
    <line>
      <![CDATA[  【15时03分38秒 执行操作】1105的状态0]]>
    </line>
    <line>
      <![CDATA[  【15时03分38秒 执行操作】Answer Call  8  1105]]>
    </line>
    <line>
      <![CDATA[  【15时03分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时03分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时03分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时03分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时03分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H2_checkFeatureCode4()分机1105.jpg" target="_blank">Error: H2_checkFeatureCode4()调试</a>]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时04分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时04分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时04分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
    </line>
    <line>
      <![CDATA[  【15时04分30秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【15时04分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时04分32秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【15时04分32秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【15时04分34秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时04分34秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【15时04分36秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时04分36秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【15时04分47秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
    </line>
    <line>
      <![CDATA[  【15时04分50秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时04分51秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【15时05分01秒 执行操作】修改TimeCondition的目的地]]>
    </line>
    <line>
      <![CDATA[  【15时05分02秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时05分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时05分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时05分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时05分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时05分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时05分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时05分30秒 执行操作】Extjs： Ext.getCmp('combo-11575').setValue('d')]]>
    </line>
    <line>
      <![CDATA[  【15时05分34秒 执行操作】Extjs： Ext.getCmp('combo-11578').setValue('C')]]>
    </line>
    <line>
      <![CDATA[  【15时05分37秒 执行操作】Extjs： Ext.getCmp('combo-11586').setValue('o')]]>
    </line>
    <line>
      <![CDATA[  【15时05分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时05分52秒 执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时06分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时06分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时06分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时06分46秒 执行操作】 分机1000拨打特征码*802]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时06分59秒 执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期2000会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2000会响铃 【预期：2 实际：4】</a>]]>
    </line>
    <line>
      <![CDATA[  【15时07分27秒 执行操作】 分机1000拨打特征码*805]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时07分52秒 执行操作】 分机1000拨打特征码*803]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时08分05秒 执行操作】 2001拨打9913001通过SPS外线呼入转sip呼出]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时08分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时08分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时08分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时08分54秒 执行操作】修改第三时间条件目的地到outbound_account]]>
    </line>
    <line>
      <![CDATA[  【15时08分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时08分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时09分02秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时09分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时09分10秒 执行操作】Extjs： return  Ext.getCmp('combo-11846').getStore().findRecord('name', "OutRoute9_account", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时09分11秒 执行操作】Extjs： Ext.getCmp('combo-11846').setValue('13')]]>
    </line>
    <line>
      <![CDATA[  【15时09分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时09分26秒 执行操作】 2001拨打9991111通过sps外线呼入转account外线到分机4000，分机接听]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机4000状态为TALKING，实际状态为-1]]>
    </line>
    <line>
      <![CDATA[  【15时10分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时10分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时10分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时10分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
    </line>
    <line>
      <![CDATA[  【15时10分09秒 执行操作】admin角色的cdr页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【15时10分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时10分11秒 执行操作】admin角色的cdr页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【15时10分11秒 执行操作】修改第三时间条件目的地到ExtensionRange]]>
    </line>
    <line>
      <![CDATA[  【15时10分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时10分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时10分19秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时10分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时10分27秒 执行操作】Extjs： Ext.getCmp('combo-12005').setValue('E')]]>
    </line>
    <line>
      <![CDATA[  【15时10分30秒 执行操作】Extjs： Ext.getCmp('combo-12006').setValue('1100-1105')]]>
    </line>
    <line>
      <![CDATA[  【15时10分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时10分46秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1101状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时11分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时11分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时11分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时11分35秒 执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时12分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时12分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时12分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时12分23秒 执行操作】取消勾选TimeConditon]]>
    </line>
    <line>
      <![CDATA[  【15时12分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时12分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时12分32秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时12分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时12分37秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
    </line>
    <line>
      <![CDATA[  【15时12分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时12分53秒 执行操作】 2001拨打995503306通过sps外线呼入到conference]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时13分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时13分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时13分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时13分26秒 执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时13分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时13分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时13分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除全部的Conference-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时13分43秒 执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时13分53秒 执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时14分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时14分03秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分04秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分06秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td img')[2].click()]]>
    </line>
    <line>
      <![CDATA[  【15时14分34秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【15时14分36秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时14分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时14分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时14分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时14分45秒 执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【15时14分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分46秒 执行操作】期望值row1:13]]>
    </line>
    <line>
      <![CDATA[  【15时14分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时14分56秒 执行操作】要取消勾选的row2:6]]>
    </line>
    <line>
      <![CDATA[  【15时14分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时14分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时15分09秒 执行操作】要取消勾选的row3:8]]>
    </line>
    <line>
      <![CDATA[  【15时15分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时15分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时15分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时15分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时15分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分21秒 执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时15分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分35秒 执行操作】 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时15分39秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时15分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时15分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-取消删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分45秒 执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时15分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时15分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时16分00秒 执行操作】F:\MyProject\SwebTest\exportFile\InboundRoute.csv]]>
    </line>
    <line>
      <![CDATA[  【15时16分15秒 执行操作】 2001拨打9992999]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时16分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时16分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时16分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时16分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时16分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时16分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时17分02秒 执行操作】 2001拨打9982999]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时17分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时17分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时17分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时17分51秒 执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时18分01秒 执行操作】 3000通话状态为：0]]>
    </line>
    <line>
      <![CDATA[  【15时18分01秒 执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时18分03秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
    </line>
    <line>
      <![CDATA[  【15时18分04秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时18分05秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
    </line>
    <line>
      <![CDATA[  【15时18分05秒 执行操作】 2001拨打9991999]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时18分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时18分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时18分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时18分54秒 执行操作】 删除单个呼入路由InRoute3——选择no]]>
    </line>
    <line>
      <![CDATA[  【15时18分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时18分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时18分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时19分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【15时19分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时19分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
    </line>
    <line>
      <![CDATA[  【15时19分14秒 执行操作】 删除单个呼入路由InRoute3——选择yes]]>
    </line>
    <line>
      <![CDATA[  【15时19分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时19分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时19分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
    </line>
    <line>
      <![CDATA[  【15时19分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时19分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除单个呼入路由InRoute3——确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时19分42秒 执行操作】修改InRoute1:DID清空，CallerID设置为3.]]>
    </line>
    <line>
      <![CDATA[  【15时19分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时19分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时19分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时19分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时19分56秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时19分57秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时19分58秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,19')]]>
    </line>
    <line>
      <![CDATA[  【15时20分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时20分06秒 执行操作】修改InRoute2:DID清空，CallerID设置为X.]]>
    </line>
    <line>
      <![CDATA[  【15时20分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时20分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时20分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时20分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时20分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时20分21秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时20分22秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时20分23秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,19')]]>
    </line>
    <line>
      <![CDATA[  【15时20分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时20分39秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时21分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时21分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时21分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时21分25秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时21分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时22分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时22分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时22分11秒 执行操作】 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时22分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时22分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时22分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 全部勾选-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时22分28秒 执行操作】 2001拨打991105通过sps外线呼入到分机1105]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
    </line>
    <line>
      <![CDATA[  【15时23分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时23分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时23分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时23分18秒 执行操作】 删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【15时23分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时23分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时23分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时23分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时23分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时23分29秒 执行操作】deletes  删除所有呼入路由: 0]]>
    </line>
    <line>
      <![CDATA[  【15时23分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时23分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有呼入路由]]>
    </line>
    <line>
      <![CDATA[  【15时23分31秒 执行操作】 添加呼入路由InRoute1]]>
    </line>
    <line>
      <![CDATA[  【15时23分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时23分35秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时23分36秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
    </line>
    <line>
      <![CDATA[  【15时23分37秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
    </line>
    <line>
      <![CDATA[  【15时23分38秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
    </line>
    <line>
      <![CDATA[  【15时23分39秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
    </line>
    <line>
      <![CDATA[  【15时23分40秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
    </line>
    <line>
      <![CDATA[  【15时23分41秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
    </line>
    <line>
      <![CDATA[  【15时23分42秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时23分43秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
    </line>
    <line>
      <![CDATA[  【15时23分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时23分51秒 执行操作】 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【15时23分51秒 执行操作】删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【15时23分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时23分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时23分57秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时24分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时24分03秒 执行操作】deletes 删除所有时间条件——Workday: 4]]>
    </line>
    <line>
      <![CDATA[  【15时24分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时24分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时24分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时24分49秒 执行操作】deleting 删除所有时间条件——Workday: 0]]>
    </line>
    <line>
      <![CDATA[  【15时24分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时24分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有时间条件——Workday]]>
    </line>
    <line>
      <![CDATA[  【15时24分51秒 执行操作】 添加时间条件Workday:默认的工作时间]]>
    </line>
    <line>
      <![CDATA[  【15时24分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时24分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加TimeConditions]]>
    </line>
    <line>
      <![CDATA[  【15时24分58秒 执行操作】 编辑Workday]]>
    </line>
    <line>
      <![CDATA[  【15时24分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时25分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时25分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时25分15秒 执行操作】Extjs： return  Ext.query("input[name='starthour']")[1].value = '14']]>
    </line>
    <line>
      <![CDATA[  【15时25分17秒 执行操作】Extjs： return  Ext.query("input[name='endhour']")[1].value = '18']]>
    </line>
    <line>
      <![CDATA[  【15时25分18秒 执行操作】 删除所有时间条件——Holiday]]>
    </line>
    <line>
      <![CDATA[  【15时25分18秒 执行操作】删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【15时25分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时25分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时25分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时25分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时25分29秒 执行操作】deletes 删除所有Holiday: 1]]>
    </line>
    <line>
      <![CDATA[  【15时25分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时25分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时25分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时25分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时26分14秒 执行操作】deleting 删除所有Holiday: 0]]>
    </line>
    <line>
      <![CDATA[  【15时26分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时26分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass: 删除所有Holiday]]>
    </line>
    <line>
      <![CDATA[  【15时26分17秒 执行操作】 删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【15时26分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时26分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时26分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时26分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时26分28秒 执行操作】deletes  删除所有Conference: 0]]>
    </line>
    <line>
      <![CDATA[  【15时26分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时26分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:  删除所有Conference]]>
    </line>
    <line>
      <![CDATA[  【15时26分30秒 执行操作】 添加Conference1:6400]]>
    </line>
    <line>
      <![CDATA[  【15时26分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时26分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时26分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时26分40秒 执行操作】 取消分机1000具有拨打时间特征码的权限]]>
    </line>
    <line>
      <![CDATA[  【15时26分42秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 15时27分11秒执行完毕：======  InboundRoutes  ======

]]>
    </line>
    <line>
      <![CDATA[  【15时27分24秒 执行操作】pjsip init 0]]>
    </line>
    <line>
      <![CDATA[  【15时27分24秒 执行操作】pjisp main 0]]>
    </line>
    <line>
      <![CDATA[  【15时27分24秒 执行操作】pjs_init done]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】_2018年10月18日 15时27分24秒开始执行：====== Blacklist/Whitelist ======]]>
    </line>
    <line>
      <![CDATA[  【15时27分44秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
    </line>
    <line>
      <![CDATA[  【15时27分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时27分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时27分53秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时27分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分02秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时28分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分07秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时28分08秒 执行操作】Extjs： return Ext.getCmp("me-bw-onlywhitelist").value]]>
    </line>
    <line>
      <![CDATA[  【15时28分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分31秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时28分35秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
    </line>
    <line>
      <![CDATA[  【15时28分36秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时28分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时28分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分44秒 执行操作】  删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[  【15时28分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
    </line>
    <line>
      <![CDATA[  【15时28分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
    </line>
    <line>
      <![CDATA[  【15时28分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
    </line>
    <line>
      <![CDATA[  【15时28分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时28分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时28分55秒 执行操作】deletes   删除所有紧急号码: 0]]>
    </line>
    <line>
      <![CDATA[  【15时28分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时28分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[    Pass:   删除所有紧急号码]]>
    </line>
    <line>
      <![CDATA[  【15时29分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时29分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时29分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时29分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时29分10秒 执行操作】 主测设备注册分机1000]]>
    </line>
    <line>
      <![CDATA[  【15时29分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分17秒 执行操作】 主测设备注册分机1100]]>
    </line>
    <line>
      <![CDATA[  【15时29分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分23秒 执行操作】 主测设备注册分机1101]]>
    </line>
    <line>
      <![CDATA[  【15时29分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分29秒 执行操作】 主测设备注册分机1102]]>
    </line>
    <line>
      <![CDATA[  【15时29分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分38秒 执行操作】 主测设备注册分机1103]]>
    </line>
    <line>
      <![CDATA[  【15时29分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分46秒 执行操作】 主测设备注册分机1105]]>
    </line>
    <line>
      <![CDATA[  【15时29分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时29分54秒 执行操作】 主测设备注册分机1106]]>
    </line>
    <line>
      <![CDATA[  【15时29分54秒 执行操作】 辅助设备1注册分机3001]]>
    </line>
    <line>
      <![CDATA[  【15时29分56秒 执行操作】 辅助设备1注册分机3004]]>
    </line>
    <line>
      <![CDATA[  【15时29分58秒 执行操作】 辅助设备1注册分机3005]]>
    </line>
    <line>
      <![CDATA[  【15时30分00秒 执行操作】 辅助设备2注册分机2000]]>
    </line>
    <line>
      <![CDATA[  【15时30分02秒 执行操作】 辅助设备2注册分机2001]]>
    </line>
    <line>
      <![CDATA[  【15时30分04秒 执行操作】 辅助设备2注册分机2002]]>
    </line>
    <line>
      <![CDATA[  【15时30分06秒 执行操作】 辅助设备2注册分机2006]]>
    </line>
    <line>
      <![CDATA[  【15时30分10秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时30分27秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时30分34秒 执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时30分37秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时30分43秒 执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时30分45秒 执行操作】 2000拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时31分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时31分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时31分15秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时31分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时31分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时32分01秒 执行操作】1105呼入到1000——内部分机互打，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时32分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时32分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时32分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时32分31秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('inbound')]]>
    </line>
    <line>
      <![CDATA[  【15时32分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时32分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时32分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时32分50秒 执行操作】辅助设备分机2001通过SPS呼入到1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时33分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时33分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时33分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时33分19秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时33分25秒 执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时33分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时33分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时33分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时33分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时33分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时33分47秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时33分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时34分02秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时34分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时34分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时34分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时34分31秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时34分37秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时34分39秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时34分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时34分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时35分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时35分08秒 执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分14秒 执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分16秒 执行操作】 1101拨打30123通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分22秒 执行操作】 1101拨打30123,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分24秒 执行操作】 1000拨打1105——内部分机互打，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分31秒 执行操作】 1000拨打1105,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时35分34秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时35分54秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时36分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时36分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时36分23秒 执行操作】 1000拨打1105——内部分机互打，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时36分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时36分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时36分54秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时36分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时36分59秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时37分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时37分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时37分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时37分14秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时37分15秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时37分16秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时37分17秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('49,50')]]>
    </line>
    <line>
      <![CDATA[  【15时37分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时37分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时37分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时37分33秒 执行操作】 1000拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时37分39秒 执行操作】 1000拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时37分41秒 执行操作】 1100拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时37分47秒 执行操作】 1100拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时37分49秒 执行操作】 1101拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时38分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时38分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时38分22秒 执行操作】 1100拨打13004通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[  【15时38分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[  【15时38分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时38分40秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时38分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时38分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时38分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时39分02秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时39分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时39分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时39分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时39分32秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时39分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时39分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时39分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时39分50秒 执行操作】 1000拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时40分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时40分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时40分19秒 执行操作】 1100拨打13001通过sip外线呼出]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时40分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时40分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时40分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时40分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时40分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时41分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时41分02秒 执行操作】修改黑名单]]>
    </line>
    <line>
      <![CDATA[  【15时41分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时41分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时41分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时41分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时41分28秒 执行操作】 1105拨打13001通过sip外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时41分34秒 执行操作】 1105拨打13001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时41分36秒 执行操作】 1100拨打33004通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时41分42秒 执行操作】 1100拨打33004,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时41分44秒 执行操作】 3004拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时42分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时42分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时42分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时42分19秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时42分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时42分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时42分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时42分37秒 执行操作】 1100拨打33004通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[  【15时42分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时42分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时43分08秒 执行操作】 1105拨打13001通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时43分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时43分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时43分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时43分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时43分41秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时43分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时43分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时43分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时43分56秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时43分57秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时43分58秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时43分59秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('56,52')]]>
    </line>
    <line>
      <![CDATA[  【15时44分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时44分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时44分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时44分15秒 执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分21秒 执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分23秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分29秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分31秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分37秒 执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时44分39秒 执行操作】 1103拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时44分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时45分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时45分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时45分12秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时45分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时45分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】</a>]]>
    </line>
    <line>
      <![CDATA[  【15时45分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时45分51秒 执行操作】 1102拨打1105——内部分机互打，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时46分05秒 执行操作】 1102拨打1105,预期呼出失败,实际呼出成功]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1102拨打1105,预期呼出失败,实际呼出成功.jpg" target="_blank">Error:  1102拨打1105,预期呼出失败,实际呼出成功</a>]]>
    </line>
    <line>
      <![CDATA[  【15时46分09秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时46分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时46分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时46分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时46分27秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时46分33秒 执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时46分35秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时47分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时47分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分21秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时47分21秒 执行操作】 1102拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时47分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时47分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时47分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时48分07秒 执行操作】 1102拨打1105——内部分机互打，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时48分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时48分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时48分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时48分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时48分40秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时48分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时48分46秒 执行操作】修改黑名单]]>
    </line>
    <line>
      <![CDATA[  【15时48分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时48分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时48分55秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时49分01秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时49分02秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('56')]]>
    </line>
    <line>
      <![CDATA[  【15时49分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时49分16秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时49分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时49分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时49分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时49分44秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时49分51秒 执行操作】 1100拨打32002,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时49分53秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时49分59秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时50分01秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时50分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时50分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时50分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时50分31秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时50分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时50分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时50分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时50分49秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时51分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时51分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时51分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时51分17秒 执行操作】 1100拨打32001通过sps外线呼出,预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时51分23秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时51分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时51分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时51分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时51分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时51分41秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时51分45秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【15时51分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时52分00秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分06秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分08秒 执行操作】 1101拨打13004通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分14秒 执行操作】 1101拨打13004,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分16秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分26秒 执行操作】 2002拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分28秒 执行操作】 3004拨打3000通过sip外线呼入到分机1000,预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分38秒 执行操作】 3004拨打3000,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时52分44秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【15时52分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时52分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时52分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【15时53分02秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
    </line>
    <line>
      <![CDATA[  【15时53分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时53分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时53分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [1000] 实际：1000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [1000] 实际：1000】</a>]]>
    </line>
    <line>
      <![CDATA[  【15时53分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时53分42秒 执行操作】 1101拨打33004通过sip外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时53分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时54分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时54分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时54分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时54分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时54分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时54分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时54分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时54分30秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【15时54分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时54分45秒 执行操作】 1101拨打3123通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时55分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时55分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时55分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时55分14秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分20秒 执行操作】 1101拨打32234,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分22秒 执行操作】 1101拨打312345通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分28秒 执行操作】 1101拨打312345,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分30秒 执行操作】 2002拨打991234通过sip外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分36秒 执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时55分40秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【15时55分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时55分56秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时56分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时56分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时56分24秒 执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时56分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时56分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时56分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时56分53秒 执行操作】修改白名单——whitelist]]>
    </line>
    <line>
      <![CDATA[  【15时56分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时56分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【15时57分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【15时57分06秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时57分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时57分20秒 执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时57分26秒 执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【15时57分28秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时57分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时57分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时57分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时57分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时58分01秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时58分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时58分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时58分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时58分16秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【15时58分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时58分23秒 执行操作】 新增紧急号码：3001，trunk选择SPS]]>
    </line>
    <line>
      <![CDATA[  【15时58分25秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时58分30秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
    </line>
    <line>
      <![CDATA[  【15时58分31秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('19')]]>
    </line>
    <line>
      <![CDATA[  【15时58分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时58分43秒 执行操作】 1101拨打3001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【15时58分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时59分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR源中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR目的中继检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【15时59分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时59分12秒 执行操作】 全部勾选紧急号码-确定删除]]>
    </line>
    <line>
      <![CDATA[  【15时59分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【15时59分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时59分23秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【15时59分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【15时59分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【15时59分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【16时00分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时00分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时00分09秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
    </line>
    <line>
      <![CDATA[  【16时00分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时00分18秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时00分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时00分23秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时00分25秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【16时00分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时00分37秒 执行操作】 1100拨打32001通过sps外线呼出,预期呼出成功]]>
    </line>
    <line>
      <![CDATA[  【16时00分50秒 执行操作】 1100拨打32001,预期呼出成功,实际呼出成功]]>
    </line>
    <line>
      <![CDATA[  【16时00分52秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时00分59秒 执行操作】 1000拨打32001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时01分01秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时01分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时01分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分28秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【16时01分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时01分40秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时01分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时01分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时01分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时02分00秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时02分03秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【16时02分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时02分11秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时02分14秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【16时02分18秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
    </line>
    <line>
      <![CDATA[  【16时02分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时02分30秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时02分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时02分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时02分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时02分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时02分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时02分51秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时03分03秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时03分07秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【16时03分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时03分19秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时03分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时03分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时03分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时03分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时03分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时03分40秒 执行操作】修改白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【16时03分41秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时03分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【16时03分48秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【16时03分54秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
    </line>
    <line>
      <![CDATA[  【16时03分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时04分07秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时04分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时04分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时04分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时04分29秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时04分32秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getSelectionModel().selectAll()]]>
    </line>
    <line>
      <![CDATA[  【16时04分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时04分39秒 执行操作】修改黑名单——black_me]]>
    </line>
    <line>
      <![CDATA[  【16时04分40秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时04分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【16时04分47秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【16时04分52秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【16时04分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时05分07秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时05分13秒 执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时05分15秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时05分27秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时05分29秒 执行操作】 1000拨打33002通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时05分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时05分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时05分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时05分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时05分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时05分48秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时05分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时06分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分10秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
    </line>
    <line>
      <![CDATA[  【16时06分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时06分23秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时06分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时06分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时06分42秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时06分54秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
    </line>
    <line>
      <![CDATA[  【16时06分57秒 执行操作】修改me白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【16时06分58秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时06分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【16时07分05秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【16时07分10秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
    </line>
    <line>
      <![CDATA[  【16时07分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时07分24秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时07分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时07分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时07分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时07分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时07分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时07分44秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时07分50秒 执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
    </line>
    <line>
      <![CDATA[  【16时07分52秒 执行操作】修改me白名单——white_me]]>
    </line>
    <line>
      <![CDATA[  【16时07分53秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
    </line>
    <line>
      <![CDATA[  【16时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[  【16时08分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
    </line>
    <line>
      <![CDATA[  【16时08分06秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
    </line>
    <line>
      <![CDATA[  【16时08分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时08分19秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时08分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时08分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分37秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
    </line>
    <line>
      <![CDATA[  【16时08分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
    </line>
    <line>
      <![CDATA[  【16时08分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【16时08分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR通讯类型检测]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】_2018年10月18日 16时09分03秒执行完毕：====== Blacklist/Whitelist ======

]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="17215660" started-at="2018-10-18T03:22:20Z" finished-at="2018-10-18T08:09:16Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="17215660" started-at="2018-10-18T03:22:20Z" finished-at="2018-10-18T08:09:16Z">
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="BeforeClass" is-config="true" duration-ms="35024" started-at="2018-10-18T11:22:20Z" finished-at="2018-10-18T11:22:55Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 11时22分20秒开始执行：=======  Queue  =======]]>
            </line>
            <line>
              <![CDATA[  【11时22分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时22分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时22分48秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时22分51秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【11时22分53秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时22分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_initBeforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A1_initBeforeTest" duration-ms="0" started-at="2018-10-18T11:22:55Z" finished-at="2018-10-18T11:22:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A1_initBeforeTest -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T11:22:55Z" finished-at="2018-10-18T11:22:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A3_Init" duration-ms="41552" started-at="2018-10-18T11:22:55Z" finished-at="2018-10-18T11:23:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时23分02秒 执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【11时23分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【11时23分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【11时23分08秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【11时23分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时23分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时23分13秒 执行操作】deletes  删除所有Queue: 1]]>
            </line>
            <line>
              <![CDATA[  【11时23分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时23分18秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【11时23分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时23分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时23分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时23分27秒 执行操作】deleting  删除所有Queue: 0]]>
            </line>
            <line>
              <![CDATA[  【11时23分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时23分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T11:23:37Z" finished-at="2018-10-18T11:23:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="34602" started-at="2018-10-18T11:23:37Z" data-provider="add" finished-at="2018-10-18T11:24:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=ExtensionGroup1,1103, Satisfaction=satisfaction, AgentTimeout=15, Name=a, HoldTime=false, Number=6701, RingStrategy=ringall, PeriodicFrequency=60, DID=, Password=, MusicOnHold=Autotest, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=[None], Retry=20, AgentID=[Default], AgentAnnouncement=AgentAnnouncement, Key=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时23分37秒 执行操作】添加队列a：6701]]>
            </line>
            <line>
              <![CDATA[  【11时23分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时23分41秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
            </line>
            <line>
              <![CDATA[  【11时23分42秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时23分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时23分45秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时23分46秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('56,53')]]>
            </line>
            <line>
              <![CDATA[  【11时23分48秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时23分50秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('Autotest')]]>
            </line>
            <line>
              <![CDATA[  【11时23分51秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时23分53秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时23分54秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时23分55秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[Default]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时23分56秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('ls_builtin_member_service')]]>
            </line>
            <line>
              <![CDATA[  【11时24分00秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时24分01秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
            </line>
            <line>
              <![CDATA[  【11时24分05秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时24分06秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时24分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时24分08秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分09秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时24分10秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【11时24分11秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('h')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-10-18T11:24:12Z" finished-at="2018-10-18T11:24:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="31590" started-at="2018-10-18T11:24:12Z" data-provider="add" finished-at="2018-10-18T11:24:44Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=队列6702, HoldTime=false, Number=6702, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503301, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=10, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时24分12秒 执行操作】添加队列队列6702：6702]]>
            </line>
            <line>
              <![CDATA[  【11时24分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时24分16秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
            </line>
            <line>
              <![CDATA[  【11时24分17秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时24分19秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分22秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分23秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时24分24秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时24分25秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分26秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时24分27秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分31秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时24分32秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分36秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时24分37秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时24分38秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('120')]]>
            </line>
            <line>
              <![CDATA[  【11时24分39秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时24分40秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('120')]]>
            </line>
            <line>
              <![CDATA[  【11时24分41秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时24分42秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('h')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T11:24:44Z" finished-at="2018-10-18T11:24:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="43920" started-at="2018-10-18T11:24:44Z" data-provider="add" finished-at="2018-10-18T11:25:28Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=20, Name=FailtoExtension, HoldTime=false, Number=6703, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503302, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=e, FailoverDes2=1000, KeyDes2=1000, FailoverDes1=e, MaxWaitTime=15, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时24分44秒 执行操作】添加队列FailtoExtension：6703]]>
            </line>
            <line>
              <![CDATA[  【11时24分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时24分48秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
            </line>
            <line>
              <![CDATA[  【11时24分49秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时24分51秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时24分52秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【11时24分56秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时24分57秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
            </line>
            <line>
              <![CDATA[  【11时24分58秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分01秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分02秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时25分03秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时25分04秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分05秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时25分06秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分10秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时25分11秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分15秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时25分16秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时25分17秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('120')]]>
            </line>
            <line>
              <![CDATA[  【11时25分18秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分19秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('120')]]>
            </line>
            <line>
              <![CDATA[  【11时25分20秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时25分21秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时25分22秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时25分23秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T11:25:28Z" finished-at="2018-10-18T11:25:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="44227" started-at="2018-10-18T11:25:28Z" data-provider="add" finished-at="2018-10-18T11:26:12Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=30, Name=12345abcdefghijklmnopqrstuvwxyz, HoldTime=true, Number=6704, RingStrategy=random, PeriodicFrequency=60, DID=5503303, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=v, FailoverDes2=1105, KeyDes2=1105, FailoverDes1=v, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时25分28秒 执行操作】添加队列12345abcdefghijklmnopqrstuvwxyz：6704]]>
            </line>
            <line>
              <![CDATA[  【11时25分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时25分32秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('random')]]>
            </line>
            <line>
              <![CDATA[  【11时25分33秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【11时25分35秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时25分36秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('55')]]>
            </line>
            <line>
              <![CDATA[  【11时25分40秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时25分41秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
            </line>
            <line>
              <![CDATA[  【11时25分43秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时25分45秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分46秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时25分47秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时25分48秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分49秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时25分50秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分54秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时25分55秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时25分59秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时26分00秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时26分01秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时26分02秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时26分03秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时26分04秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('2')]]>
            </line>
            <line>
              <![CDATA[  【11时26分05秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【11时26分07秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时26分08秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('55')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T11:26:12Z" finished-at="2018-10-18T11:26:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="43683" started-at="2018-10-18T11:26:12Z" data-provider="add" finished-at="2018-10-18T11:26:55Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=10, Name=*.*, HoldTime=false, Number=6705, RingStrategy=rrmemory, PeriodicFrequency=30, DID=5503304, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=i, FailoverDes2=IVR1, KeyDes2=IVR1, FailoverDes1=i, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=[None], Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时26分12秒 执行操作】添加队列*.*：6705]]>
            </line>
            <line>
              <![CDATA[  【11时26分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时26分16秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('rrmemory')]]>
            </line>
            <line>
              <![CDATA[  【11时26分17秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【11时26分19秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时26分20秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('14')]]>
            </line>
            <line>
              <![CDATA[  【11时26分24秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1104", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时26分25秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('54')]]>
            </line>
            <line>
              <![CDATA[  【11时26分26秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时26分29秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时26分30秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时26分31秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时26分32秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时26分33秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时26分34秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时26分38秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时26分39秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时26分43秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时26分44秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时26分45秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时26分46秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时26分47秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时26分48秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【11时26分49秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【11时26分50秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时26分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('14')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="64" started-at="2018-10-18T11:26:55Z" finished-at="2018-10-18T11:26:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="41691" started-at="2018-10-18T11:26:56Z" data-provider="add" finished-at="2018-10-18T11:27:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=Queue6705, HoldTime=true, Number=6706, RingStrategy=linear, PeriodicFrequency=30, DID=5503305, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=r, FailoverDes2=RingGroup1, KeyDes2=RingGroup1, FailoverDes1=r, MaxWaitTime=10, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时26分56秒 执行操作】添加队列Queue6705：6706]]>
            </line>
            <line>
              <![CDATA[  【11时26分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时27分00秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('linear')]]>
            </line>
            <line>
              <![CDATA[  【11时27分01秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【11时27分03秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时27分04秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【11时27分08秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时27分11秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分12秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时27分13秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时27分14秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分15秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时27分16秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分20秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时27分21秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分25秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时27分26秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时27分27秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时27分28秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时27分29秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时27分30秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【11时27分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【11时27分32秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时27分33秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('5')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T11:27:37Z" finished-at="2018-10-18T11:27:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="41901" started-at="2018-10-18T11:27:37Z" data-provider="add" finished-at="2018-10-18T11:28:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=さようなら, HoldTime=true, Number=6707, RingStrategy=ringall, PeriodicFrequency=30, DID=5503306, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=q, FailoverDes2=a, KeyDes2=a, FailoverDes1=q, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时27分37秒 执行操作】添加队列さようなら：6707]]>
            </line>
            <line>
              <![CDATA[  【11时27分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时27分41秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
            </line>
            <line>
              <![CDATA[  【11时27分42秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时27分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时27分45秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('21')]]>
            </line>
            <line>
              <![CDATA[  【11时27分50秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时27分52秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分54秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时27分55秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时27分56秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时27分57秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时27分58秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分02秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时28分03秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时28分08秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时28分09秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时28分10秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时28分11秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时28分12秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【11时28分13秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时28分14秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时28分15秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('21')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T11:28:19Z" finished-at="2018-10-18T11:28:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="42038" started-at="2018-10-18T11:28:19Z" data-provider="add" finished-at="2018-10-18T11:29:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Досвидания, HoldTime=false, Number=6708, RingStrategy=ringall, PeriodicFrequency=30, DID=5503307, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=c, FailoverDes2=Conference1, KeyDes2=Conference1, FailoverDes1=c, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时28分19秒 执行操作】添加队列Досвидания：6708]]>
            </line>
            <line>
              <![CDATA[  【11时28分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时28分23秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
            </line>
            <line>
              <![CDATA[  【11时28分24秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【11时28分26秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时28分27秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('9')]]>
            </line>
            <line>
              <![CDATA[  【11时28分32秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时28分34秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分36秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时28分37秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时28分38秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分39秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时28分40秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分44秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时28分45秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时28分49秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时28分50秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时28分51秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时28分52秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时28分53秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时28分54秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('6')]]>
            </line>
            <line>
              <![CDATA[  【11时28分55秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【11时28分56秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时28分57秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('9')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T11:29:01Z" finished-at="2018-10-18T11:29:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="31695" started-at="2018-10-18T11:29:01Z" data-provider="add" finished-at="2018-10-18T11:29:33Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=viszontlátasra, HoldTime=false, Number=6709, RingStrategy=ringall, PeriodicFrequency=30, DID=5503308, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=D, FailoverDes2=, KeyDes2=, FailoverDes1=D, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=7}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时29分01秒 执行操作】添加队列viszontlátasra：6709]]>
            </line>
            <line>
              <![CDATA[  【11时29分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时29分06秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('ringall')]]>
            </line>
            <line>
              <![CDATA[  【11时29分07秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('D')]]>
            </line>
            <line>
              <![CDATA[  【11时29分09秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时29分11秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时29分13秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时29分14秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时29分15秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时29分16秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时29分17秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时29分21秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时29分22秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时29分26秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时29分27秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时29分28秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时29分29秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时29分30秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时29分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('7')]]>
            </line>
            <line>
              <![CDATA[  【11时29分32秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('D')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T11:29:33Z" finished-at="2018-10-18T11:29:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="44938" started-at="2018-10-18T11:29:33Z" data-provider="add" finished-at="2018-10-18T11:30:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=1100,1105, Satisfaction=[None], AgentTimeout=10, Name=Autotest, HoldTime=false, Number=6710, RingStrategy=leastrecent, PeriodicFrequency=30, DID=5503309, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1103, KeyDes1=e, FailoverDes2=1100, KeyDes2=1100, FailoverDes1=e, MaxWaitTime=1800, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=8}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时29分33秒 执行操作】添加队列Autotest：6710]]>
            </line>
            <line>
              <![CDATA[  【11时29分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时29分37秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('leastrecent')]]>
            </line>
            <line>
              <![CDATA[  【11时29分38秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时29分40秒 执行操作】Extjs： return  Ext.getCmp('st-queue-failoverdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时29分41秒 执行操作】Extjs： Ext.getCmp('st-queue-failoverdest').setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【11时29分45秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时29分46秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时29分47秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('50,55')]]>
            </line>
            <line>
              <![CDATA[  【11时29分49秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时29分51秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【11时29分52秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时29分53秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时29分54秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时29分55秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时29分57秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时30分01秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时30分02秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时30分06秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时30分07秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时30分08秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时30分09秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时30分10秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时30分11秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('8')]]>
            </line>
            <line>
              <![CDATA[  【11时30分12秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时30分13秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时30分14秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('50')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-10-18T11:30:18Z" finished-at="2018-10-18T11:30:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="40110" started-at="2018-10-18T11:30:18Z" data-provider="add" finished-at="2018-10-18T11:30:58Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_fewstcalls, HoldTime=false, Number=6711, RingStrategy=fewestcalls, PeriodicFrequency=60, DID=5503310, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时30分18秒 执行操作】添加队列Queue_fewstcalls：6711]]>
            </line>
            <line>
              <![CDATA[  【11时30分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时30分22秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('fewestcalls')]]>
            </line>
            <line>
              <![CDATA[  【11时30分23秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时30分25秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时30分27秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时30分28秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,55')]]>
            </line>
            <line>
              <![CDATA[  【11时30分29秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时30分31秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【11时30分33秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时30分34秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时30分35秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
            </line>
            <line>
              <![CDATA[  【11时30分36秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时30分37秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
            </line>
            <line>
              <![CDATA[  【11时30分41秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时30分42秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
            </line>
            <line>
              <![CDATA[  【11时30分46秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时30分47秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时30分48秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时30分49秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时30分50秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时30分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时30分52秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时30分53秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时30分54秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T11:30:58Z" finished-at="2018-10-18T11:30:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="37125" started-at="2018-10-18T11:30:58Z" data-provider="add" finished-at="2018-10-18T11:31:35Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Queue_random, HoldTime=false, Number=6712, RingStrategy=random, PeriodicFrequency=60, DID=5503311, Password=1234567890, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时30分58秒 执行操作】添加队列Queue_random：6712]]>
            </line>
            <line>
              <![CDATA[  【11时31分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时31分03秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('random')]]>
            </line>
            <line>
              <![CDATA[  【11时31分04秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时31分06秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时31分09秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【11时31分10秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时31分11秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时31分12秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时31分13秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时31分14秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时31分18秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "[None]", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时31分19秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('[None]')]]>
            </line>
            <line>
              <![CDATA[  【11时31分23秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时31分24秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时31分25秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时31分26秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时31分27秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时31分28秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时31分29秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时31分30秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时31分31秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-10-18T11:31:35Z" finished-at="2018-10-18T11:31:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="39150" started-at="2018-10-18T11:31:35Z" data-provider="add" finished-at="2018-10-18T11:32:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=ExtensionGroup1, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_rrmemory, HoldTime=false, Number=6713, RingStrategy=rrmemory, PeriodicFrequency=60, DID=5503312, Password=1, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时31分35秒 执行操作】添加队列Queue_rrmemory：6713]]>
            </line>
            <line>
              <![CDATA[  【11时31分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时31分40秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('rrmemory')]]>
            </line>
            <line>
              <![CDATA[  【11时31分41秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时31分43秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时31分44秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('56')]]>
            </line>
            <line>
              <![CDATA[  【11时31分45秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时31分48秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【11时31分49秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时31分50秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时31分51秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
            </line>
            <line>
              <![CDATA[  【11时31分52秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时31分53秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
            </line>
            <line>
              <![CDATA[  【11时31分57秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时31分58秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
            </line>
            <line>
              <![CDATA[  【11时32分02秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时32分03秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时32分04秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时32分05秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时32分06秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时32分07秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时32分08秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时32分09秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时32分10秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T11:32:14Z" finished-at="2018-10-18T11:32:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A4_AddQueues(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="A4_AddQueues" duration-ms="41069" started-at="2018-10-18T11:32:14Z" data-provider="add" finished-at="2018-10-18T11:32:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1100,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_linear, HoldTime=false, Number=6714, RingStrategy=linear, PeriodicFrequency=60, DID=5503313, Password=0, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101,1103, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时32分14秒 执行操作】添加队列Queue_linear：6714]]>
            </line>
            <line>
              <![CDATA[  【11时32分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时32分19秒 执行操作】Extjs： Ext.getCmp('st-queue-ringstrategy').setValue('linear')]]>
            </line>
            <line>
              <![CDATA[  【11时32分20秒 执行操作】Extjs： Ext.getCmp('st-queue-failoveraction').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【11时32分22秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时32分23秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时32分24秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时32分25秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,50,55')]]>
            </line>
            <line>
              <![CDATA[  【11时32分26秒 执行操作】Extjs： Ext.getCmp('st-queue-agentannounce').setValue('AgentAnnouncement')]]>
            </line>
            <line>
              <![CDATA[  【11时32分29秒 执行操作】Extjs： Ext.getCmp('st-queue-musiconhold').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【11时32分30秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时32分31秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时32分32秒 执行操作】Extjs： Ext.getCmp('st-queue-joinannounce').setValue('Join')]]>
            </line>
            <line>
              <![CDATA[  【11时32分33秒 执行操作】Extjs： return  Ext.getCmp('st-queue-greetingsprompt').getStore().findRecord('name', "agentid", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时32分34秒 执行操作】Extjs： Ext.getCmp('st-queue-greetingsprompt').setValue('record/agentid')]]>
            </line>
            <line>
              <![CDATA[  【11时32分38秒 执行操作】Extjs： return  Ext.getCmp('st-queue-satisfactionprompt').getStore().findRecord('name', "satisfaction", 0, false, false, true).data.value]]>
            </line>
            <line>
              <![CDATA[  【11时32分39秒 执行操作】Extjs： Ext.getCmp('st-queue-satisfactionprompt').setValue('record/satisfaction')]]>
            </line>
            <line>
              <![CDATA[  【11时32分43秒 执行操作】Extjs： Ext.getCmp('st-queue-announcepos').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时32分44秒 执行操作】Extjs： Ext.getCmp('st-queue-announceholdtime').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【11时32分45秒 执行操作】Extjs： Ext.getCmp('st-queue-announcefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时32分46秒 执行操作】Extjs： Ext.getCmp('st-queue-userannounce').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【11时32分47秒 执行操作】Extjs： Ext.getCmp('st-queue-userannouncefreq').setValue('60')]]>
            </line>
            <line>
              <![CDATA[  【11时32分48秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutkey').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【11时32分49秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【11时32分50秒 执行操作】Extjs： return  Ext.getCmp('st-queue-breakoutdest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时32分51秒 执行操作】Extjs： Ext.getCmp('st-queue-breakoutdest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A4_AddQueues -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="56" started-at="2018-10-18T11:32:56Z" finished-at="2018-10-18T11:32:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AddInbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B1_AddInbound" duration-ms="60436" started-at="2018-10-18T11:32:56Z" finished-at="2018-10-18T11:33:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时32分58秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【11时33分02秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【11时33分03秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【11时33分04秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【11时33分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时33分09秒 执行操作】deletes  删除所有呼入路由: 1]]>
            </line>
            <line>
              <![CDATA[  【11时33分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时33分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【11时33分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时33分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时33分54秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【11时33分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时33分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T11:33:56Z" finished-at="2018-10-18T11:33:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="19919" started-at="2018-10-18T11:33:56Z" data-provider="add" finished-at="2018-10-18T11:34:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=ExtensionGroup1,1103, Satisfaction=satisfaction, AgentTimeout=15, Name=a, HoldTime=false, Number=6701, RingStrategy=ringall, PeriodicFrequency=60, DID=, Password=, MusicOnHold=Autotest, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=[None], Retry=20, AgentID=[Default], AgentAnnouncement=AgentAnnouncement, Key=0}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时33分56秒 执行操作】添加呼入路由：aDID：，Destination：a]]>
            </line>
            <line>
              <![CDATA[  【11时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时34分00秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时34分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分05秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时34分06秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时34分07秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时34分08秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('21')]]>
            </line>
            <line>
              <![CDATA[  【11时34分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T11:34:16Z" finished-at="2018-10-18T11:34:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20337" started-at="2018-10-18T11:34:16Z" data-provider="add" finished-at="2018-10-18T11:34:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=队列6702, HoldTime=false, Number=6702, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503301, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=h, FailoverDes2=, KeyDes2=, FailoverDes1=h, MaxWaitTime=10, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时34分16秒 执行操作】添加呼入路由：队列6702DID：5503301，Destination：队列6702]]>
            </line>
            <line>
              <![CDATA[  【11时34分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时34分20秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时34分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分25秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时34分26秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时34分27秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "队列6702", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时34分28秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('22')]]>
            </line>
            <line>
              <![CDATA[  【11时34分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="52" started-at="2018-10-18T11:34:36Z" finished-at="2018-10-18T11:34:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20555" started-at="2018-10-18T11:34:36Z" data-provider="add" finished-at="2018-10-18T11:34:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=20, Name=FailtoExtension, HoldTime=false, Number=6703, RingStrategy=fewestcalls, PeriodicFrequency=120, DID=5503302, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=e, FailoverDes2=1000, KeyDes2=1000, FailoverDes1=e, MaxWaitTime=15, JoinEmpty=true, Frequency=120, Prompt=[None], Retry=5, AgentID=[None], AgentAnnouncement=[None], Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时34分36秒 执行操作】添加呼入路由：FailtoExtensionDID：5503302，Destination：FailtoExtension]]>
            </line>
            <line>
              <![CDATA[  【11时34分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时34分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时34分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时34分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时34分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时34分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "FailtoExtension", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时34分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('23')]]>
            </line>
            <line>
              <![CDATA[  【11时34分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T11:34:57Z" finished-at="2018-10-18T11:34:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20963" started-at="2018-10-18T11:34:57Z" data-provider="add" finished-at="2018-10-18T11:35:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=30, Name=12345abcdefghijklmnopqrstuvwxyz, HoldTime=true, Number=6704, RingStrategy=random, PeriodicFrequency=60, DID=5503303, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=v, FailoverDes2=1105, KeyDes2=1105, FailoverDes1=v, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=2}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时34分57秒 执行操作】添加呼入路由：12345abcdefghijklmnopqrstuvwxyzDID：5503303，Destination：12345abcdefghijklmnopqrstuvwxyz]]>
            </line>
            <line>
              <![CDATA[  【11时34分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时35分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时35分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时35分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时35分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "12345abcdefghijklmnopqrstuvwxyz", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时35分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('24')]]>
            </line>
            <line>
              <![CDATA[  【11时35分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T11:35:18Z" finished-at="2018-10-18T11:35:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20261" started-at="2018-10-18T11:35:18Z" data-provider="add" finished-at="2018-10-18T11:35:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=1104, Satisfaction=[None], AgentTimeout=10, Name=*.*, HoldTime=false, Number=6705, RingStrategy=rrmemory, PeriodicFrequency=30, DID=5503304, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=i, FailoverDes2=IVR1, KeyDes2=IVR1, FailoverDes1=i, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=[None], Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=3}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时35分18秒 执行操作】添加呼入路由：*.*DID：5503304，Destination：*.*]]>
            </line>
            <line>
              <![CDATA[  【11时35分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时35分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时35分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分27秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时35分28秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时35分29秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "*.*", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时35分30秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【11时35分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T11:35:38Z" finished-at="2018-10-18T11:35:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20382" started-at="2018-10-18T11:35:38Z" data-provider="add" finished-at="2018-10-18T11:35:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=Queue6705, HoldTime=true, Number=6706, RingStrategy=linear, PeriodicFrequency=30, DID=5503305, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=true, DynamicAgents=, KeyDes1=r, FailoverDes2=RingGroup1, KeyDes2=RingGroup1, FailoverDes1=r, MaxWaitTime=10, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=4}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时35分38秒 执行操作】添加呼入路由：Queue6705DID：5503305，Destination：Queue6705]]>
            </line>
            <line>
              <![CDATA[  【11时35分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时35分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时35分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时35分47秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时35分48秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时35分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue6705", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时35分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('26')]]>
            </line>
            <line>
              <![CDATA[  【11时35分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T11:35:59Z" finished-at="2018-10-18T11:35:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20423" started-at="2018-10-18T11:35:59Z" data-provider="add" finished-at="2018-10-18T11:36:19Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=10, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=10, Name=さようなら, HoldTime=true, Number=6707, RingStrategy=ringall, PeriodicFrequency=30, DID=5503306, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=q, FailoverDes2=a, KeyDes2=a, FailoverDes1=q, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=5}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时35分59秒 执行操作】添加呼入路由：さようならDID：5503306，Destination：さようなら]]>
            </line>
            <line>
              <![CDATA[  【11时36分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时36分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时36分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分08秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时36分09秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时36分10秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "さようなら", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时36分11秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('27')]]>
            </line>
            <line>
              <![CDATA[  【11时36分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T11:36:19Z" finished-at="2018-10-18T11:36:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20408" started-at="2018-10-18T11:36:19Z" data-provider="add" finished-at="2018-10-18T11:36:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Досвидания, HoldTime=false, Number=6708, RingStrategy=ringall, PeriodicFrequency=30, DID=5503307, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=c, FailoverDes2=Conference1, KeyDes2=Conference1, FailoverDes1=c, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=6}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时36分19秒 执行操作】添加呼入路由：ДосвиданияDID：5503307，Destination：Досвидания]]>
            </line>
            <line>
              <![CDATA[  【11时36分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时36分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时36分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分28秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时36分29秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时36分30秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Досвидания", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时36分31秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('28')]]>
            </line>
            <line>
              <![CDATA[  【11时36分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T11:36:40Z" finished-at="2018-10-18T11:36:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20553" started-at="2018-10-18T11:36:40Z" data-provider="add" finished-at="2018-10-18T11:37:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=30, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=20, Name=viszontlátasra, HoldTime=false, Number=6709, RingStrategy=ringall, PeriodicFrequency=30, DID=5503308, Password=, MusicOnHold=[None], LeaveWhenEmpty=false, Position=false, DynamicAgents=, KeyDes1=D, FailoverDes2=, KeyDes2=, FailoverDes1=D, MaxWaitTime=10, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=30, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=7}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时36分40秒 执行操作】添加呼入路由：viszontlátasraDID：5503308，Destination：viszontlátasra]]>
            </line>
            <line>
              <![CDATA[  【11时36分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时36分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时36分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时36分49秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时36分50秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时36分51秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "viszontlátasra", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时36分52秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('29')]]>
            </line>
            <line>
              <![CDATA[  【11时36分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="59" started-at="2018-10-18T11:37:00Z" finished-at="2018-10-18T11:37:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20470" started-at="2018-10-18T11:37:00Z" data-provider="add" finished-at="2018-10-18T11:37:21Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=[None], StaticAgents=1100,1105, Satisfaction=[None], AgentTimeout=10, Name=Autotest, HoldTime=false, Number=6710, RingStrategy=leastrecent, PeriodicFrequency=30, DID=5503309, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1103, KeyDes1=e, FailoverDes2=1100, KeyDes2=1100, FailoverDes1=e, MaxWaitTime=1800, JoinEmpty=true, Frequency=30, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=8}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时37分00秒 执行操作】添加呼入路由：AutotestDID：5503309，Destination：Autotest]]>
            </line>
            <line>
              <![CDATA[  【11时37分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时37分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时37分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分09秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时37分10秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时37分11秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Autotest", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时37分12秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【11时37分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T11:37:21Z" finished-at="2018-10-18T11:37:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20596" started-at="2018-10-18T11:37:21Z" data-provider="add" finished-at="2018-10-18T11:37:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_fewstcalls, HoldTime=false, Number=6711, RingStrategy=fewestcalls, PeriodicFrequency=60, DID=5503310, Password=123, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1102, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时37分21秒 执行操作】添加呼入路由：Queue_fewstcallsDID：5503310，Destination：Queue_fewstcalls]]>
            </line>
            <line>
              <![CDATA[  【11时37分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时37分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时37分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分30秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时37分31秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时37分32秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_fewstcalls", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时37分33秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('31')]]>
            </line>
            <line>
              <![CDATA[  【11时37分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T11:37:41Z" finished-at="2018-10-18T11:37:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20845" started-at="2018-10-18T11:37:41Z" data-provider="add" finished-at="2018-10-18T11:38:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=20, JoinAnnouncement=[None], StaticAgents=, Satisfaction=[None], AgentTimeout=30, Name=Queue_random, HoldTime=false, Number=6712, RingStrategy=random, PeriodicFrequency=60, DID=5503311, Password=1234567890, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=[None], AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时37分41秒 执行操作】添加呼入路由：Queue_randomDID：5503311，Destination：Queue_random]]>
            </line>
            <line>
              <![CDATA[  【11时37分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时37分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时37分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分50秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时37分51秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时37分52秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时37分53秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_random", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时37分54秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('32')]]>
            </line>
            <line>
              <![CDATA[  【11时38分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T11:38:02Z" finished-at="2018-10-18T11:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20659" started-at="2018-10-18T11:38:02Z" data-provider="add" finished-at="2018-10-18T11:38:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=ExtensionGroup1, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_rrmemory, HoldTime=false, Number=6713, RingStrategy=rrmemory, PeriodicFrequency=60, DID=5503312, Password=1, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时38分02秒 执行操作】添加呼入路由：Queue_rrmemoryDID：5503312，Destination：Queue_rrmemory]]>
            </line>
            <line>
              <![CDATA[  【11时38分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时38分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时38分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分12秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时38分13秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时38分14秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_rrmemory", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时38分15秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('33')]]>
            </line>
            <line>
              <![CDATA[  【11时38分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T11:38:23Z" finished-at="2018-10-18T11:38:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B2_AddInbound" duration-ms="20515" started-at="2018-10-18T11:38:23Z" data-provider="add" finished-at="2018-10-18T11:38:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{WrapupTime=0, JoinAnnouncement=Join, StaticAgents=1000,1100,1105, Satisfaction=satisfaction, AgentTimeout=10, Name=Queue_linear, HoldTime=false, Number=6714, RingStrategy=linear, PeriodicFrequency=60, DID=5503313, Password=0, MusicOnHold=default, LeaveWhenEmpty=false, Position=false, DynamicAgents=1101,1103, KeyDes1=e, FailoverDes2=, KeyDes2=1000, FailoverDes1=h, MaxWaitTime=1800, JoinEmpty=true, Frequency=60, Prompt=prompt1, Retry=10, AgentID=agentid, AgentAnnouncement=AgentAnnouncement, Key=1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【11时38分23秒 执行操作】添加呼入路由：Queue_linearDID：5503313，Destination：Queue_linear]]>
            </line>
            <line>
              <![CDATA[  【11时38分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时38分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时38分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分31秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【11时38分32秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【11时38分33秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【11时38分34秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue_linear", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【11时38分35秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('34')]]>
            </line>
            <line>
              <![CDATA[  【11时38分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T11:38:43Z" finished-at="2018-10-18T11:38:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B3_Apply" duration-ms="8085" started-at="2018-10-18T11:38:43Z" finished-at="2018-10-18T11:38:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T11:38:52Z" finished-at="2018-10-18T11:38:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="B5_Register" duration-ms="176409" started-at="2018-10-18T11:38:52Z" finished-at="2018-10-18T11:41:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时38分52秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【11时38分52秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【11时38分52秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【11时38分52秒 执行操作】注册分机1000/1100/1101/1102/1103/1105/3001/2000/2001]]>
            </line>
            <line>
              <![CDATA[  【11时38分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时39分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时40分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_Register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T11:41:48Z" finished-at="2018-10-18T11:41:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_sps_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C1_sps_6701" duration-ms="46974" started-at="2018-10-18T11:41:48Z" finished-at="2018-10-18T11:42:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时41分48秒 执行操作】 2000拨打99999通过sps外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【11时41分53秒 执行操作】Answer Call  2  1100]]>
            </line>
            <line>
              <![CDATA[  【11时41分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时41分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时42分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时42分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时42分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时42分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时42分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时42分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时42分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_sps_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T11:42:35Z" finished-at="2018-10-18T11:42:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sip_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C2_sip_6701" duration-ms="48983" started-at="2018-10-18T11:42:35Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时42分35秒 执行操作】 3001拨打3000通过sip外线呼入，预期呼入到队列6701，分机1000、1100、1101、1105、1103同时响铃，1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【11时42分42秒 执行操作】Answer Call  11  1000]]>
            </line>
            <line>
              <![CDATA[  【11时42分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时42分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时43分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时43分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时43分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时43分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时43分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时43分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时43分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sip_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_iax_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C3_iax_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_iax_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C4_spx_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C4_spx_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_fxo_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C5_fxo_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_fxo_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_bri_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C6_bri_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C6_bri_6701 -->
        <test-method status="PASS" signature="C7_e1_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C7_e1_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_e1_6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_gsm_6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="C8_gsm_6701" duration-ms="0" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_gsm_6701 -->
        <test-method status="PASS" signature="D1_fail_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D1_fail_hangup" duration-ms="11067" started-at="2018-10-18T11:43:24Z" finished-at="2018-10-18T11:43:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时43分24秒 执行操作】 2000拨打995503301通过sps外线呼入到队列6702，预期到Failover：Hangup]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会HangUp]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_fail_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T11:43:35Z" finished-at="2018-10-18T11:43:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_fail_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D2_fail_extension" duration-ms="50428" started-at="2018-10-18T11:43:35Z" finished-at="2018-10-18T11:44:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时43分35秒 执行操作】 2000拨打995503302通过sps外线呼入到队列6703，预期到Failover：分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时43分51秒 执行操作】Answer Call  14  1000]]>
            </line>
            <line>
              <![CDATA[  【11时43分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时43分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时43分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时44分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时44分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时44分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时44分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时44分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时44分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时44分25秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_fail_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T11:44:26Z" finished-at="2018-10-18T11:44:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D3_fail_voicemail1" duration-ms="63064" started-at="2018-10-18T11:44:26Z" finished-at="2018-10-18T11:45:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时44分26秒 执行操作】 2000拨打995503303通过sps外线呼入到队列6704，预期到Failover：分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[  【11时45分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时45分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时45分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时45分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T11:45:29Z" finished-at="2018-10-18T11:45:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail2_check()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D3_fail_voicemail2_check" duration-ms="47573" started-at="2018-10-18T11:45:29Z" finished-at="2018-10-18T11:46:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时45分29秒 执行操作】 分机1105登录，查看存在2000留下的语音留言]]>
            </line>
            <line>
              <![CDATA[  【11时45分46秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【11时45分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时45分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时45分54秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时46分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时46分06秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【11时46分07秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【11时46分08秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【11时46分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时46分13秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时46分14秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时46分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【11时46分16秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第1行的CallerID为2000(2000)]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail2_check -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T11:46:16Z" finished-at="2018-10-18T11:46:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_fail_voicemail3_login()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D3_fail_voicemail3_login" duration-ms="40927" started-at="2018-10-18T11:46:16Z" finished-at="2018-10-18T11:46:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时46分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时46分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时46分50秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时46分53秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【11时46分55秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时46分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_fail_voicemail3_login -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T11:46:57Z" finished-at="2018-10-18T11:46:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_fail_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D4_fail_ivr" duration-ms="49534" started-at="2018-10-18T11:46:57Z" finished-at="2018-10-18T11:47:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时46分57秒 执行操作】 2000拨打995503304通过sps外线呼入到队列6705，预期到Failover：IVR1，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时47分17秒 执行操作】Answer Call  17  1000]]>
            </line>
            <line>
              <![CDATA[  【11时47分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时47分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时47分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时47分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时47分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时47分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时47分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时47分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_fail_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T11:47:47Z" finished-at="2018-10-18T11:47:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_fail_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D5_fail_ringgroup" duration-ms="45353" started-at="2018-10-18T11:47:47Z" finished-at="2018-10-18T11:48:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时47分47秒 执行操作】 2000拨打995503305通过sps外线呼入到队列6706，预期到Failover：RingGroup，所有成员1000、1100、1105同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时48分01秒 执行操作】Answer Call  19  1100]]>
            </line>
            <line>
              <![CDATA[  【11时48分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时48分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时48分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时48分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时48分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时48分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时48分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时48分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_fail_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T11:48:32Z" finished-at="2018-10-18T11:48:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_fail_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D6_fail_queue" duration-ms="68941" started-at="2018-10-18T11:48:32Z" finished-at="2018-10-18T11:49:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时48分32秒 执行操作】 2000拨打995503306通过sps外线呼入到队列6707，预期到Failover：Queue6701，所有成员都同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【11时48分47秒 执行操作】Answer Call  26  1103]]>
            </line>
            <line>
              <![CDATA[  【11时48分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时48分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时48分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时49分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时49分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时49分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时49分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时49分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时49分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_fail_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T11:49:41Z" finished-at="2018-10-18T11:49:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_fail_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D7_fail_conference" duration-ms="52033" started-at="2018-10-18T11:49:41Z" finished-at="2018-10-18T11:50:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时49分41秒 执行操作】 2000拨打995503307通过sps外线呼入到队列6708，预期Failover：Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会Talking]]>
            </line>
            <line>
              <![CDATA[  【11时50分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时50分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时50分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时50分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时50分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时50分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时50分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_fail_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T11:50:33Z" finished-at="2018-10-18T11:50:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_fail_DialbyName()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="D8_fail_DialbyName" duration-ms="54883" started-at="2018-10-18T11:50:33Z" finished-at="2018-10-18T11:51:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时50分33秒 执行操作】 2000拨打995503308通过sps外线呼入到队列6709，预期Failover：DialByName]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【11时51分02秒 执行操作】Answer Call  30  1103]]>
            </line>
            <line>
              <![CDATA[  【11时51分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时51分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分28秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D8_fail_DialbyName -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T11:51:28Z" finished-at="2018-10-18T11:51:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_key0_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E1_key0_hangup" duration-ms="30449" started-at="2018-10-18T11:51:28Z" finished-at="2018-10-18T11:51:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时51分28秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701，按0，预期被挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会HangUp]]>
            </line>
            <line>
              <![CDATA[  【11时51分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时51分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时51分58秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_key0_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-10-18T11:51:59Z" finished-at="2018-10-18T11:51:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_key1_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E2_key1_extension" duration-ms="44035" started-at="2018-10-18T11:51:59Z" finished-at="2018-10-18T11:52:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时51分59秒 执行操作】 2000拨打995503302通过sps外线呼入到队列6703，按1，预期分机1000响铃，接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时52分11秒 执行操作】Answer Call  6  1000]]>
            </line>
            <line>
              <![CDATA[  【11时52分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时52分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时52分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时52分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时52分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时52分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时52分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时52分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时52分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_key1_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T11:52:43Z" finished-at="2018-10-18T11:52:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E3_key2_voicemail1" duration-ms="59521" started-at="2018-10-18T11:52:43Z" finished-at="2018-10-18T11:53:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时52分43秒 执行操作】 2001拨打995503303通过sps外线呼入到队列6704，按2，预期到分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[  【11时53分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时53分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时53分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时53分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时53分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时53分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时53分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T11:53:42Z" finished-at="2018-10-18T11:53:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail2_check()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E3_key2_voicemail2_check" duration-ms="52419" started-at="2018-10-18T11:53:42Z" finished-at="2018-10-18T11:54:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时53分42秒 执行操作】 分机1105登录，查看存在2001留下的语音留言]]>
            </line>
            <line>
              <![CDATA[  【11时54分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分06秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时54分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分18秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【11时54分19秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【11时54分20秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【11时54分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分31秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时54分32秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【11时54分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【11时54分35秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 语音留言检查:预期第2行的CallerID为2001(2001)]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail2_check -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T11:54:35Z" finished-at="2018-10-18T11:54:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_key2_voicemail3_login()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E3_key2_voicemail3_login" duration-ms="30888" started-at="2018-10-18T11:54:35Z" finished-at="2018-10-18T11:55:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时54分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时54分58秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时55分02秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【11时55分03秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【11时55分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_key2_voicemail3_login -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T11:55:06Z" finished-at="2018-10-18T11:55:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_key3_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E4_key3_ivr" duration-ms="45845" started-at="2018-10-18T11:55:06Z" finished-at="2018-10-18T11:55:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时55分06秒 执行操作】 2000拨打995503304通过sps外线呼入到队列6705，按3，预期到IVR1，按1到分机1000，接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时55分22秒 执行操作】Answer Call  9  1000]]>
            </line>
            <line>
              <![CDATA[  【11时55分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时55分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时55分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时55分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时55分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时55分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时55分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时55分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E4_key3_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T11:55:52Z" finished-at="2018-10-18T11:55:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_key4_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E5_key4_ringgroup" duration-ms="45423" started-at="2018-10-18T11:55:52Z" finished-at="2018-10-18T11:56:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时55分52秒 执行操作】 2000拨打995503305通过sps外线呼入到队列6706，按4，预期到RingGroup1，分机1000、1100、1105同时响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[  【11时56分03秒 执行操作】Answer Call  12  1100]]>
            </line>
            <line>
              <![CDATA[  【11时56分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时56分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时56分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时56分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时56分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时56分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时56分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时56分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E5_key4_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T11:56:37Z" finished-at="2018-10-18T11:56:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_key5_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E6_key5_queue" duration-ms="52327" started-at="2018-10-18T11:56:37Z" finished-at="2018-10-18T11:57:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时56分37秒 执行操作】 2000拨打995503306通过sps外线呼入到队列6707，按5，预期到Queue：a，所有成员同时响铃，分机1101接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【11时56分51秒 执行操作】Answer Call  17  1101]]>
            </line>
            <line>
              <![CDATA[  【11时56分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【11时57分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时57分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时57分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时57分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时57分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时57分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时57分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_key5_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T11:57:29Z" finished-at="2018-10-18T11:57:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E7_key6_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E7_key6_conference" duration-ms="50459" started-at="2018-10-18T11:57:29Z" finished-at="2018-10-18T11:58:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时57分29秒 执行操作】 2000拨打995503307通过sps外线呼入到队列6708，按6，预期到Conference1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Talking]]>
            </line>
            <line>
              <![CDATA[  【11时58分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时58分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时58分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时58分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时58分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时58分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时58分19秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_key6_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T11:58:20Z" finished-at="2018-10-18T11:58:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E8_key7_DialbyName()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="E8_key7_DialbyName" duration-ms="53518" started-at="2018-10-18T11:58:20Z" finished-at="2018-10-18T11:59:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时58分20秒 执行操作】 2000拨打995503308通过sps外线呼入到队列6709，按7，预期到DialbyName，按957，按1确认，分机1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【11时58分47秒 执行操作】Answer Call  22  1103]]>
            </line>
            <line>
              <![CDATA[  【11时59分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【11时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【11时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【11时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【11时59分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【11时59分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E8_key7_DialbyName -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-10-18T11:59:13Z" finished-at="2018-10-18T11:59:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_dynamic_login6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F1_dynamic_login6701" duration-ms="13195" started-at="2018-10-18T11:59:13Z" finished-at="2018-10-18T11:59:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时59分13秒 执行操作】 1102拨打6701*加入队列6701，密码：空]]>
            </line>
            <line>
              <![CDATA[  【11时59分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_dynamic_login6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T11:59:27Z" finished-at="2018-10-18T11:59:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_dynamic_call6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F2_dynamic_call6701" duration-ms="59841" started-at="2018-10-18T11:59:27Z" finished-at="2018-10-18T12:00:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【11时59分27秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期所有坐席同时响铃，1102接听]]>
            </line>
            <line>
              <![CDATA[  【11时59分38秒 执行操作】F2_dynamic_call6701 分机通话状态 预期1000 1100 1101 1102 1103 1105会同时Ring 222222]]>
            </line>
            <line>
              <![CDATA[  【11时59分38秒 执行操作】Answer Call  25  1102]]>
            </line>
            <line>
              <![CDATA[  【11时59分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时00分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时00分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时00分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时00分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时00分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时00分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_dynamic_call6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:00:27Z" finished-at="2018-10-18T12:00:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_dynamic_logoff6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F3_dynamic_logoff6701" duration-ms="13132" started-at="2018-10-18T12:00:27Z" finished-at="2018-10-18T12:00:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时00分27秒 执行操作】 1102拨打6701**退出队列6701]]>
            </line>
            <line>
              <![CDATA[  【12时00分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102退出队列6701]]>
            </line>
          </reporter-output>
        </test-method> <!-- F3_dynamic_logoff6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:00:40Z" finished-at="2018-10-18T12:00:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_dynamic_call6701()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F4_dynamic_call6701" duration-ms="52385" started-at="2018-10-18T12:00:40Z" finished-at="2018-10-18T12:01:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时00分40秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701，预期1102不会响铃，其它坐席同时响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[  【12时00分46秒 执行操作】F4_dynamic_call6701 分机通话状态 预期1000 1100 1101 1103 1105会同时Ring 22222]]>
            </line>
            <line>
              <![CDATA[  【12时00分46秒 执行操作】F4_dynamic_call6701 分机通话状态 预期1102不会同时Ring 4]]>
            </line>
            <line>
              <![CDATA[  【12时00分46秒 执行操作】Answer Call  1  1103]]>
            </line>
            <line>
              <![CDATA[  【12时00分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时00分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时01分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时01分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时01分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时01分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时01分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时01分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时01分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F4_dynamic_call6701 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T12:01:32Z" finished-at="2018-10-18T12:01:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_dynamic_login6710()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F5_dynamic_login6710" duration-ms="15930" started-at="2018-10-18T12:01:32Z" finished-at="2018-10-18T12:01:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时01分32秒 执行操作】 1103拨打6710*加入队列6710，密码123]]>
            </line>
            <line>
              <![CDATA[  【12时01分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时01分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时01分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1103输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- F5_dynamic_login6710 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T12:01:48Z" finished-at="2018-10-18T12:01:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_dynamic_login6711()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F6_dynamic_login6711" duration-ms="15889" started-at="2018-10-18T12:01:48Z" finished-at="2018-10-18T12:02:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时01分48秒 执行操作】 1102拨打6711*加入队列6711，密码123]]>
            </line>
            <line>
              <![CDATA[  【12时01分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时01分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时01分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1102输入密码123]]>
            </line>
          </reporter-output>
        </test-method> <!-- F6_dynamic_login6711 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T12:02:04Z" finished-at="2018-10-18T12:02:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F7_dynamic_login6712()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F7_dynamic_login6712" duration-ms="19420" started-at="2018-10-18T12:02:04Z" finished-at="2018-10-18T12:02:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时02分04秒 执行操作】 1101拨打6712*加入队列6712，密码1234567890]]>
            </line>
            <line>
              <![CDATA[  【12时02分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时02分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时02分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1101输入密码1234567890]]>
            </line>
          </reporter-output>
        </test-method> <!-- F7_dynamic_login6712 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T12:02:23Z" finished-at="2018-10-18T12:02:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F8_dynamic_login6713()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F8_dynamic_login6713" duration-ms="21016" started-at="2018-10-18T12:02:23Z" finished-at="2018-10-18T12:02:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时02分28秒 执行操作】 1101拨打6713*加入队列6713，密码1--1101已经是该队列的静态坐席]]>
            </line>
            <line>
              <![CDATA[  【12时02分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时02分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时02分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1101输入密码1]]>
            </line>
          </reporter-output>
        </test-method> <!-- F8_dynamic_login6713 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:02:44Z" finished-at="2018-10-18T12:02:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F9_dynamic_login6714()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="F9_dynamic_login6714" duration-ms="9077" started-at="2018-10-18T12:02:44Z" finished-at="2018-10-18T12:02:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时02分44秒 执行操作】 1101拨打6714*加入队列6714，密码0]]>
            </line>
            <line>
              <![CDATA[  【12时02分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1101输入密码0]]>
            </line>
          </reporter-output>
        </test-method> <!-- F9_dynamic_login6714 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T12:02:53Z" finished-at="2018-10-18T12:02:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Fa_dynamic_login6714()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="Fa_dynamic_login6714" duration-ms="19284" started-at="2018-10-18T12:02:54Z" finished-at="2018-10-18T12:03:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时02分54秒 执行操作】 1103拨打6714*加入队列6714，密码0]]>
            </line>
            <line>
              <![CDATA[  【12时02分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时02分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时03分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时03分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时03分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 动态坐席1103输入密码0]]>
            </line>
          </reporter-output>
        </test-method> <!-- Fa_dynamic_login6714 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:03:13Z" finished-at="2018-10-18T12:03:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_JoinAnnouncement()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G2_JoinAnnouncement" duration-ms="14181" started-at="2018-10-18T12:03:13Z" finished-at="2018-10-18T12:03:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时03分16秒 执行操作】 2000拨打995503313通过sps外线呼入，预期呼入到队列6714,2000会听到进入队列的提示音Join，无坐席应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000呼入时播放提示音“Join”]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_JoinAnnouncement -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T12:03:27Z" finished-at="2018-10-18T12:03:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_MusicOnHold1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G3_MusicOnHold1" duration-ms="6239" started-at="2018-10-18T12:03:27Z" finished-at="2018-10-18T12:03:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时03分30秒 执行操作】 2000拨打999999通过sps外线呼入，预期呼入到队列6701，预期播放Music on Hold：Autotest]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000呼入时播放Music on hold ：Autotest]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_MusicOnHold1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T12:03:33Z" finished-at="2018-10-18T12:03:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_MusicOnHold2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G3_MusicOnHold2" duration-ms="5443" started-at="2018-10-18T12:03:33Z" finished-at="2018-10-18T12:03:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时03分36秒 执行操作】 1103拨打6710呼入队列6710，预期播放Music on Hold：default]]>
            </line>
            <line>
              <![CDATA[    Pass: 1103呼入6710时播放Music on hold ：default]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_MusicOnHold2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T12:03:39Z" finished-at="2018-10-18T12:03:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_AgentID()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G4_AgentID" duration-ms="1" started-at="2018-10-18T12:03:39Z" finished-at="2018-10-18T12:03:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时03分39秒 执行操作】 坐席播报工号提示音----AMI未打印相关信息------请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_AgentID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:03:39Z" finished-at="2018-10-18T12:03:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G5_Satisfaction()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G5_Satisfaction" duration-ms="130055" started-at="2018-10-18T12:03:39Z" finished-at="2018-10-18T12:05:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:337)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.G5_Satisfaction(Queue.java:904)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时03分42秒 执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，1100先挂断，预期2000会听到满意度调查提示音：satisfaction]]>
            </line>
            <line>
              <![CDATA[  【12时03分47秒 执行操作】G5_Satisfaction 预期1000 1100 1101 1105 1103会同时Ring 22222]]>
            </line>
            <line>
              <![CDATA[  【12时03分47秒 执行操作】Answer Call  24  1100]]>
            </line>
            <line>
              <![CDATA[  【12时03分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】.jpg" target="_blank">Error: 坐席挂断时播放满意度调查提示音satisfaction 【预期：true 实际：false】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_Satisfaction -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_CallerPosition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G6_CallerPosition" duration-ms="1" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:05:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时05分49秒 执行操作】 用户公告----AMI未打印相关信息---请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_CallerPosition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_PeriodicAnnouncements()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G7_PeriodicAnnouncements" duration-ms="1" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:05:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时05分49秒 执行操作】 系统公告----AMI未打印相关信息---请手动测试 ]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_PeriodicAnnouncements -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:05:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G8_AgentTimeout_Retry()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G8_AgentTimeout_Retry" duration-ms="11618" started-at="2018-10-18T12:05:49Z" finished-at="2018-10-18T12:06:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1101会同时Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1101会同时Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.G8_AgentTimeout_Retry(Queue.java:928)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时05分49秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701，坐席响铃15s后挂断，20s左右会再次响铃,坐席循环第3次响铃时，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101会同时Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101会同时Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G8_AgentTimeout_Retry -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="8" started-at="2018-10-18T12:06:01Z" finished-at="2018-10-18T12:06:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G9_warp_time0()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G9_warp_time0" duration-ms="5851" started-at="2018-10-18T12:06:01Z" finished-at="2018-10-18T12:06:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1100会同时Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1100会同时Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.G9_warp_time0(Queue.java:968)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时06分01秒 执行操作】 2000拨打99999呼入到队列6701，坐席1100应答后，挂断；再次呼入队列，预期1100会马上响铃（warp time：0）]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1100会同时Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1100会同时Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_warp_time0 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:06:06Z" finished-at="2018-10-18T12:06:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G9_warp_time20()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="G9_warp_time20" duration-ms="26000" started-at="2018-10-18T12:06:06Z" finished-at="2018-10-18T12:06:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1101会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1101会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.G9_warp_time20(Queue.java:990)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时06分06秒 执行操作】 2000拨打995503311呼入到队列6712，动态坐席1101应答后，挂断；再次呼入队列，预期1101不会马上响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_warp_time20 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:06:32Z" finished-at="2018-10-18T12:06:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H1_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="H1_leastRecent" duration-ms="17530" started-at="2018-10-18T12:06:32Z" finished-at="2018-10-18T12:06:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1103结束Ring，约响铃10s 【预期：4 实际：2】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1103结束Ring，约响铃10s 【预期：4 实际：2】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.H1_leastRecent(Queue.java:1011)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时06分32秒 执行操作】 2000拨打995503309呼入到队列6710，预期1103第1个响铃，无应答，1103会再次响铃，应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会Ring]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1103结束Ring，约响铃10s 【预期：4 实际：2】.jpg" target="_blank">Error: 预期1103结束Ring，约响铃10s 【预期：4 实际：2】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:06:50Z" finished-at="2018-10-18T12:06:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H2_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="H2_leastRecent" duration-ms="37029" started-at="2018-10-18T12:06:50Z" finished-at="2018-10-18T12:07:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.H2_leastRecent(Queue.java:1035)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时06分50秒 执行操作】 2000再次拨打995503309呼入到队列6710，预期1105第1个响铃，接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[  【12时06分51秒 执行操作】Answer Call  25  1105]]>
            </line>
            <line>
              <![CDATA[  【12时06分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时07分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时07分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时07分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6710(1105)] 实际：1100 [6701(1100)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="2081" started-at="2018-10-18T12:07:27Z" finished-at="2018-10-18T12:07:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时07分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H3_leastRecent()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="H3_leastRecent" duration-ms="23817" started-at="2018-10-18T12:07:29Z" finished-at="2018-10-18T12:07:53Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1100会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1100会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.H3_leastRecent(Queue.java:1043)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时07分29秒 执行操作】 2000再次拨打995503309呼入到队列6710，预期1100第1个响铃，接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1100会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1100会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_leastRecent -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:07:53Z" finished-at="2018-10-18T12:07:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I1_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="I1_fewestcalls" duration-ms="21608" started-at="2018-10-18T12:07:53Z" finished-at="2018-10-18T12:08:15Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1102会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1102会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.I1_fewestcalls(Queue.java:1062)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时07分53秒 执行操作】 2000拨打995503310呼入到队列6711，预期1102响铃，无应答，1102会再次响铃，应答]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1102会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T12:08:15Z" finished-at="2018-10-18T12:08:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I2_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="I2_fewestcalls" duration-ms="21647" started-at="2018-10-18T12:08:15Z" finished-at="2018-10-18T12:08:36Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1105会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1105会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.I2_fewestcalls(Queue.java:1075)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时08分15秒 执行操作】 2000拨打995503310再次呼入到队列6711，预期1105响铃，接听保持通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1105会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1105会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:08:36Z" finished-at="2018-10-18T12:08:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I3_fewestcalls()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="I3_fewestcalls" duration-ms="21553" started-at="2018-10-18T12:08:36Z" finished-at="2018-10-18T12:08:58Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000会Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000会Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.I3_fewestcalls(Queue.java:1090)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时08分36秒 执行操作】 2000拨打995503310再次呼入队列6711，预期1000响铃，接听保持通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000会Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000会Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_fewestcalls -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:08:58Z" finished-at="2018-10-18T12:08:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_random()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="J1_random" duration-ms="1" started-at="2018-10-18T12:08:58Z" finished-at="2018-10-18T12:08:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时08分58秒 执行操作】 响铃策略：random没有规律，无法自动化测试--请手动验证]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_random -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="9" started-at="2018-10-18T12:08:58Z" finished-at="2018-10-18T12:08:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K1_rrmemory()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="K1_rrmemory" duration-ms="22007" started-at="2018-10-18T12:08:58Z" finished-at="2018-10-18T12:09:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000会第1个Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000会第1个Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.K1_rrmemory(Queue.java:1112)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时08分58秒 执行操作】 2000拨打995503312呼入到队列6713，预期1000第1个响铃,轮到1101响铃时接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000会第1个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000会第1个Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_rrmemory -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T12:09:20Z" finished-at="2018-10-18T12:09:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="K2_rrmemory()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="K2_rrmemory" duration-ms="29112" started-at="2018-10-18T12:09:20Z" finished-at="2018-10-18T12:09:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.K2_rrmemory(Queue.java:1131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时09分20秒 执行操作】 2000拨打995503312呼入到队列6713，预期1105第一个响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会Ring]]>
            </line>
            <line>
              <![CDATA[  【12时09分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时09分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时09分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6713(1105)] 实际：6713】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_rrmemory -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="2076" started-at="2018-10-18T12:09:49Z" finished-at="2018-10-18T12:09:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时09分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L1_linear()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="L1_linear" duration-ms="28747" started-at="2018-10-18T12:09:51Z" finished-at="2018-10-18T12:10:20Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1000第1个Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1000第1个Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.L1_linear(Queue.java:1139)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时09分51秒 执行操作】 2000拨打995503313通过sps外线呼入到队列6714，预期按线性响铃，1100第2次响铃时接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1000第1个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1000第1个Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_linear -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T12:10:20Z" finished-at="2018-10-18T12:10:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="L2_linear()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="L2_linear" duration-ms="95628" started-at="2018-10-18T12:10:20Z" finished-at="2018-10-18T12:11:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1101第4个Ring 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1101第4个Ring 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.L2_linear(Queue.java:1168)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时10分20秒 执行操作】 2000拨打995503313通过sps外线再次呼入到队列6714，预期按线性响铃，1103接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000第1个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100第2个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105第3个Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105结束响铃，约响铃10s]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1101第4个Ring 【预期：2 实际：4】.jpg" target="_blank">Error: 预期1101第4个Ring 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_linear -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:11:55Z" finished-at="2018-10-18T12:11:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="M1_ringall()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="M1_ringall" duration-ms="85552" started-at="2018-10-18T12:11:55Z" finished-at="2018-10-18T12:13:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue.M1_ringall(Queue.java:1232)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时11分55秒 执行操作】 2000拨打999999通过sps外线呼入到队列6701,1100接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【12时12分01秒 执行操作】Answer Call  21  1100]]>
            </line>
            <line>
              <![CDATA[  【12时12分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100在Talking]]>
            </line>
            <line>
              <![CDATA[  【12时12分06秒 执行操作】 3001拨打3000通过sip外线呼入到队列6701,1103接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【12时12分21秒 执行操作】Answer Call  29  1103]]>
            </line>
            <line>
              <![CDATA[  【12时12分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时12分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时12分28秒 执行操作】 1102拨打6701呼入到队列6701,1105接听并保持通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101会同时Ring]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会同时Ring]]>
            </line>
            <line>
              <![CDATA[  【12时12分36秒 执行操作】Answer Call  2  1105]]>
            </line>
            <line>
              <![CDATA[  【12时12分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时12分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时12分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时13分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时13分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6701(1100)] 实际：1000 [6714(1000)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_ringall -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="2086" started-at="2018-10-18T12:13:21Z" finished-at="2018-10-18T12:13:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时13分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N0_backup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N0_backup" duration-ms="42377" started-at="2018-10-18T12:13:23Z" finished-at="2018-10-18T12:14:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时13分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时13分31秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时13分32秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时13分33秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时13分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时13分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【12时14分03秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时14分05秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- N0_backup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T12:14:05Z" finished-at="2018-10-18T12:14:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N1_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N1_leave_join_empty" duration-ms="35538" started-at="2018-10-18T12:14:05Z" finished-at="2018-10-18T12:14:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时14分05秒 执行操作】 编辑队列6702，MaxWaitTime：1800，LeaveWhenEmpty：启用，JoinEmpty：启用]]>
            </line>
            <line>
              <![CDATA[  【12时14分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时14分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时14分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时14分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时14分29秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时14分30秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
          </reporter-output>
        </test-method> <!-- N1_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T12:14:41Z" finished-at="2018-10-18T12:14:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N2_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N2_leave_join_empty" duration-ms="1081" started-at="2018-10-18T12:14:41Z" finished-at="2018-10-18T12:14:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时14分41秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N2_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T12:14:42Z" finished-at="2018-10-18T12:14:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N3_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N3_leave_join_empty" duration-ms="28936" started-at="2018-10-18T12:14:42Z" finished-at="2018-10-18T12:15:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时14分42秒 执行操作】 编辑队列6702，LeaveWhenEmpty：启用，JoinEmpty：不启用]]>
            </line>
            <line>
              <![CDATA[  【12时14分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时14分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时14分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时14分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时14分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时14分59秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时15分00秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('false')]]>
            </line>
          </reporter-output>
        </test-method> <!-- N3_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T12:15:11Z" finished-at="2018-10-18T12:15:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N4_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N4_leave_join_empty" duration-ms="1091" started-at="2018-10-18T12:15:11Z" finished-at="2018-10-18T12:15:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时15分11秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N4_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T12:15:12Z" finished-at="2018-10-18T12:15:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N5_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N5_leave_join_empty" duration-ms="28909" started-at="2018-10-18T12:15:12Z" finished-at="2018-10-18T12:15:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时15分12秒 执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：不启用]]>
            </line>
            <line>
              <![CDATA[  【12时15分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时15分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时15分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时15分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时15分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时15分29秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时15分30秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('false')]]>
            </line>
          </reporter-output>
        </test-method> <!-- N5_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-10-18T12:15:41Z" finished-at="2018-10-18T12:15:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N6_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N6_leave_join_empty" duration-ms="5750" started-at="2018-10-18T12:15:41Z" finished-at="2018-10-18T12:15:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时15分41秒 执行操作】 1102拨打6702，预期：1102被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N6_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T12:15:47Z" finished-at="2018-10-18T12:15:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N7_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N7_leave_join_empty" duration-ms="28890" started-at="2018-10-18T12:15:47Z" finished-at="2018-10-18T12:16:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时15分47秒 执行操作】 编辑队列6702，LeaveWhenEmpty：不启用，JoinEmpty：启用]]>
            </line>
            <line>
              <![CDATA[  【12时15分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时15分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时15分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时15分57秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时16分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时16分04秒 执行操作】Extjs： Ext.getCmp('st-queue-leavewhenempty').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时16分05秒 执行操作】Extjs： Ext.getCmp('st-queue-joinempty').setValue('true')]]>
            </line>
          </reporter-output>
        </test-method> <!-- N7_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="53" started-at="2018-10-18T12:16:16Z" finished-at="2018-10-18T12:16:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N8_leave_join_empty()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="N8_leave_join_empty" duration-ms="23081" started-at="2018-10-18T12:16:16Z" finished-at="2018-10-18T12:16:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时16分16秒 执行操作】 1102拨打6702，预期：1102不会被直接挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1102不会被直接挂断]]>
            </line>
          </reporter-output>
        </test-method> <!-- N8_leave_join_empty -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T12:16:39Z" finished-at="2018-10-18T12:16:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O1_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="O1_delete" duration-ms="70271" started-at="2018-10-18T12:16:39Z" finished-at="2018-10-18T12:17:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时16分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【12时16分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(50)]]>
            </line>
            <line>
              <![CDATA[  【12时16分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时16分45秒 执行操作】 表格删除：队列6702-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时16分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时16分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时16分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时16分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时16分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【12时17分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时17分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：队列6702-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分04秒 执行操作】 表格删除：队列6702-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【12时17分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时17分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：queue6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分17秒 执行操作】 删除：Досвидания-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时17分19秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时17分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[4].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[5].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[6].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时17分31秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时17分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时17分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Досвидания-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分36秒 执行操作】 删除：Досвидания-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时17分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时17分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Досвидания-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- O1_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="58" started-at="2018-10-18T12:17:49Z" finished-at="2018-10-18T12:17:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="P1_recovery" duration-ms="74200" started-at="2018-10-18T12:17:49Z" finished-at="2018-10-18T12:19:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时17分49秒 执行操作】 恢复初始化环境]]>
            </line>
            <line>
              <![CDATA[  【12时17分49秒 执行操作】 删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【12时17分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【12时17分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【12时17分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时17分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时18分01秒 执行操作】deletes  删除所有Queue: 12]]>
            </line>
            <line>
              <![CDATA[  【12时18分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时18分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('queue').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【12时18分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分45秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时18分45秒 执行操作】deleting  删除所有Queue: 0]]>
            </line>
            <line>
              <![CDATA[  【12时18分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时18分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Queue]]>
            </line>
            <line>
              <![CDATA[  【12时18分47秒 执行操作】 添加Queue1：6700，选择分机1000、1100、1105，其它默认 ]]>
            </line>
            <line>
              <![CDATA[  【12时18分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时18分51秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时18分52秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时18分53秒 执行操作】Extjs： return  Ext.getCmp('st-queue-agents').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时18分54秒 执行操作】Extjs： Ext.getCmp('st-queue-agents').setValue('49,50,55')]]>
            </line>
            <line>
              <![CDATA[  【12时18分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('queue').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时18分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时19分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('queue').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时19分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('queue').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- P1_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T12:19:04Z" finished-at="2018-10-18T12:19:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="P2_recovery" duration-ms="88633" started-at="2018-10-18T12:19:04Z" finished-at="2018-10-18T12:20:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时19分06秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【12时19分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【12时19分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【12时19分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时19分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时19分17秒 执行操作】deletes  删除所有呼入路由: 14]]>
            </line>
            <line>
              <![CDATA[  【12时19分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时19分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【12时19分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时19分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时20分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时20分02秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【12时20分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时20分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【12时20分04秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【12时20分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时20分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时20分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【12时20分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【12时20分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【12时20分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【12时20分13秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【12时20分14秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时20分15秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时20分16秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时20分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- P2_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T12:20:32Z" finished-at="2018-10-18T12:20:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue@7dc304]" name="AfterClass" is-config="true" duration-ms="17922" started-at="2018-10-18T12:20:32Z" finished-at="2018-10-18T12:20:50Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 12时20分32秒执行完毕：=======  Queue  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Queue -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="BeforeClass" is-config="true" duration-ms="34164" started-at="2018-10-18T12:31:10Z" finished-at="2018-10-18T12:31:44Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 12时31分10秒开始执行：=======  IVR  =======]]>
            </line>
            <line>
              <![CDATA[  【12时31分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时31分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时31分36秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【12时31分40秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【12时31分41秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【12时31分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_Init1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A0_Init1" duration-ms="0" started-at="2018-10-18T12:31:44Z" finished-at="2018-10-18T12:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A0_Init1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T12:31:44Z" finished-at="2018-10-18T12:31:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A0_Init2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A0_Init2" duration-ms="49996" started-at="2018-10-18T12:31:44Z" finished-at="2018-10-18T12:32:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时31分44秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【12时31分44秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【12时31分44秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【12时31分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时31分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时32分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_Init2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T12:32:34Z" finished-at="2018-10-18T12:32:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A1_Init" duration-ms="33266" started-at="2018-10-18T12:32:34Z" finished-at="2018-10-18T12:33:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时32分40秒 执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【12时32分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【12时32分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【12时32分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时32分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时32分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时32分51秒 执行操作】deletes  删除所有IVR: 1]]>
            </line>
            <line>
              <![CDATA[  【12时32分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时32分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【12时32分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时33分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时33分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时33分05秒 执行操作】deleting  删除所有IVR: 0]]>
            </line>
            <line>
              <![CDATA[  【12时33分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时33分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T12:33:07Z" finished-at="2018-10-18T12:33:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="14523" started-at="2018-10-18T12:33:07Z" data-provider="add" finished-at="2018-10-18T12:33:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=5, RepeatCount=3, DialOutbound=false, CheckVoicemail=false, Key1=D, Digit=5, DialExtension=false, Key0=h, Number=6501, Des0=, Name=a, Des1=}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时33分07秒 执行操作】添加IVR：a：6501]]>
            </line>
            <line>
              <![CDATA[  【12时33分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时33分11秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【12时33分13秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时33分14秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时33分15秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时33分17秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【12时33分18秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('D')]]>
            </line>
            <line>
              <![CDATA[  【12时33分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T12:33:22Z" finished-at="2018-10-18T12:33:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="30465" started-at="2018-10-18T12:33:22Z" data-provider="add" finished-at="2018-10-18T12:33:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=10, RepeatCount=4, DialOutbound=true, CheckVoicemail=true, Key1=C, Digit=10, DialExtension=true, Key0=e, Number=6502, Des0=1000, Name=Yeastar202Yeastar202, Des1=Callback1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时33分22秒 执行操作】添加IVR：Yeastar202Yeastar202：6502]]>
            </line>
            <line>
              <![CDATA[  【12时33分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时33分26秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【12时33分27秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时33分28秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时33分29秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时33分30秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【12时33分31秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【12时33分32秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【12时33分33秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
            </line>
            <line>
              <![CDATA[  【12时33分35秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时33分37秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时33分38秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【12时33分39秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时33分40秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时33分44秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('name', "Callback1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时33分45秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【12时33分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T12:33:52Z" finished-at="2018-10-18T12:33:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="25412" started-at="2018-10-18T12:33:53Z" data-provider="add" finished-at="2018-10-18T12:34:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=15, RepeatCount=1, DialOutbound=false, CheckVoicemail=false, Key1=d, Digit=15, DialExtension=true, Key0=v, Number=6503, Des0=1105, Name=12345abcdefghijklmnopqrstuvwxyz, Des1=DISA1}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时33分53秒 执行操作】添加IVR：12345abcdefghijklmnopqrstuvwxyz：6503]]>
            </line>
            <line>
              <![CDATA[  【12时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时33分57秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('1')]]>
            </line>
            <line>
              <![CDATA[  【12时33分58秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时33分59秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时34分00秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时34分03秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【12时34分04秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('d')]]>
            </line>
            <line>
              <![CDATA[  【12时34分05秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时34分06秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('55')]]>
            </line>
            <line>
              <![CDATA[  【12时34分10秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时34分11秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【12时34分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T12:34:18Z" finished-at="2018-10-18T12:34:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="30139" started-at="2018-10-18T12:34:18Z" data-provider="add" finished-at="2018-10-18T12:34:48Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=3, RepeatCount=2, DialOutbound=true, CheckVoicemail=true, Key1=e, Digit=3, DialExtension=false, Key0=i, Number=6504, Des0=a, Name=*.*, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时34分18秒 执行操作】添加IVR：*.*：6504]]>
            </line>
            <line>
              <![CDATA[  【12时34分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时34分22秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('2')]]>
            </line>
            <line>
              <![CDATA[  【12时34分23秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时34分24秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时34分25秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时34分26秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【12时34分27秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【12时34分28秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【12时34分29秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
            </line>
            <line>
              <![CDATA[  【12时34分30秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时34分33秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【12时34分34秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时34分35秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时34分36秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('15')]]>
            </line>
            <line>
              <![CDATA[  【12时34分40秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时34分41秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时34分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-10-18T12:34:48Z" finished-at="2018-10-18T12:34:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="25143" started-at="2018-10-18T12:34:48Z" data-provider="add" finished-at="2018-10-18T12:35:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=5, RepeatCount=5, DialOutbound=false, CheckVoicemail=true, Key1=e, Digit=5, DialExtension=true, Key0=r, Number=6505, Des0=RingGroup1, Name=IVR6505, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时34分48秒 执行操作】添加IVR：IVR6505：6505]]>
            </line>
            <line>
              <![CDATA[  【12时34分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时34分52秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【12时34分53秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时34分54秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时34分55秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时34分58秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【12时34分59秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时35分00秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时35分01秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【12时35分05秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时35分06秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时35分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:35:13Z" finished-at="2018-10-18T12:35:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="29983" started-at="2018-10-18T12:35:13Z" data-provider="add" finished-at="2018-10-18T12:35:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=10, RepeatCount=3, DialOutbound=true, CheckVoicemail=false, Key1=e, Digit=10, DialExtension=false, Key0=q, Number=6506, Des0=Queue1, Name=さようなら, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时35分13秒 执行操作】添加IVR：さようなら：6506]]>
            </line>
            <line>
              <![CDATA[  【12时35分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时35分17秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【12时35分19秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时35分20秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时35分21秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时35分22秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分23秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分24秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分25秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
            </line>
            <line>
              <![CDATA[  【12时35分26秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时35分28秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【12时35分29秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时35分30秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时35分31秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【12时35分35秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时35分36秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时35分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T12:35:43Z" finished-at="2018-10-18T12:35:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="30036" started-at="2018-10-18T12:35:43Z" data-provider="add" finished-at="2018-10-18T12:36:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=15, RepeatCount=3, DialOutbound=true, CheckVoicemail=false, Key1=e, Digit=15, DialExtension=true, Key0=c, Number=6507, Des0=Conference1, Name=Досвидания, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时35分43秒 执行操作】添加IVR：Досвидания：6507]]>
            </line>
            <line>
              <![CDATA[  【12时35分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时35分47秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【12时35分49秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时35分50秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时35分51秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时35分52秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分53秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分54秒 执行操作】Extjs： return Ext.getCmp('st-ivr-allowrouters').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【12时35分55秒 执行操作】Extjs： Ext.getCmp('st-ivr-allowrouters').setValue('13,12,11')]]>
            </line>
            <line>
              <![CDATA[  【12时35分56秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时35分58秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【12时35分59秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时36分00秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时36分01秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('9')]]>
            </line>
            <line>
              <![CDATA[  【12时36分05秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时36分06秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时36分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T12:36:13Z" finished-at="2018-10-18T12:36:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddIVR(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A2_AddIVR" duration-ms="25298" started-at="2018-10-18T12:36:13Z" data-provider="add" finished-at="2018-10-18T12:36:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Response=3, RepeatCount=3, DialOutbound=false, CheckVoicemail=true, Key1=e, Digit=3, DialExtension=false, Key0=p, Number=6508, Des0=prompt1, Name=viszontlátasra, Des1=1000}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【12时36分13秒 执行操作】添加IVR：viszontlátasra：6508]]>
            </line>
            <line>
              <![CDATA[  【12时36分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时36分17秒 执行操作】Extjs： Ext.getCmp('st-ivr-playtimes').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【12时36分19秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablenumber').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时36分20秒 执行操作】Extjs： Ext.getCmp('st-ivr-enableoutrouter').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时36分21秒 执行操作】Extjs： Ext.getCmp('st-ivr-enablecheckvoicemail').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时36分23秒 执行操作】Extjs： Ext.getCmp('key0action').setValue('p')]]>
            </line>
            <line>
              <![CDATA[  【12时36分24秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时36分25秒 执行操作】Extjs： return  Ext.getCmp('key0dest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时36分26秒 执行操作】Extjs： Ext.getCmp('key0dest').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【12时36分30秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时36分31秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【12时36分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddIVR -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T12:36:39Z" finished-at="2018-10-18T12:36:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_EditKeys()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="A3_EditKeys" duration-ms="84307" started-at="2018-10-18T12:36:39Z" finished-at="2018-10-18T12:38:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时36分39秒 执行操作】 编辑IVR：Yeastar202Yeastar202，Prompt：选择prompt1，按2到Voicemail:1105，按3到RingGroup1，按4到Queue1，按5到Conference1，按6到prompt1，按7到分机到IVR：*.*，按8到1106（fxs），按9到Dial by Name，按#到分机1100，按*到分机1101，Timeout到分机1102，Invalid到prompt1]]>
            </line>
            <line>
              <![CDATA[  【12时36分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时36分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时36分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时36分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时36分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时36分54秒 执行操作】Extjs： Ext.getCmp('st-ivr-prompt0').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【12时36分57秒 执行操作】Extjs： Ext.getCmp('key2action').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【12时36分58秒 执行操作】Extjs： Ext.getCmp('key3action').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【12时36分59秒 执行操作】Extjs： Ext.getCmp('key4action').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【12时37分00秒 执行操作】Extjs： Ext.getCmp('key5action').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【12时37分01秒 执行操作】Extjs： Ext.getCmp('key6action').setValue('p')]]>
            </line>
            <line>
              <![CDATA[  【12时37分02秒 执行操作】Extjs： Ext.getCmp('key7action').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【12时37分03秒 执行操作】Extjs： Ext.getCmp('key8action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时37分04秒 执行操作】Extjs： Ext.getCmp('key9action').setValue('D')]]>
            </line>
            <line>
              <![CDATA[  【12时37分05秒 执行操作】Extjs： Ext.getCmp('keysharpaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时37分06秒 执行操作】Extjs： Ext.getCmp('keystaraction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时37分07秒 执行操作】Extjs： Ext.getCmp('timeoutaction').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【12时37分08秒 执行操作】Extjs： Ext.getCmp('invalidaction').setValue('p')]]>
            </line>
            <line>
              <![CDATA[  【12时37分09秒 执行操作】Extjs： return  Ext.getCmp('key2dest').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分10秒 执行操作】Extjs： Ext.getCmp('key2dest').setValue('55')]]>
            </line>
            <line>
              <![CDATA[  【12时37分14秒 执行操作】Extjs： return  Ext.getCmp('key3dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分16秒 执行操作】Extjs： Ext.getCmp('key3dest').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【12时37分20秒 执行操作】Extjs： return  Ext.getCmp('key4dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分21秒 执行操作】Extjs： Ext.getCmp('key4dest').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【12时37分25秒 执行操作】Extjs： return  Ext.getCmp('key5dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分26秒 执行操作】Extjs： Ext.getCmp('key5dest').setValue('9')]]>
            </line>
            <line>
              <![CDATA[  【12时37分30秒 执行操作】Extjs： return  Ext.getCmp('key6dest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分31秒 执行操作】Extjs： Ext.getCmp('key6dest').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【12时37分35秒 执行操作】Extjs： return  Ext.getCmp('key7dest').getStore().findRecord('name', "*.*", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分36秒 执行操作】Extjs： Ext.getCmp('key7dest').setValue('18')]]>
            </line>
            <line>
              <![CDATA[  【12时37分40秒 执行操作】Extjs： return  Ext.getCmp('keysharpdest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分41秒 执行操作】Extjs： Ext.getCmp('keysharpdest').setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【12时37分45秒 执行操作】Extjs： return  Ext.getCmp('keystardest').getStore().findRecord('username', "1101", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分46秒 执行操作】Extjs： Ext.getCmp('keystardest').setValue('51')]]>
            </line>
            <line>
              <![CDATA[  【12时37分50秒 执行操作】Extjs： return  Ext.getCmp('timeoutdest').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分51秒 执行操作】Extjs： Ext.getCmp('timeoutdest').setValue('52')]]>
            </line>
            <line>
              <![CDATA[  【12时37分55秒 执行操作】Extjs： return  Ext.getCmp('invaliddest').getStore().findRecord('name', "prompt1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时37分56秒 执行操作】Extjs： Ext.getCmp('invaliddest').setValue('prompt1')]]>
            </line>
            <line>
              <![CDATA[  【12时38分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_EditKeys -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T12:38:03Z" finished-at="2018-10-18T12:38:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B_EditInRoute1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="B_EditInRoute1" duration-ms="30203" started-at="2018-10-18T12:38:03Z" finished-at="2018-10-18T12:38:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时38分03秒 执行操作】 编辑呼入路由InRoute1，到IVR：Yeastar202Yeastar202]]>
            </line>
            <line>
              <![CDATA[  【12时38分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时38分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时38分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时38分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时38分19秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【12时38分20秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Yeastar202Yeastar202", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时38分21秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('16')]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_EditInRoute1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-10-18T12:38:33Z" finished-at="2018-10-18T12:38:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_sip_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C1_sip_key0_1000" duration-ms="59700" started-at="2018-10-18T12:38:33Z" finished-at="2018-10-18T12:39:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时38分33秒 执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时38分59秒 执行操作】Answer Call  1  1000]]>
            </line>
            <line>
              <![CDATA[  【12时39分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时39分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时39分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时39分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时39分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时39分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时39分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时39分33秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_sip_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T12:39:33Z" finished-at="2018-10-18T12:39:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sps_keyj_1100()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C2_sps_keyj_1100" duration-ms="64932" started-at="2018-10-18T12:39:33Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时39分33秒 执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时40分04秒 执行操作】Answer Call  3  1100]]>
            </line>
            <line>
              <![CDATA[  【12时40分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时40分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时40分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时40分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时40分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时40分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时40分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时40分37秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sps_keyj_1100 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_iax_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C3_iax_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_iax_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C4_spx_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C4_spx_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_fxo_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C5_fxo_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_fxo_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_bri_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C6_bri_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C6_bri_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_e1_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C7_e1_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_e1_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_gsm_key0_1000()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="C8_gsm_key0_1000" duration-ms="0" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_gsm_key0_1000 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_key1_callback()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D1_key1_callback" duration-ms="64008" started-at="2018-10-18T12:40:38Z" finished-at="2018-10-18T12:41:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时40分38秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按1到Callback1]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时41分02秒 执行操作】Answer Call  5  2000]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时41分03秒 执行操作】Answer Call  6  1000]]>
            </line>
            <line>
              <![CDATA[  【12时41分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时41分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时41分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时41分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时41分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时41分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时41分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时41分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时41分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时41分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_key1_callback -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T12:41:42Z" finished-at="2018-10-18T12:41:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_key2_voicemail1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D2_key2_voicemail1" duration-ms="67913" started-at="2018-10-18T12:41:42Z" finished-at="2018-10-18T12:42:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时41分42秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按2到1105的Voicemail]]>
            </line>
            <line>
              <![CDATA[  【12时42分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时42分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时42分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时42分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时42分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时42分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时42分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T12:42:50Z" finished-at="2018-10-18T12:42:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D2_key2_voicemail2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D2_key2_voicemail2" duration-ms="46874" started-at="2018-10-18T12:42:50Z" finished-at="2018-10-18T12:43:37Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR.D2_key2_voicemail2(IVR.java:380)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时42分50秒 执行操作】 1105登录查看存在CallerID为2000的语音留言]]>
            </line>
            <line>
              <![CDATA[  【12时43分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时43分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时43分14秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【12时43分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时43分26秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【12时43分27秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【12时43分28秒 执行操作】Extjs： Ext.getCmp('mesetting').down('mevoicemail').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时43分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mevoicemail').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时43分33秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时43分35秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('mevoicemail').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时43分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mevoicemail').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】.jpg" target="_blank">Error: 语音留言检查:预期第1行的CallerID为2000(2000) 【预期：2000(2000) 实际：2001(2001)】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T12:43:37Z" finished-at="2018-10-18T12:43:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_key2_voicemail3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D2_key2_voicemail3" duration-ms="24760" started-at="2018-10-18T12:43:37Z" finished-at="2018-10-18T12:44:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时43分37秒 执行操作】 admin重新登录]]>
            </line>
            <line>
              <![CDATA[  【12时43分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时43分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时44分01秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_key2_voicemail3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T12:44:02Z" finished-at="2018-10-18T12:44:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_key3_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D3_key3_ringgroup" duration-ms="49676" started-at="2018-10-18T12:44:02Z" finished-at="2018-10-18T12:44:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时44分02秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按3到RingGroup1,1100应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时44分21秒 执行操作】Answer Call  10  1100]]>
            </line>
            <line>
              <![CDATA[  【12时44分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时44分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时44分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时44分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时44分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时44分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时44分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时44分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_key3_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-10-18T12:44:51Z" finished-at="2018-10-18T12:44:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_key4_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D4_key4_queue" duration-ms="38460" started-at="2018-10-18T12:44:52Z" finished-at="2018-10-18T12:45:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时44分52秒 执行操作】 2000拨打99999通过sps外线呼入到IVR:6502，按4到Queue1，1105应答]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时45分01秒 执行操作】Answer Call  13  1105]]>
            </line>
            <line>
              <![CDATA[  【12时45分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时45分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时45分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时45分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时45分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_key4_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T12:45:30Z" finished-at="2018-10-18T12:45:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_key5_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D5_key5_conference" duration-ms="37483" started-at="2018-10-18T12:45:30Z" finished-at="2018-10-18T12:46:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时45分30秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按5到Conference1]]>
            </line>
            <line>
              <![CDATA[  【12时45分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时45分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时46分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时46分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时46分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时46分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时46分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_key5_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T12:46:07Z" finished-at="2018-10-18T12:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_key6_custom_prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D6_key6_custom_prompt" duration-ms="107134" started-at="2018-10-18T12:46:08Z" finished-at="2018-10-18T12:47:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时46分08秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按6到prompt1,提示音播放完就挂断]]>
            </line>
            <line>
              <![CDATA[  【12时47分19秒 执行操作】Q_IVRtoCustomCall TcpSocket return: false]]>
            </line>
            <line>
              <![CDATA[  【12时47分29秒 执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[    Error: 预期2000会挂断,实际4]]>
            </line>
            <line>
              <![CDATA[  【12时47分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时47分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时47分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时47分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时47分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时47分54秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_key6_custom_prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T12:47:55Z" finished-at="2018-10-18T12:47:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_key7_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D7_key7_ivr" duration-ms="49044" started-at="2018-10-18T12:47:55Z" finished-at="2018-10-18T12:48:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时47分55秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按7到IVR6504：*.*，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【12时48分11秒 执行操作】 2000按1到分机1000]]>
            </line>
            <line>
              <![CDATA[    Error: 预期1000会响铃 实际：2]]>
            </line>
            <line>
              <![CDATA[  【12时48分18秒 执行操作】Answer Call  19  1000]]>
            </line>
            <line>
              <![CDATA[  【12时48分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时48分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时48分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时48分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时48分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时48分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时48分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_key7_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T12:48:44Z" finished-at="2018-10-18T12:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_key8_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D8_key8_fxs" duration-ms="0" started-at="2018-10-18T12:48:44Z" finished-at="2018-10-18T12:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D8_key8_fxs -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T12:48:44Z" finished-at="2018-10-18T12:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D90_key9_dialbyname()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D90_key9_dialbyname" duration-ms="62712" started-at="2018-10-18T12:48:44Z" finished-at="2018-10-18T12:49:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时48分44秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按9到DialByName按957到分机1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时49分20秒 执行操作】Answer Call  21  1103]]>
            </line>
            <line>
              <![CDATA[  【12时49分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时49分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时49分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时49分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时49分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时49分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D90_key9_dialbyname -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T12:49:47Z" finished-at="2018-10-18T12:49:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D91_keyj_1100()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D91_keyj_1100" duration-ms="38015" started-at="2018-10-18T12:49:47Z" finished-at="2018-10-18T12:50:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时49分49秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按#到分机1100]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时49分58秒 执行操作】Answer Call  23  1100]]>
            </line>
            <line>
              <![CDATA[  【12时50分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时50分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时50分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时50分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时50分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时50分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时50分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D91_keyj_1100 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T12:50:25Z" finished-at="2018-10-18T12:50:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D92_keyx_1101()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D92_keyx_1101" duration-ms="48638" started-at="2018-10-18T12:50:25Z" finished-at="2018-10-18T12:51:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时50分25秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按*到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1101为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时50分47秒 执行操作】Answer Call  25  1101]]>
            </line>
            <line>
              <![CDATA[  【12时51分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时51分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时51分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时51分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时51分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时51分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时51分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D92_keyx_1101 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:51:13Z" finished-at="2018-10-18T12:51:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D93_TimeOut()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D93_TimeOut" duration-ms="151978" started-at="2018-10-18T12:51:13Z" finished-at="2018-10-18T12:53:45Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期1102为Ring状态 【预期：2 实际：0】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期1102为Ring状态 【预期：2 实际：0】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR.D93_TimeOut(IVR.java:553)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时51分13秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，Timeout到分机1102]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期1102为Ring状态 【预期：2 实际：0】.jpg" target="_blank">Error: 预期1102为Ring状态 【预期：2 实际：0】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D93_TimeOut -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:53:45Z" finished-at="2018-10-18T12:53:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D94_Invalid()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="D94_Invalid" duration-ms="123112" started-at="2018-10-18T12:53:45Z" finished-at="2018-10-18T12:55:48Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR.D94_Invalid(IVR.java:587)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时53分45秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，按A到Custom Prompt：prompt1]]>
            </line>
            <line>
              <![CDATA[  【12时55分09秒 执行操作】2000的通话状态1：3]]>
            </line>
            <line>
              <![CDATA[  【12时55分14秒 执行操作】Q_IVRtoCustomCall TcpSocket return: true]]>
            </line>
            <line>
              <![CDATA[  【12时55分22秒 执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[  【12时55分23秒 执行操作】2000的通话状态2：3]]>
            </line>
            <line>
              <![CDATA[  【12时55分28秒 执行操作】Answer Call  29  1000]]>
            </line>
            <line>
              <![CDATA[  【12时55分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时55分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时55分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [6502(1000)] 实际：1102 [6502(1102)]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D94_Invalid -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="2071" started-at="2018-10-18T12:55:48Z" finished-at="2018-10-18T12:55:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时55分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_DialExtension_1103()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="E1_DialExtension_1103" duration-ms="45024" started-at="2018-10-18T12:55:50Z" finished-at="2018-10-18T12:56:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时55分50秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播分机号码1103]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1103会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时56分00秒 执行操作】Answer Call  31  1103]]>
            </line>
            <line>
              <![CDATA[  【12时56分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时56分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时56分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时56分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时56分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时56分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_DialExtension_1103 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T12:56:35Z" finished-at="2018-10-18T12:56:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_DialExtension_ringgroup1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="E2_DialExtension_ringgroup1" duration-ms="47357" started-at="2018-10-18T12:56:35Z" finished-at="2018-10-18T12:57:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时56分35秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，直播响铃组号码6200,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100会响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1105会响铃]]>
            </line>
            <line>
              <![CDATA[  【12时56分49秒 执行操作】Answer Call  2  1100]]>
            </line>
            <line>
              <![CDATA[  【12时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时56分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时57分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时57分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_DialExtension_ringgroup1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T12:57:23Z" finished-at="2018-10-18T12:57:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_DialExtension_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="E3_DialExtension_disable" duration-ms="37461" started-at="2018-10-18T12:57:23Z" finished-at="2018-10-18T12:58:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时57分23秒 执行操作】 1100拨打6508呼入到IVR：6508，直播分机号1103，预期：走到key 1到分机1000，即1000响铃]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1000为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时57分33秒 执行操作】Answer Call  5  1000]]>
            </line>
            <line>
              <![CDATA[  【12时57分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时57分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时57分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时57分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分00秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E3_DialExtension_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T12:58:00Z" finished-at="2018-10-18T12:58:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_DialOut_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F1_DialOut_sip" duration-ms="37861" started-at="2018-10-18T12:58:00Z" finished-at="2018-10-18T12:58:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时58分00秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期3001为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时58分10秒 执行操作】Answer Call  7  3001]]>
            </line>
            <line>
              <![CDATA[  【12时58分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时58分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时58分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_DialOut_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T12:58:38Z" finished-at="2018-10-18T12:58:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F2_DialOut_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F2_DialOut_sps" duration-ms="40597" started-at="2018-10-18T12:58:38Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时58分38秒 执行操作】 3001拨打3000通过sip外线呼入到IVR：6502，拨打32000通过sps外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期2000为Ring状态]]>
            </line>
            <line>
              <![CDATA[  【12时58分51秒 执行操作】Answer Call  9  2000]]>
            </line>
            <line>
              <![CDATA[  【12时59分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时59分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F2_DialOut_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F3_DialOut_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F3_DialOut_iax" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F3_DialOut_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F4_DialOut_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F4_DialOut_spx" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F4_DialOut_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="9" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F5_DialOut_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F5_DialOut_fxo" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F5_DialOut_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F6_DialOut_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F6_DialOut_bri" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F6_DialOut_bri -->
        <test-method status="PASS" signature="F7_DialOut_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F7_DialOut_e1" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F7_DialOut_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F8_DialOut_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F8_DialOut_gsm" duration-ms="0" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F8_DialOut_gsm -->
        <test-method status="PASS" signature="F9_DialOut_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="F9_DialOut_disable" duration-ms="32465" started-at="2018-10-18T12:59:19Z" finished-at="2018-10-18T12:59:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时59分19秒 执行操作】 1100拨打6503，按32000（未启用Dial Outbound Routes)，预期1100被挂断]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Hang up状态]]>
            </line>
            <line>
              <![CDATA[  【12时59分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时59分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时59分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F9_DialOut_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T12:59:51Z" finished-at="2018-10-18T12:59:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_voicemail_enable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="G1_voicemail_enable" duration-ms="53081" started-at="2018-10-18T12:59:51Z" finished-at="2018-10-18T13:00:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时59分51秒 执行操作】 2001拨打99999通过sps外线呼入到IVR：6502，按*02查看分机1105的语音留言]]>
            </line>
            <line>
              <![CDATA[  【13时00分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时00分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时00分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时00分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时00分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时00分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时00分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_voicemail_enable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T13:00:45Z" finished-at="2018-10-18T13:00:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_voicemail_disable()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="G2_voicemail_disable" duration-ms="31474" started-at="2018-10-18T13:00:45Z" finished-at="2018-10-18T13:01:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时00分45秒 执行操作】 1100拨打6506，按*02查看语音留言（未启用Dial to Check Voicemail）]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期1100为Hang up状态]]>
            </line>
            <line>
              <![CDATA[  【13时01分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时01分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时01分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_voicemail_disable -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T13:01:16Z" finished-at="2018-10-18T13:01:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="H1_prompt" duration-ms="194435" started-at="2018-10-18T13:01:16Z" finished-at="2018-10-18T13:04:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时01分16秒 执行操作】 2000拨打99999通过sps外线呼入到IVR：6502，检查播放4次的prompt1]]>
            </line>
            <line>
              <![CDATA[  【13时04分00秒 执行操作】H_prompt AMI info true true true true]]>
            </line>
            <line>
              <![CDATA[  【13时04分00秒 执行操作】 2000按0到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时04分04秒 执行操作】Answer Call  14  1000]]>
            </line>
            <line>
              <![CDATA[  【13时04分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时04分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时04分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时04分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时04分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时04分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T13:04:31Z" finished-at="2018-10-18T13:04:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_backup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="H2_backup" duration-ms="39131" started-at="2018-10-18T13:04:31Z" finished-at="2018-10-18T13:05:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时04分31秒 执行操作】备份IVR基础环境]]>
            </line>
            <line>
              <![CDATA[  【13时04分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时04分38秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时04分39秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时04分40秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时04分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时04分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【13时05分08秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时05分09秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_backup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="9" started-at="2018-10-18T13:05:10Z" finished-at="2018-10-18T13:05:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="I_delete" duration-ms="70199" started-at="2018-10-18T13:05:10Z" finished-at="2018-10-18T13:06:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时05分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时05分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时05分22秒 执行操作】 表格删除：*.*-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时05分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时05分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时05分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时05分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时05分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时05分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时05分39秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时05分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时05分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：*.*-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时05分46秒 执行操作】 表格删除：*.*-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时05分52秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[3].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时05分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时05分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：*.*-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时05分59秒 执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时06分00秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时06分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时06分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时06分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时06分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时06分12秒 执行操作】 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时06分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：12345abcdefghijklmnopqrstuvwxyz-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时06分19秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T13:06:20Z" finished-at="2018-10-18T13:06:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J_recover()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="J_recover" duration-ms="97809" started-at="2018-10-18T13:06:20Z" finished-at="2018-10-18T13:07:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时06分20秒 执行操作】 IVR恢复BeforeTest设置]]>
            </line>
            <line>
              <![CDATA[  【13时06分24秒 执行操作】 删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【13时06分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时06分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时06分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时06分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分35秒 执行操作】deletes  删除所有IVR: 6]]>
            </line>
            <line>
              <![CDATA[  【13时06分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分40秒 执行操作】Extjs： Ext.getCmp('control-panel').down('ivr').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时06分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分49秒 执行操作】deleting  删除所有IVR: 0]]>
            </line>
            <line>
              <![CDATA[  【13时06分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时06分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有IVR]]>
            </line>
            <line>
              <![CDATA[  【13时06分51秒 执行操作】 添加IVR1：6500,按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时06分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('ivr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时06分59秒 执行操作】 编辑IVR1:按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时07分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('ivr').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时07分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('ivr').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时07分14秒 执行操作】Extjs： Ext.getCmp('key1action').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时07分15秒 执行操作】Extjs： return  Ext.getCmp('key1dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时07分16秒 执行操作】Extjs： Ext.getCmp('key1dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时07分27秒 执行操作】 编辑呼入路由Inbound1，呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时07分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时07分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时07分38秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时07分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时07分43秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时07分44秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时07分45秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_recover -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T13:07:58Z" finished-at="2018-10-18T13:07:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass0()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR@bbd20a]" name="AfterClass0" is-config="true" duration-ms="12688" started-at="2018-10-18T13:07:58Z" finished-at="2018-10-18T13:08:10Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 13时07分58秒执行完毕：=======  IVR  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass0 -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.IVR -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="BeforeClass" is-config="true" duration-ms="34371" started-at="2018-10-18T13:08:10Z" finished-at="2018-10-18T13:08:45Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 13时08分10秒开始执行：=======  Conference  =======]]>
            </line>
            <line>
              <![CDATA[  【13时08分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时08分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时08分37秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时08分40秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【13时08分42秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时08分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="A0_Register" duration-ms="29155" started-at="2018-10-18T13:08:45Z" finished-at="2018-10-18T13:09:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时08分45秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【13时08分45秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【13时08分45秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【13时08分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时08分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_Register -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T13:09:14Z" finished-at="2018-10-18T13:09:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="A1_Init" duration-ms="41537" started-at="2018-10-18T13:09:14Z" finished-at="2018-10-18T13:09:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时09分20秒 执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【13时09分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时09分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时09分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时09分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时09分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时09分31秒 执行操作】deletes  删除所有Conference: 1]]>
            </line>
            <line>
              <![CDATA[  【13时09分32秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时09分36秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时09分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时09分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时09分45秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时09分45秒 执行操作】deleting  删除所有Conference: 0]]>
            </line>
            <line>
              <![CDATA[  【13时09分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时09分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:09:56Z" finished-at="2018-10-18T13:09:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="A2_AddConferences" duration-ms="14406" started-at="2018-10-18T13:09:56Z" data-provider="add" finished-at="2018-10-18T13:10:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6400, ParticipantPassword=, AllowInvite=true, ModeratorPassword=123, Moderators=ExtensionGroup1,1103, DID=, Name=Conference6400}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时09分56秒 执行操作】添加会议室Conference6400：6400]]>
            </line>
            <line>
              <![CDATA[  【13时09分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分00秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时10分01秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【13时10分02秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【13时10分03秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时10分04秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时10分05秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('56,53')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T13:10:10Z" finished-at="2018-10-18T13:10:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="A2_AddConferences" duration-ms="13197" started-at="2018-10-18T13:10:10Z" data-provider="add" finished-at="2018-10-18T13:10:23Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6401, ParticipantPassword=789, AllowInvite=true, ModeratorPassword=, Moderators=1000, DID=5503301, Name=6401}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时10分10秒 执行操作】添加会议室6401：6401]]>
            </line>
            <line>
              <![CDATA[  【13时10分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分14秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时10分15秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('default')]]>
            </line>
            <line>
              <![CDATA[  【13时10分16秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【13时10分17秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时10分18秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T13:10:23Z" finished-at="2018-10-18T13:10:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_AddConferences(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="A2_AddConferences" duration-ms="13162" started-at="2018-10-18T13:10:23Z" data-provider="add" finished-at="2018-10-18T13:10:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=exten, waitModerator=true, Number=6402, ParticipantPassword=, AllowInvite=false, ModeratorPassword=456, Moderators=1000, DID=5503302, Name=a}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时10分23秒 执行操作】添加会议室a：6402]]>
            </line>
            <line>
              <![CDATA[  【13时10分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分27秒 执行操作】Extjs： Ext.getCmp('st-conference-waitforadmin').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【13时10分28秒 执行操作】Extjs： Ext.getCmp('st-conference-prompt').setValue('exten')]]>
            </line>
            <line>
              <![CDATA[  【13时10分29秒 执行操作】Extjs： Ext.getCmp('st-conference-enableinvite').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时10分30秒 执行操作】Extjs： return  Ext.getCmp('st-conference-admin').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时10分31秒 执行操作】Extjs： Ext.getCmp('st-conference-admin').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_AddConferences -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T13:10:36Z" finished-at="2018-10-18T13:10:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_AddInbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B1_AddInbound" duration-ms="59747" started-at="2018-10-18T13:10:36Z" finished-at="2018-10-18T13:11:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时10分38秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时10分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时10分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时10分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时10分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时10分49秒 执行操作】deletes  删除所有呼入路由: 1]]>
            </line>
            <line>
              <![CDATA[  【13时10分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时10分54秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时10分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时10分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时11分34秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时11分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时11分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T13:11:36Z" finished-at="2018-10-18T13:11:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B2_AddInbound" duration-ms="20521" started-at="2018-10-18T13:11:36Z" data-provider="add" finished-at="2018-10-18T13:11:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6400, ParticipantPassword=, AllowInvite=true, ModeratorPassword=123, Moderators=ExtensionGroup1,1103, DID=, Name=Conference6400}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时11分36秒 执行操作】添加呼入路由：Conference6400，DID：，Destination：Conference6400]]>
            </line>
            <line>
              <![CDATA[  【13时11分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时11分40秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时11分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时11分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时11分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时11分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时11分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时11分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【13时11分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference6400", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时11分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('10')]]>
            </line>
            <line>
              <![CDATA[  【13时11分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T13:11:57Z" finished-at="2018-10-18T13:11:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B2_AddInbound" duration-ms="20279" started-at="2018-10-18T13:11:57Z" data-provider="add" finished-at="2018-10-18T13:12:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=default, waitModerator=false, Number=6401, ParticipantPassword=789, AllowInvite=true, ModeratorPassword=, Moderators=1000, DID=5503301, Name=6401}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时11分57秒 执行操作】添加呼入路由：6401，DID：5503301，Destination：6401]]>
            </line>
            <line>
              <![CDATA[  【13时11分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时12分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时12分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分06秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时12分07秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【13时12分08秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "6401", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时12分09秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('11')]]>
            </line>
            <line>
              <![CDATA[  【13时12分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="59" started-at="2018-10-18T13:12:17Z" finished-at="2018-10-18T13:12:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_AddInbound(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B2_AddInbound" duration-ms="20177" started-at="2018-10-18T13:12:17Z" data-provider="add" finished-at="2018-10-18T13:12:37Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{SoundPrompt=exten, waitModerator=true, Number=6402, ParticipantPassword=, AllowInvite=false, ModeratorPassword=456, Moderators=1000, DID=5503302, Name=a}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时12分17秒 执行操作】添加呼入路由：a，DID：5503302，Destination：a]]>
            </line>
            <line>
              <![CDATA[  【13时12分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时12分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时12分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时12分26秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时12分27秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【13时12分28秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "a", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时12分29秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('12')]]>
            </line>
            <line>
              <![CDATA[  【13时12分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_AddInbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:12:37Z" finished-at="2018-10-18T13:12:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B3_Apply" duration-ms="8096" started-at="2018-10-18T13:12:37Z" finished-at="2018-10-18T13:12:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:12:46Z" finished-at="2018-10-18T13:12:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_backup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="B4_backup" duration-ms="38011" started-at="2018-10-18T13:12:46Z" finished-at="2018-10-18T13:13:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时12分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时12分54秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时12分55秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时12分56秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时12分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时12分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分09秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【13时13分21秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时13分23秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_backup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T13:13:24Z" finished-at="2018-10-18T13:13:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C1_extension" duration-ms="31976" started-at="2018-10-18T13:13:24Z" finished-at="2018-10-18T13:13:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时13分24秒 执行操作】 分机1000呼入会议室6400]]>
            </line>
            <line>
              <![CDATA[  【13时13分47秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时13分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分53秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时13分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时13分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时13分56秒 执行操作】会议室成员数：2]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T13:13:56Z" finished-at="2018-10-18T13:13:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C2_sps" duration-ms="31765" started-at="2018-10-18T13:13:56Z" finished-at="2018-10-18T13:14:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时13分56秒 执行操作】 2000拨打99999通过sps外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[  【13时14分18秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时14分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分24秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时14分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有2个成员]]>
            </line>
            <line>
              <![CDATA[  【13时14分27秒 执行操作】会议室成员数：3]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:14:27Z" finished-at="2018-10-18T13:14:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C3_sip" duration-ms="31582" started-at="2018-10-18T13:14:27Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时14分27秒 执行操作】 3001拨打3000通过sip外线呼入到会议室6400]]>
            </line>
            <line>
              <![CDATA[  【13时14分50秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时14分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分56秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时14分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时14分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有3个成员]]>
            </line>
            <line>
              <![CDATA[  【13时14分59秒 执行操作】会议室成员数：3]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C4_spx" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C4_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_iax1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C5_iax1" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_iax1 -->
        <test-method status="PASS" signature="C5_iax2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C5_iax2" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_iax2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C6_fxo" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C6_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C7_bri" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_bri -->
        <test-method status="PASS" signature="C8_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C8_e1" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="C9_gsm" duration-ms="0" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C9_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:14:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca1_hangup_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca1_hangup_extension" duration-ms="32019" started-at="2018-10-18T13:14:59Z" finished-at="2018-10-18T13:15:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时14分59秒 执行操作】 1000退出会议室]]>
            </line>
            <line>
              <![CDATA[  【13时15分10秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时15分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时15分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有2个成员]]>
            </line>
            <line>
              <![CDATA[  【13时15分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时15分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca1_hangup_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T13:15:31Z" finished-at="2018-10-18T13:15:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca2_hangup_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca2_hangup_sps" duration-ms="32208" started-at="2018-10-18T13:15:31Z" finished-at="2018-10-18T13:16:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时15分31秒 执行操作】 2000退出会议室]]>
            </line>
            <line>
              <![CDATA[  【13时15分41秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时15分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时15分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时15分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时15分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时15分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分03秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca2_hangup_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T13:16:03Z" finished-at="2018-10-18T13:16:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca3_hangup_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca3_hangup_sip" duration-ms="32113" started-at="2018-10-18T13:16:03Z" finished-at="2018-10-18T13:16:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时16分03秒 执行操作】 3001退出会议室]]>
            </line>
            <line>
              <![CDATA[  【13时16分13秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时16分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时16分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6400有0个成员]]>
            </line>
            <line>
              <![CDATA[  【13时16分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时16分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时16分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- Ca3_hangup_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T13:16:35Z" finished-at="2018-10-18T13:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca4_hangup_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca4_hangup_spx" duration-ms="0" started-at="2018-10-18T13:16:35Z" finished-at="2018-10-18T13:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca4_hangup_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T13:16:35Z" finished-at="2018-10-18T13:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T13:16:35Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca5_hangup_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca5_hangup_iax" duration-ms="0" started-at="2018-10-18T13:16:35Z" finished-at="2018-10-18T13:16:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca5_hangup_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca6_hangup_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca6_hangup_fxo" duration-ms="0" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca6_hangup_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca7_hangup_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca7_hangup_bri" duration-ms="0" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca7_hangup_bri -->
        <test-method status="PASS" signature="Ca8_hangup_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca8_hangup_e1" duration-ms="0" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca8_hangup_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Ca9_hangup_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="Ca9_hangup_gsm" duration-ms="0" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Ca9_hangup_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:16:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_Participant1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="D1_Participant1" duration-ms="56466" started-at="2018-10-18T13:16:36Z" finished-at="2018-10-18T13:17:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时16分38秒 执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入与会者密码：789]]>
            </line>
            <line>
              <![CDATA[  【13时16分49秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时16分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时16分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时16分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入与会者密码前，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[  【13时17分06秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时17分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时17分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时17分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入与会者密码后，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时17分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时17分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时17分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时17分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时17分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时17分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时17分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_Participant1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T13:17:32Z" finished-at="2018-10-18T13:17:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_Participant2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="D2_Participant2" duration-ms="34981" started-at="2018-10-18T13:17:32Z" finished-at="2018-10-18T13:18:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时17分32秒 执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室]]>
            </line>
            <line>
              <![CDATA[  【13时17分43秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时17分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时17分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时17分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时17分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时18分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_Participant2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-10-18T13:18:07Z" finished-at="2018-10-18T13:18:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_Participant3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="D3_Participant3" duration-ms="49260" started-at="2018-10-18T13:18:07Z" finished-at="2018-10-18T13:18:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时18分07秒 执行操作】 2000拨打995503301通过sps外线呼入到会议室6401，输入错误的与会密码：123，再次输入正确的与会者密码：789]]>
            </line>
            <line>
              <![CDATA[  【13时18分18秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时18分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时18分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时18分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入错误的与会密码123后，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[  【13时18分31秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时18分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时18分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时18分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 输入正确的与会密码789后，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时18分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时18分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时18分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_Participant3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:18:56Z" finished-at="2018-10-18T13:18:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_Participant4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="D4_Participant4" duration-ms="141166" started-at="2018-10-18T13:18:56Z" finished-at="2018-10-18T13:21:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时18分56秒 执行操作】 1000拨打6401呼入到会议室6401，管理员不需要输入密码直接进入会议室，保持通话]]>
            </line>
            <line>
              <![CDATA[  【13时19分04秒 执行操作】 修改会议室的与会密码为空,立即生效]]>
            </line>
            <line>
              <![CDATA[  【13时19分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时19分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时19分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时19分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时19分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时19分36秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时19分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时19分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时19分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000进入会议室，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时19分41秒 执行操作】 1100拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
            </line>
            <line>
              <![CDATA[  【13时20分23秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时20分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100加入会议室，预期会议室6401有2个成员]]>
            </line>
            <line>
              <![CDATA[  【13时20分36秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时20分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 所有成员退出会议室，预期会议室6401有0个成员]]>
            </line>
            <line>
              <![CDATA[  【13时20分40秒 执行操作】所有成员退出会议室6401， 1100再次拨打6401呼入到会议室6401，不输入密码，呼入成功]]>
            </line>
            <line>
              <![CDATA[  【13时20分53秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时20分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时20分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[1].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100进入会议室，预期会议室6401有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时21分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时21分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时21分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时21分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时21分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时21分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_Participant4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T13:21:18Z" finished-at="2018-10-18T13:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_Prompt()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="E1_Prompt" duration-ms="0" started-at="2018-10-18T13:21:18Z" finished-at="2018-10-18T13:21:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时21分18秒 执行操作】 AMI未打印提示音相关信息--请手动验证]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_Prompt -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:21:18Z" finished-at="2018-10-18T13:21:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_waitModerator()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="F1_waitModerator" duration-ms="261326" started-at="2018-10-18T13:21:18Z" finished-at="2018-10-18T13:25:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时21分20秒 执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[  【13时22分51秒 执行操作】 1100拨打6402呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[  【13时23分23秒 执行操作】 1000拨打6402呼入到会议室6402，管理员进入会议室---判断方法：AMI不会打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402等到管理员，进行通话]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_waitModerator -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T13:25:39Z" finished-at="2018-10-18T13:25:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_ModeratorPassword()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="G1_ModeratorPassword" duration-ms="241084" started-at="2018-10-18T13:25:39Z" finished-at="2018-10-18T13:29:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时25分52秒 执行操作】 2000拨打995503302通过sps外线呼入到会议室6402，需等候管理员---判断方法：AMI打印Status: off]]>
            </line>
            <line>
              <![CDATA[  【13时27分23秒 执行操作】 1100拨打6402呼入到会议室6402，输入管理员密码：456---判断方法：AMI不会打印Status: off]]>
            </line>
            <line>
              <![CDATA[    Pass: 会议室6402需等候管理员才能通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100成为会议室6402的管理员]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_ModeratorPassword -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T13:29:40Z" finished-at="2018-10-18T13:29:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H1_AllowInvite()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="H1_AllowInvite" duration-ms="84011" started-at="2018-10-18T13:29:40Z" finished-at="2018-10-18T13:31:04Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference.H1_AllowInvite(Conference.java:528)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【13时29分42秒 执行操作】 2000拨打99999通过sps外线呼入到会议室6400，按#邀请成员1100加入会议室]]>
            </line>
            <line>
              <![CDATA[  【13时30分06秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时30分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时30分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 2000进入会议室，预期会议室6400有1个成员]]>
            </line>
            <line>
              <![CDATA[  【13时30分22秒 执行操作】Answer Call  15  1100]]>
            </line>
            <line>
              <![CDATA[  【13时30分33秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时30分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时30分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100被2000邀请进入会议室，预期会议室6400有2个成员]]>
            </line>
            <line>
              <![CDATA[  【13时30分36秒 执行操作】 1100按#13001邀请外线号码加入会议室]]>
            </line>
            <line>
              <![CDATA[  【13时30分49秒 执行操作】Answer Call  16  3001]]>
            </line>
            <line>
              <![CDATA[  【13时31分00秒 执行操作】Extjs： return Ext.getCmp('pbxmonitor').down('b-conferencestatus').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时31分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时31分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('pbxmonitor').down('b-conferencestatus').id + ' [data-recordindex]')[0].id + ' tr td')[3].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】.jpg" target="_blank">Error: 3001被1100邀请进入会议室，预期会议室6400有3个成员 【预期：3 实际：2】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_AllowInvite -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T13:31:04Z" finished-at="2018-10-18T13:31:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_menu()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="I1_menu" duration-ms="1" started-at="2018-10-18T13:31:04Z" finished-at="2018-10-18T13:31:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时31分04秒 执行操作】 语音菜单--AMI未打印相关信息--请手动测试]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_menu -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="88" started-at="2018-10-18T13:31:04Z" finished-at="2018-10-18T13:31:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="J1_delete" duration-ms="61941" started-at="2018-10-18T13:31:04Z" finished-at="2018-10-18T13:32:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时31分09秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【13时31分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(50)]]>
            </line>
            <line>
              <![CDATA[  【13时31分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时31分11秒 执行操作】 表格删除：Conference6400-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时31分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时31分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时31分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时31分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时31分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Conference6400-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分28秒 执行操作】 表格删除：Conference6400-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分34秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时31分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时31分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：conference6201-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分41秒 执行操作】 删除：a-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时31分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时31分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时31分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时31分47秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时31分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时31分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：a-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分53秒 执行操作】 删除：a-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时31分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时31分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：a-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-10-18T13:32:06Z" finished-at="2018-10-18T13:32:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="K1_recovery" duration-ms="68506" started-at="2018-10-18T13:32:06Z" finished-at="2018-10-18T13:33:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时32分06秒 执行操作】 恢复初始化环境]]>
            </line>
            <line>
              <![CDATA[  【13时32分06秒 执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【13时32分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时32分11秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时32分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时32分15秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时32分17秒 执行操作】deletes  删除所有Conference: 1]]>
            </line>
            <line>
              <![CDATA[  【13时32分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时32分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时32分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时32分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时33分02秒 执行操作】deleting  删除所有Conference: 0]]>
            </line>
            <line>
              <![CDATA[  【13时33分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时33分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【13时33分04秒 执行操作】 添加Conference1:6400]]>
            </line>
            <line>
              <![CDATA[  【13时33分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时33分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T13:33:15Z" finished-at="2018-10-18T13:33:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="K2_recovery" duration-ms="86519" started-at="2018-10-18T13:33:15Z" finished-at="2018-10-18T13:34:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时33分15秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时33分19秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时33分20秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时33分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时33分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时33分26秒 执行操作】deletes  删除所有呼入路由: 3]]>
            </line>
            <line>
              <![CDATA[  【13时33分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时33分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时33分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时33分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时34分11秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时34分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时34分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时34分13秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【13时34分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时34分17秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时34分18秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时34分19秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时34分20秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时34分21秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时34分22秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时34分23秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时34分24秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时34分25秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时34分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T13:34:41Z" finished-at="2018-10-18T13:34:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference@503868]" name="AfterClass" is-config="true" duration-ms="23385" started-at="2018-10-18T13:34:41Z" finished-at="2018-10-18T13:35:05Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 13时34分41秒执行完毕：=======  Conference  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Conference -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="BeforeClass" is-config="true" duration-ms="35332" started-at="2018-10-18T13:55:36Z" finished-at="2018-10-18T13:56:12Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 13时55分36秒开始执行：====== InboundRoutes ======]]>
            </line>
            <line>
              <![CDATA[  【13时56分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时56分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时56分04秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时56分07秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【13时56分09秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时56分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="A1_addExtensions" duration-ms="44220" started-at="2018-10-18T13:56:12Z" finished-at="2018-10-18T13:56:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时56分12秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【13时56分12秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【13时56分12秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【13时56分12秒 执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时56分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时56分19秒 执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[  【13时56分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时56分25秒 执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[  【13时56分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时56分30秒 执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[  【13时56分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时56分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时56分39秒 执行操作】 主测设备注册分机1106]]>
            </line>
            <line>
              <![CDATA[  【13时56分39秒 执行操作】 辅助设备1注册分机3000]]>
            </line>
            <line>
              <![CDATA[  【13时56分39秒 执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【13时56分44秒 执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【13时56分46秒 执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【13时56分48秒 执行操作】 辅助设备2注册分机2005]]>
            </line>
            <line>
              <![CDATA[  【13时56分50秒 执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【13时56分52秒 执行操作】 辅助设备3注册分机4001]]>
            </line>
            <line>
              <![CDATA[  【13时56分55秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T13:56:56Z" finished-at="2018-10-18T13:56:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="A2_init" duration-ms="42564" started-at="2018-10-18T13:56:56Z" finished-at="2018-10-18T13:57:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时57分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时57分01秒 执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【13时57分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时57分06秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时57分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时57分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分12秒 执行操作】deletes  删除所有Conference: 1]]>
            </line>
            <line>
              <![CDATA[  【13时57分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分17秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时57分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分26秒 执行操作】deleting  删除所有Conference: 0]]>
            </line>
            <line>
              <![CDATA[  【13时57分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【13时57分28秒 执行操作】 添加Conference1:6400]]>
            </line>
            <line>
              <![CDATA[  【13时57分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T13:57:39Z" finished-at="2018-10-18T13:57:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="A3_init" duration-ms="99904" started-at="2018-10-18T13:57:39Z" finished-at="2018-10-18T13:59:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时57分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时57分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时57分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时57分47秒 执行操作】删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时57分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时57分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时57分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时57分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时57分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时57分58秒 执行操作】deletes 删除所有呼入路由: 1]]>
            </line>
            <line>
              <![CDATA[  【13时57分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时58分02秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时58分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时58分42秒 执行操作】deleting 删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时58分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时58分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时58分45秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时58分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时58分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时58分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时58分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时58分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时58分56秒 执行操作】deletes  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时58分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时58分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时58分58秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【13时59分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时59分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时59分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时59分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时59分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时59分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时59分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时59分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时59分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时59分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时59分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="61" started-at="2018-10-18T13:59:18Z" finished-at="2018-10-18T13:59:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B1_checkTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B1_checkTrunk" duration-ms="30032" started-at="2018-10-18T13:59:19Z" finished-at="2018-10-18T13:59:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.RegressionCase.pbxcase.Inbound.A_callfrom1_sip(Inbound.java:58)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.B1_checkTrunk(InboundRoutes.java:127)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【13时59分19秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时59分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时59分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：3001 [3001] 实际：callback3001】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_checkTrunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4155" started-at="2018-10-18T13:59:49Z" finished-at="2018-10-18T13:59:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时59分49秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【13时59分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时59分51秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【13时59分51秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【13时59分52秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时59分53秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="73520" started-at="2018-10-18T13:59:53Z" data-provider="did1" finished-at="2018-10-18T14:01:06Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=999a, failNumber=99, DID=.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时59分53秒 执行操作】修改呼入路由的DID为：.]]>
            </line>
            <line>
              <![CDATA[  【13时59分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时59分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时00分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时00分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时00分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时00分23秒 执行操作】 2001拨打999a]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时00分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时00分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时00分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时00分53秒 执行操作】 2001拨打99]]>
            </line>
            <line>
              <![CDATA[  【14时01分04秒 执行操作】 2001拨打99,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="69" started-at="2018-10-18T14:01:06Z" finished-at="2018-10-18T14:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71241" started-at="2018-10-18T14:01:06Z" data-provider="did1" finished-at="2018-10-18T14:02:18Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9999, failNumber=999, DID=X.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时01分06秒 执行操作】修改呼入路由的DID为：X.]]>
            </line>
            <line>
              <![CDATA[  【14时01分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时01分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时01分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时01分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时01分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时01分36秒 执行操作】 2001拨打9999]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时01分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时01分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时01分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时01分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时01分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时02分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时02分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时02分04秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时02分05秒 执行操作】 2001拨打999]]>
            </line>
            <line>
              <![CDATA[  【14时02分16秒 执行操作】 2001拨打999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="73" started-at="2018-10-18T14:02:18Z" finished-at="2018-10-18T14:02:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71230" started-at="2018-10-18T14:02:18Z" data-provider="did1" finished-at="2018-10-18T14:03:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9929, failNumber=9919, DID=N.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时02分18秒 执行操作】修改呼入路由的DID为：N.]]>
            </line>
            <line>
              <![CDATA[  【14时02分19秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时02分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时02分26秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时02分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时02分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时02分47秒 执行操作】 2001拨打9929]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时03分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时03分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时03分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时03分16秒 执行操作】 2001拨打9919]]>
            </line>
            <line>
              <![CDATA[  【14时03分27秒 执行操作】 2001拨打9919,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T14:03:29Z" finished-at="2018-10-18T14:03:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71162" started-at="2018-10-18T14:03:29Z" data-provider="did1" finished-at="2018-10-18T14:04:40Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9919, failNumber=99aa, DID=Z.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时03分29秒 执行操作】修改呼入路由的DID为：Z.]]>
            </line>
            <line>
              <![CDATA[  【14时03分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时03分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时03分38秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时03分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时03分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时03分58秒 执行操作】 2001拨打9919]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时04分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时04分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时04分27秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时04分27秒 执行操作】 2001拨打99aa]]>
            </line>
            <line>
              <![CDATA[  【14时04分38秒 执行操作】 2001拨打99aa,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T14:04:40Z" finished-at="2018-10-18T14:04:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71374" started-at="2018-10-18T14:04:40Z" data-provider="did1" finished-at="2018-10-18T14:05:52Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=992202101, failNumber=99220210, DID=NZXNZX.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时04分40秒 执行操作】修改呼入路由的DID为：NZXNZX.]]>
            </line>
            <line>
              <![CDATA[  【14时04分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时04分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时04分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时04分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时05分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时05分10秒 执行操作】 2001拨打992202101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时05分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时05分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时05分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时05分38秒 执行操作】 2001拨打99220210]]>
            </line>
            <line>
              <![CDATA[  【14时05分50秒 执行操作】 2001拨打99220210,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="62" started-at="2018-10-18T14:05:52Z" finished-at="2018-10-18T14:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="72692" started-at="2018-10-18T14:05:52Z" data-provider="did1" finished-at="2018-10-18T14:07:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9969, failNumber=9979, DID=[12-6].}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时05分52秒 执行操作】修改呼入路由的DID为：[12-6].]]>
            </line>
            <line>
              <![CDATA[  【14时05分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时05分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时06分00秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时06分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时06分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时06分21秒 执行操作】 2001拨打9969]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时06分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时06分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时06分51秒 执行操作】 2001拨打9979]]>
            </line>
            <line>
              <![CDATA[  【14时07分02秒 执行操作】 2001拨打9979,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="56" started-at="2018-10-18T14:07:04Z" finished-at="2018-10-18T14:07:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71646" started-at="2018-10-18T14:07:04Z" data-provider="did1" finished-at="2018-10-18T14:08:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9950912501, failNumber=9950812501, DID=[158]X9ZN[1-5]X.}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时07分04秒 执行操作】修改呼入路由的DID为：[158]X9ZN[1-5]X.]]>
            </line>
            <line>
              <![CDATA[  【14时07分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时07分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时07分13秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时07分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时07分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时07分34秒 执行操作】 2001拨打9950912501]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时07分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时07分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时07分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时07分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时07分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时08分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时08分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时08分03秒 执行操作】 2001拨打9950812501]]>
            </line>
            <line>
              <![CDATA[  【14时08分14秒 执行操作】 2001拨打9950812501,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="55" started-at="2018-10-18T14:08:16Z" finished-at="2018-10-18T14:08:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="72763" started-at="2018-10-18T14:08:16Z" data-provider="did1" finished-at="2018-10-18T14:09:29Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=99+12abc06032456N, failNumber=99+12abc06032456a, DID=+12abc06032456N}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时08分16秒 执行操作】修改呼入路由的DID为：+12abc06032456N]]>
            </line>
            <line>
              <![CDATA[  【14时08分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时08分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时08分25秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时08分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时08分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时08分46秒 执行操作】 2001拨打99+12abc06032456N]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时09分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时09分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时09分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时09分16秒 执行操作】 2001拨打99+12abc06032456a]]>
            </line>
            <line>
              <![CDATA[  【14时09分27秒 执行操作】 2001拨打99+12abc06032456a,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="68" started-at="2018-10-18T14:09:29Z" finished-at="2018-10-18T14:09:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="90300" started-at="2018-10-18T14:09:29Z" data-provider="did1" finished-at="2018-10-18T14:10:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=99xxx21, failNumber=99aaa21, DID=XXXNZ!}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时09分29秒 执行操作】修改呼入路由的DID为：XXXNZ!]]>
            </line>
            <line>
              <![CDATA[  【14时09分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时09分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时09分37秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时09分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时09分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时09分58秒 执行操作】 2001拨打99xxx21]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B2_checkDID()99xxx21.jpg" target="_blank">Error: B2_checkDID()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【14时10分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时10分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时10分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时10分46秒 执行操作】 2001拨打99aaa21]]>
            </line>
            <line>
              <![CDATA[  【14时10分57秒 执行操作】 2001拨打99aaa21,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="2112" started-at="2018-10-18T14:10:59Z" finished-at="2018-10-18T14:11:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时10分59秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时11分01秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时11分01秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="72368" started-at="2018-10-18T14:11:01Z" data-provider="did1" finished-at="2018-10-18T14:12:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=9913950174296, failNumber=9913950174295, DID=13950174296!}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时11分01秒 执行操作】修改呼入路由的DID为：13950174296!]]>
            </line>
            <line>
              <![CDATA[  【14时11分02秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时11分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时11分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时11分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时11分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时11分31秒 执行操作】 2001拨打9913950174296]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时11分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时11分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时11分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时11分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时11分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时11分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时11分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时12分00秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时12分01秒 执行操作】 2001拨打9913950174295]]>
            </line>
            <line>
              <![CDATA[  【14时12分12秒 执行操作】 2001拨打9913950174295,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="52" started-at="2018-10-18T14:12:14Z" finished-at="2018-10-18T14:12:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_checkDID(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B2_checkDID" duration-ms="71394" started-at="2018-10-18T14:12:14Z" data-provider="did1" finished-at="2018-10-18T14:13:25Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{successNumber=990123456789, failNumber=990123456786, DID=0123456789}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【14时12分14秒 执行操作】修改呼入路由的DID为：0123456789]]>
            </line>
            <line>
              <![CDATA[  【14时12分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时12分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时12分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时12分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时12分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时12分43秒 执行操作】 2001拨打990123456789]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时13分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时13分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时13分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时13分12秒 执行操作】 2001拨打990123456786]]>
            </line>
            <line>
              <![CDATA[  【14时13分23秒 执行操作】 2001拨打990123456786,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_checkDID -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-10-18T14:13:25Z" finished-at="2018-10-18T14:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B3_checkCaller1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B3_checkCaller1" duration-ms="66663" started-at="2018-10-18T14:13:25Z" finished-at="2018-10-18T14:14:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.B3_checkCaller1(InboundRoutes.java:245)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时13分25秒 执行操作】修改呼入路由的Caller ID为[128]X[0-6]12]]>
            </line>
            <line>
              <![CDATA[  【14时13分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时13分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时13分34秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时13分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时13分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时13分54秒 执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B3_checkCaller1()分机1000.jpg" target="_blank">Error: B3_checkCaller1()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【14时14分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时14分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_checkCaller1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4361" started-at="2018-10-18T14:14:32Z" finished-at="2018-10-18T14:14:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时14分32秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时14分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时14分34秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时14分34秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时14分36秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时14分36秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B4_checkCaller2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B4_checkCaller2" duration-ms="66259" started-at="2018-10-18T14:14:36Z" finished-at="2018-10-18T14:15:42Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.B4_checkCaller2(InboundRoutes.java:285)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时14分36秒 执行操作】修改呼入路由的Caller ID为NXZ1!]]>
            </line>
            <line>
              <![CDATA[  【14时14分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时14分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时14分45秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时14分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时14分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时15分05秒 执行操作】 2005（CallerID为2X612）拨打99999，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B4_checkCaller2()分机1000.jpg" target="_blank">Error: B4_checkCaller2()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【14时15分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时15分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_checkCaller2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4227" started-at="2018-10-18T14:15:42Z" finished-at="2018-10-18T14:15:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时15分43秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时15分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时15分45秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时15分45秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时15分46秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时15分47秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="B5_checkDIDAndCaller()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B5_checkDIDAndCaller" duration-ms="87789" started-at="2018-10-18T14:15:47Z" finished-at="2018-10-18T14:17:14Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.B5_checkDIDAndCaller(InboundRoutes.java:326)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时15分47秒 执行操作】修改呼入路由的DID为5503301-5503305，CallerID为NXZ1!
2001]]>
            </line>
            <line>
              <![CDATA[  【14时15分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时15分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时15分55秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时15分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时16分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时16分16秒 执行操作】 2005（CallerID为2X612）拨打995503302，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\B5_checkDIDAndCaller()分机1000.jpg" target="_blank">Error: B5_checkDIDAndCaller()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【14时17分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时17分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2005 [2X612] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_checkDIDAndCaller -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4190" started-at="2018-10-18T14:17:15Z" finished-at="2018-10-18T14:17:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时17分15秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时17分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时17分17秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时17分17秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时17分18秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时17分19秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_editDIDAndCaller()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="B6_editDIDAndCaller" duration-ms="28402" started-at="2018-10-18T14:17:19Z" finished-at="2018-10-18T14:17:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时17分19秒 执行操作】修改呼入路由的DID和CallerID为空]]>
            </line>
            <line>
              <![CDATA[  【14时17分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时17分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时17分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时17分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时17分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_editDIDAndCaller -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T14:17:47Z" finished-at="2018-10-18T14:17:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_addRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C1_addRoute" duration-ms="235017" started-at="2018-10-18T14:17:47Z" finished-at="2018-10-18T14:21:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时17分47秒 执行操作】 添加呼入路由InRoute2——呼入目的地到HangUp ]]>
            </line>
            <line>
              <![CDATA[  【14时17分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时17分51秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时17分52秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时17分53秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时17分54秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时17分55秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时17分56秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时17分57秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【14时18分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分02秒 执行操作】 添加呼入路由InRoute3——呼入目的地到sip分机1100 ]]>
            </line>
            <line>
              <![CDATA[  【14时18分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时18分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时18分13秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【14时18分14秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时18分15秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【14时18分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分23秒 执行操作】 添加呼入路由InRoute5——呼入目的地到Extension Range ]]>
            </line>
            <line>
              <![CDATA[  【14时18分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时18分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分31秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分32秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时18分33秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('E')]]>
            </line>
            <line>
              <![CDATA[  【14时18分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分39秒 执行操作】 添加呼入路由InRoute6——呼入目的地到voicemail ]]>
            </line>
            <line>
              <![CDATA[  【14时18分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时18分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时18分48秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时18分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【14时18分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时18分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【14时18分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时18分59秒 执行操作】 添加呼入路由InRoute7——呼入目的地到IVR ]]>
            </line>
            <line>
              <![CDATA[  【14时19分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时19分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时19分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分08秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时19分09秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【14时19分10秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时19分11秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('23')]]>
            </line>
            <line>
              <![CDATA[  【14时19分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时19分20秒 执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
            </line>
            <line>
              <![CDATA[  【14时19分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时19分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时19分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分29秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时19分30秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【14时19分31秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时19分32秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【14时19分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时19分40秒 执行操作】 添加呼入路由InRoute9——呼入目的地到Queue ]]>
            </line>
            <line>
              <![CDATA[  【14时19分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时19分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时19分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时19分49秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时19分50秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【14时19分51秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时19分52秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【14时19分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分00秒 执行操作】 添加呼入路由InRoute10——呼入目的地到Conference ]]>
            </line>
            <line>
              <![CDATA[  【14时20分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时20分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分10秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时20分11秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【14时20分12秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时20分13秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('14')]]>
            </line>
            <line>
              <![CDATA[  【14时20分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分21秒 执行操作】 添加呼入路由InRoute11——呼入目的地到DISA ]]>
            </line>
            <line>
              <![CDATA[  【14时20分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时20分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分30秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时20分31秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('d')]]>
            </line>
            <line>
              <![CDATA[  【14时20分32秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时20分33秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【14时20分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分41秒 执行操作】 添加呼入路由InRoute12——呼入目的地到Callback ]]>
            </line>
            <line>
              <![CDATA[  【14时20分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时20分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时20分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时20分50秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时20分51秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【14时20分52秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时20分53秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('36')]]>
            </line>
            <line>
              <![CDATA[  【14时21分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时21分01秒 执行操作】 添加呼入路由InRoute13——呼入目的地到Outbound Route_sip ]]>
            </line>
            <line>
              <![CDATA[  【14时21分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时21分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时21分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时21分12秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('o')]]>
            </line>
            <line>
              <![CDATA[  【14时21分13秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "OutRoute1_sip", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时21分14秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('11')]]>
            </line>
            <line>
              <![CDATA[  【14时21分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时21分22秒 执行操作】 添加呼入路由InRoute18——呼入目的地到Outbound Route_Account ]]>
            </line>
            <line>
              <![CDATA[  【14时21分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时21分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时21分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时21分31秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时21分32秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('o')]]>
            </line>
            <line>
              <![CDATA[  【14时21分33秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "OutRoute9_account", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时21分34秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('13')]]>
            </line>
            <line>
              <![CDATA[  【14时21分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_addRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T14:21:42Z" finished-at="2018-10-18T14:21:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C2_checkPriority1" duration-ms="67744" started-at="2018-10-18T14:21:42Z" finished-at="2018-10-18T14:22:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时21分46秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时21分47秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时21分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时21分48秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时21分54秒 执行操作】 2001拨打991105通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时22分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时22分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时22分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时22分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时22分49秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T14:22:50Z" finished-at="2018-10-18T14:22:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C2_checkPriority2" duration-ms="86140" started-at="2018-10-18T14:22:50Z" finished-at="2018-10-18T14:24:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时22分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时22分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时22分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时22分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时22分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时22分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时23分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时23分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时23分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时23分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时23分05秒 执行操作】 移动第9行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时23分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时23分21秒 执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时23分27秒 执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时23分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时23分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时23分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时24分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时24分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时24分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T14:24:16Z" finished-at="2018-10-18T14:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C2_checkPriority3" duration-ms="101201" started-at="2018-10-18T14:24:16Z" finished-at="2018-10-18T14:25:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时24分17秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时24分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时24分29秒 执行操作】 移动第8行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时24分35秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时24分45秒 执行操作】 3001拨打3000呼入到响铃组，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000/1100和1105响铃]]>
            </line>
            <line>
              <![CDATA[  【14时24分54秒 执行操作】Answer Call  15  1105]]>
            </line>
            <line>
              <![CDATA[  【14时24分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态——TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时24分58秒 执行操作】 2001拨打99999通过sps外线呼入到响铃组，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000和1100响铃]]>
            </line>
            <line>
              <![CDATA[  【14时25分08秒 执行操作】Answer Call  18  1100]]>
            </line>
            <line>
              <![CDATA[  【14时25分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态——TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时25分15秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时25分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时25分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时25分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时25分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时25分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T14:25:57Z" finished-at="2018-10-18T14:25:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority4_deleteRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C2_checkPriority4_deleteRoute" duration-ms="22827" started-at="2018-10-18T14:25:57Z" finished-at="2018-10-18T14:26:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时25分57秒 执行操作】 删除呼入路由InRoute8（RingGroup）——选择yes]]>
            </line>
            <line>
              <![CDATA[  【14时25分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时26分06秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【14时26分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority4_deleteRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T14:26:20Z" finished-at="2018-10-18T14:26:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_checkPriority5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C2_checkPriority5" duration-ms="66321" started-at="2018-10-18T14:26:20Z" finished-at="2018-10-18T14:27:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时26分20秒 执行操作】 3001拨打3000通过sip外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时26分32秒 执行操作】 2001拨打99999通过sps外线呼入到会议室]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时26分45秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时26分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时26分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时26分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时26分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时27分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时27分26秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_checkPriority5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="85" started-at="2018-10-18T14:27:27Z" finished-at="2018-10-18T14:27:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_recoveryRingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="C3_recoveryRingGroup" duration-ms="57319" started-at="2018-10-18T14:27:27Z" finished-at="2018-10-18T14:28:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时27分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时27分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时28分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时28分04秒 执行操作】 添加呼入路由InRoute8——呼入目的地到RingGroup ]]>
            </line>
            <line>
              <![CDATA[  【14时28分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时28分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时28分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【14时28分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【14时28分11秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【14时28分12秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【14时28分13秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【14时28分14秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【14时28分15秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时28分16秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【14时28分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_recoveryRingGroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T14:28:24Z" finished-at="2018-10-18T14:28:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_Hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="D1_Hangup" duration-ms="38952" started-at="2018-10-18T14:28:24Z" finished-at="2018-10-18T14:29:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时28分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时28分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时28分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时28分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时28分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时28分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时28分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时28分36秒 执行操作】 移动第3行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时28分42秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时28分52秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【14时29分01秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_Hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="66" started-at="2018-10-18T14:29:03Z" finished-at="2018-10-18T14:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T14:29:03Z" finished-at="2018-10-18T14:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_FxsExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="D2_FxsExtensions" duration-ms="0" started-at="2018-10-18T14:29:03Z" finished-at="2018-10-18T14:29:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D2_FxsExtensions -->
        <test-method status="FAIL" signature="D3_ExtensionRange()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="D3_ExtensionRange" duration-ms="100910" started-at="2018-10-18T14:29:03Z" finished-at="2018-10-18T14:30:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Busy 实际：Voicemail】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Busy 实际：Voicemail】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.D3_ExtensionRange(InboundRoutes.java:735)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时29分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时29分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时29分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时29分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时29分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时29分12秒 执行操作】 移动第5行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时29分18秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时29分28秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时29分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时29分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时29分57秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时29分57秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1101状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时30分03秒 执行操作】Answer Call  26  1101]]>
            </line>
            <line>
              <![CDATA[  【14时30分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时30分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时30分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时30分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时30分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Busy 实际：Voicemail】.jpg" target="_blank">Error: CDR_Status检测 【预期：Busy 实际：Voicemail】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_ExtensionRange -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4224" started-at="2018-10-18T14:30:44Z" finished-at="2018-10-18T14:30:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时30分44秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时30分46秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时30分46秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时30分46秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时30分48秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时30分48秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_Voicemail()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="D4_Voicemail" duration-ms="54775" started-at="2018-10-18T14:30:48Z" finished-at="2018-10-18T14:31:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时30分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时30分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时30分58秒 执行操作】 移动第6行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时31分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时31分14秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时31分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时31分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时31分42秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_Voicemail -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-10-18T14:31:43Z" finished-at="2018-10-18T14:31:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_Outbound_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="E1_Outbound_sip" duration-ms="65972" started-at="2018-10-18T14:31:43Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时31分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时31分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分01秒 执行操作】 移动第11行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时32分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时32分17秒 执行操作】 2001拨打9913001通过sps外线呼入转sip外线呼出到分机3001]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时32分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时32分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时32分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_Outbound_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_Outbound_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="E2_Outbound_iax" duration-ms="0" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E2_Outbound_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_Outbound_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="E4_Outbound_bri" duration-ms="0" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E4_Outbound_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_Outbound_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="E5_Outbound_e1" duration-ms="0" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:32:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E5_Outbound_e1 -->
        <test-method status="FAIL" signature="E6_Outbound_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="E6_Outbound_account" duration-ms="78099" started-at="2018-10-18T14:32:49Z" finished-at="2018-10-18T14:34:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Answered 实际：No Answer】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Answered 实际：No Answer】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.E6_Outbound_account(InboundRoutes.java:1000)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时32分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时32分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时32分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[8].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[9].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[10].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[11].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时33分08秒 执行操作】 移动第12行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时33分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[11].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时33分25秒 执行操作】 2001拨打9991111通过sps外线呼入转account外线到分机1000，分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机4000状态为TALKING，实际状态为-1]]>
            </line>
            <line>
              <![CDATA[  【14时34分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时34分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时34分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E6_Outbound_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="2202" started-at="2018-10-18T14:34:07Z" finished-at="2018-10-18T14:34:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时34分07秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时34分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时34分09秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_addTimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G1_addTimeCondition" duration-ms="97651" started-at="2018-10-18T14:34:09Z" finished-at="2018-10-18T14:35:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时34分10秒 执行操作】 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【14时34分10秒 执行操作】删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【14时34分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时34分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时34分16秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时34分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时34分21秒 执行操作】deletes 删除所有时间条件——Workday: 1]]>
            </line>
            <line>
              <![CDATA[  【14时34分22秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时34分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【14时34分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时34分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时35分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时35分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时35分06秒 执行操作】deleting 删除所有时间条件——Workday: 0]]>
            </line>
            <line>
              <![CDATA[  【14时35分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时35分08秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【14时35分08秒 执行操作】 添加时间条件workday_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[  【14时35分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时35分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【14时35分15秒 执行操作】 添加时间条件workday2_24hour:每天24小时都是工作时间]]>
            </line>
            <line>
              <![CDATA[  【14时35分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时35分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【14时35分23秒 执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时35分23秒 执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时35分27秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时35分28秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时35分29秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时35分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时35分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时35分34秒 执行操作】deletes 删除所有Holiday: 0]]>
            </line>
            <line>
              <![CDATA[  【14时35分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时35分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时35分36秒 执行操作】 新建HolidayByDay：2018-01-01~2200-12-31]]>
            </line>
            <line>
              <![CDATA[  【14时35分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('holiday').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_addTimeCondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="79" started-at="2018-10-18T14:35:47Z" finished-at="2018-10-18T14:35:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_otherTime1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G2_otherTime1" duration-ms="74932" started-at="2018-10-18T14:35:47Z" finished-at="2018-10-18T14:37:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时35分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时35分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时35分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时35分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时35分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时35分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时35分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时36分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时36分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时36分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时36分04秒 执行操作】 移动第6行到第一行 ]]>
            </line>
            <line>
              <![CDATA[  【14时36分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时36分20秒 执行操作】修改InRoute10_Conference呼入路由:勾选TimeCondition]]>
            </line>
            <line>
              <![CDATA[  【14时36分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时36分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时36分28秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时36分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时36分34秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【14时36分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时36分49秒 执行操作】 2001拨打99999，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【14时37分00秒 执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_otherTime1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="93" started-at="2018-10-18T14:37:02Z" finished-at="2018-10-18T14:37:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G2_otherTime2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G2_otherTime2" duration-ms="138435" started-at="2018-10-18T14:37:02Z" finished-at="2018-10-18T14:39:21Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.G2_otherTime2(InboundRoutes.java:1102)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时37分02秒 执行操作】修改InRoute10_Conference呼入路由:otherTime的目的地选择分机1000]]>
            </line>
            <line>
              <![CDATA[  【14时37分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时37分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时37分11秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时37分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时37分18秒 执行操作】Extjs： Ext.getCmp('combo-7378').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【14时37分21秒 执行操作】Extjs： return  Ext.getCmp('combo-7379').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时37分22秒 执行操作】Extjs： Ext.getCmp('combo-7379').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【14时37分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时37分38秒 执行操作】 3001拨打3000，预期呼入成功，分机1000未接]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--RING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时37分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时38分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时38分10秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[  【14时38分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时38分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时38分43秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时38分43秒 执行操作】 4001拨打11000通过account外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【14时39分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时39分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：4001 [6100] 实际：2001 [2001]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_otherTime2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4274" started-at="2018-10-18T14:39:21Z" finished-at="2018-10-18T14:39:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时39分21秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时39分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时39分23秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时39分23秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时39分24秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时39分25秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_workday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G3_workday" duration-ms="72618" started-at="2018-10-18T14:39:25Z" finished-at="2018-10-18T14:40:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时39分25秒 执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——workday_24hour]]>
            </line>
            <line>
              <![CDATA[  【14时39分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时39分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时39分33秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时39分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时39分42秒 执行操作】Extjs： return  Ext.getCmp('combo-7790').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时39分43秒 执行操作】Extjs： Ext.getCmp('combo-7790').setValue('2')]]>
            </line>
            <line>
              <![CDATA[  【14时39分46秒 执行操作】Extjs： Ext.getCmp('combo-7791').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【14时39分49秒 执行操作】Extjs： return  Ext.getCmp('combo-7792').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时39分50秒 执行操作】Extjs： Ext.getCmp('combo-7792').setValue('50')]]>
            </line>
            <line>
              <![CDATA[  【14时39分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时40分06秒 执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时40分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时40分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时40分37秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_workday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="73" started-at="2018-10-18T14:40:38Z" finished-at="2018-10-18T14:40:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G4_holiday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G4_holiday" duration-ms="78010" started-at="2018-10-18T14:40:38Z" finished-at="2018-10-18T14:41:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时40分38秒 执行操作】修改InRoute10_Conference呼入路由:新增TimeCondition——holiday]]>
            </line>
            <line>
              <![CDATA[  【14时40分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时40分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时40分46秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时40分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时40分55秒 执行操作】Extjs： return  Ext.getCmp('combo-7947').getStore().findRecord('name', "[Holiday]", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时40分56秒 执行操作】Extjs： Ext.getCmp('combo-7947').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【14时40分59秒 执行操作】Extjs： Ext.getCmp('combo-7948').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【14时41分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时41分14秒 执行操作】 3001拨打3000通过sip外线呼入到Queue6700,1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100、1000、1105同时响铃]]>
            </line>
            <line>
              <![CDATA[  【14时41分22秒 执行操作】Answer Call  9  1100]]>
            </line>
            <line>
              <![CDATA[  【14时41分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时41分36秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时41分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时41分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时41分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时41分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时41分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时41分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时41分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G4_holiday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="69" started-at="2018-10-18T14:41:56Z" finished-at="2018-10-18T14:41:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_addTime1_noWorkday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G5_addTime1_noWorkday" duration-ms="33085" started-at="2018-10-18T14:41:56Z" finished-at="2018-10-18T14:42:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时41分56秒 执行操作】 当前的时间为：2018-10-18 14:41:56]]>
            </line>
            <line>
              <![CDATA[  【14时41分56秒 执行操作】 今天星期：thu]]>
            </line>
            <line>
              <![CDATA[  【14时41分58秒 执行操作】 添加时间条件NoWorkday:当前时间不是上班时间]]>
            </line>
            <line>
              <![CDATA[  【14时42分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【14时42分05秒 执行操作】修改NoWorkday：取消勾选当前的星期]]>
            </line>
            <line>
              <![CDATA[  【14时42分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时42分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时42分14秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时42分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_addTime1_noWorkday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="86" started-at="2018-10-18T14:42:29Z" finished-at="2018-10-18T14:42:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G5_addTime2_noHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G5_addTime2_noHoliday" duration-ms="69189" started-at="2018-10-18T14:42:29Z" finished-at="2018-10-18T14:43:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时42分29秒 执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时42分29秒 执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时42分33秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【14时42分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【14时42分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【14时42分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时42分40秒 执行操作】deletes 删除所有Holiday: 1]]>
            </line>
            <line>
              <![CDATA[  【14时42分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时42分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【14时42分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时42分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时43分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时43分25秒 执行操作】deleting 删除所有Holiday: 0]]>
            </line>
            <line>
              <![CDATA[  【14时43分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时43分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【14时43分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('holiday').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- G5_addTime2_noHoliday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T14:43:38Z" finished-at="2018-10-18T14:43:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G6_checkPriority_NoHoliday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G6_checkPriority_NoHoliday" duration-ms="31961" started-at="2018-10-18T14:43:38Z" finished-at="2018-10-18T14:44:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时43分38秒 执行操作】 2001拨打99999，预期呼入成功，分机1100接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1100状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时43分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时44分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G6_checkPriority_NoHoliday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="63" started-at="2018-10-18T14:44:10Z" finished-at="2018-10-18T14:44:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G7_checkPriority_NoWorkday()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G7_checkPriority_NoWorkday" duration-ms="98507" started-at="2018-10-18T14:44:10Z" finished-at="2018-10-18T14:45:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时44分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时44分47秒 执行操作】修改InRoute10_Conference呼入路由:编辑workday当前时间不是上班时间]]>
            </line>
            <line>
              <![CDATA[  【14时44分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时44分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时44分56秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时44分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时45分03秒 执行操作】Extjs： return  Ext.getCmp('combo-8358').getStore().findRecord('name', "NoWorkday", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时45分04秒 执行操作】Extjs： Ext.getCmp('combo-8358').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【14时45分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时45分20秒 执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时45分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时45分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时45分48秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G7_checkPriority_NoWorkday -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T14:45:49Z" finished-at="2018-10-18T14:45:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G8_timeDelay()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G8_timeDelay" duration-ms="485290" started-at="2018-10-18T14:45:49Z" finished-at="2018-10-18T14:53:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.G8_timeDelay(InboundRoutes.java:1392)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时45分49秒 执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[  【14时45分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时45分55秒 执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[  【14时46分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时46分00秒 执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[  【14时46分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时46分06秒 执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[  【14时46分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时46分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时46分15秒 执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【14时46分17秒 执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【14时46分19秒 执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【14时46分21秒 执行操作】 辅助设备2注册分机2005]]>
            </line>
            <line>
              <![CDATA[  【14时46分23秒 执行操作】 辅助设备3注册分机4000]]>
            </line>
            <line>
              <![CDATA[  【14时46分25秒 执行操作】 辅助设备3注册分机4001]]>
            </line>
            <line>
              <![CDATA[  【14时46分28秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时46分30秒 执行操作】 添加时间条件threeMinuteWork:三分钟后为上班时间]]>
            </line>
            <line>
              <![CDATA[  【14时46分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【14时46分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时46分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分14秒 执行操作】修改InRoute10_Conference呼入路由:新增threeMinuteWork]]>
            </line>
            <line>
              <![CDATA[  【14时47分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时47分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时47分23秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时47分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分32秒 执行操作】Extjs： return  Ext.getCmp('combo-8617').getStore().findRecord('name', "threeMinuteWork", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时47分33秒 执行操作】Extjs： Ext.getCmp('combo-8617').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【14时47分36秒 执行操作】Extjs： Ext.getCmp('combo-8618').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【14时47分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时47分51秒 执行操作】 2001拨打99999，预期呼入成功，分机1000接听]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()分机1000.jpg" target="_blank">Error: G8_timeDelay()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【14时48分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时48分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时51分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时51分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时52分12秒 执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()响铃组.jpg" target="_blank">Error: G8_timeDelay()响铃组</a>]]>
            </line>
            <line>
              <![CDATA[  【14时52分40秒 执行操作】1100的状态：0]]>
            </line>
            <line>
              <![CDATA[  【14时52分51秒 执行操作】1000的状态0]]>
            </line>
            <line>
              <![CDATA[  【14时53分02秒 执行操作】1105的状态0]]>
            </line>
            <line>
              <![CDATA[  【14时53分02秒 执行操作】Answer Call  8  1105]]>
            </line>
            <line>
              <![CDATA[  【14时53分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时53分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时53分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时53分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【14时53分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G8_timeDelay()分机1105.jpg" target="_blank">Error: G8_timeDelay()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【14时53分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时53分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时53分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G8_timeDelay -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4239" started-at="2018-10-18T14:53:54Z" finished-at="2018-10-18T14:53:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时53分54秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时53分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时53分56秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时53分56秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时53分58秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时53分58秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_timeOrder1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G9_timeOrder1" duration-ms="71498" started-at="2018-10-18T14:53:58Z" finished-at="2018-10-18T14:55:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时53分58秒 执行操作】修改InRoute10_Conference呼入路由目的地]]>
            </line>
            <line>
              <![CDATA[  【14时53分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时54分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时54分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时54分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时54分14秒 执行操作】Extjs： return  Ext.getCmp('combo-8927').getStore().findRecord('name', "workday_24hour", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时54分15秒 执行操作】Extjs： Ext.getCmp('combo-8927').setValue('2')]]>
            </line>
            <line>
              <![CDATA[  【14时54分18秒 执行操作】Extjs： Ext.getCmp('combo-8928').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【14时54分21秒 执行操作】Extjs： return  Ext.getCmp('combo-8930').getStore().findRecord('name', "workday2_24hour", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时54分22秒 执行操作】Extjs： Ext.getCmp('combo-8930').setValue('3')]]>
            </line>
            <line>
              <![CDATA[  【14时54分25秒 执行操作】Extjs： Ext.getCmp('combo-8931').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【14时54分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时54分41秒 执行操作】 2001拨打99999，预期呼入成功，IVR6500接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时54分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时55分09秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="72" started-at="2018-10-18T14:55:10Z" finished-at="2018-10-18T14:55:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G9_timeOrder2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G9_timeOrder2" duration-ms="106097" started-at="2018-10-18T14:55:10Z" finished-at="2018-10-18T14:56:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时55分11秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时55分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时55分51秒 执行操作】修改InRoute10_Conference呼入路由顺序]]>
            </line>
            <line>
              <![CDATA[  【14时55分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时55分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时55分59秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时56分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时56分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【14时56分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时56分27秒 执行操作】 2001拨打99999，预期呼入成功，Conference6400接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【14时56分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时56分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【14时56分55秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T14:56:56Z" finished-at="2018-10-18T14:56:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="G9_timeOrder3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="G9_timeOrder3" duration-ms="124910" started-at="2018-10-18T14:56:56Z" finished-at="2018-10-18T14:59:01Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.G9_timeOrder3(InboundRoutes.java:1481)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【14时56分56秒 执行操作】修改InRoute10_Conference呼入路由顺序]]>
            </line>
            <line>
              <![CDATA[  【14时56分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时56分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时57分04秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时57分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时57分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【14时57分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时57分32秒 执行操作】 2001拨打99999，预期呼入成功，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\G9_timeOrder3()响铃组.jpg" target="_blank">Error: G9_timeOrder3()响铃组</a>]]>
            </line>
            <line>
              <![CDATA[  【14时58分01秒 执行操作】1100的状态：0]]>
            </line>
            <line>
              <![CDATA[  【14时58分12秒 执行操作】1000的状态0]]>
            </line>
            <line>
              <![CDATA[  【14时58分23秒 执行操作】1105的状态0]]>
            </line>
            <line>
              <![CDATA[  【14时58分23秒 执行操作】Answer Call  8  1105]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【14时58分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时58分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【14时59分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G9_timeOrder3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4253" started-at="2018-10-18T14:59:01Z" finished-at="2018-10-18T14:59:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时59分01秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时59分02秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时59分03秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【14时59分03秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【14时59分04秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时59分05秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_FeatureCode1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H1_FeatureCode1" duration-ms="25726" started-at="2018-10-18T14:59:05Z" finished-at="2018-10-18T14:59:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时59分07秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时59分07秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
            <line>
              <![CDATA[  【14时59分17秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
            </line>
            <line>
              <![CDATA[  【14时59分20秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【14时59分21秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_FeatureCode1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="57" started-at="2018-10-18T14:59:31Z" finished-at="2018-10-18T14:59:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_FeatureCode2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H1_FeatureCode2" duration-ms="39827" started-at="2018-10-18T14:59:31Z" finished-at="2018-10-18T15:00:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【14时59分32秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【14时59分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时59分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时59分41秒 执行操作】检查时间特征码+修改InRoute10_Conference呼入路由：将workday_24hour改为NoWorkday]]>
            </line>
            <line>
              <![CDATA[  【14时59分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【14时59分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时59分49秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【14时59分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【14时59分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时59分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【14时59分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时00分01秒 执行操作】Extjs： return  Ext.getCmp('combo-10413').getStore().findRecord('name', "NoWorkday", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时00分02秒 执行操作】Extjs： Ext.getCmp('combo-10413').setValue('4')]]>
            </line>
            <line>
              <![CDATA[    Pass:  特征码生成正确]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_FeatureCode2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T15:00:11Z" finished-at="2018-10-18T15:00:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H1_FeatureCode3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H1_FeatureCode3" duration-ms="18161" started-at="2018-10-18T15:00:11Z" finished-at="2018-10-18T15:00:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时00分11秒 执行操作】检查时间特征码]]>
            </line>
            <line>
              <![CDATA[  【15时00分17秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时00分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时00分22秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【15时00分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时00分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('st-ir-name').up('inrouter-edit').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[4].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass:  特征码生成正确]]>
            </line>
          </reporter-output>
        </test-method> <!-- H1_FeatureCode3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T15:00:29Z" finished-at="2018-10-18T15:00:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H2_checkFeatureCode1" duration-ms="53921" started-at="2018-10-18T15:00:29Z" finished-at="2018-10-18T15:01:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时00分29秒 执行操作】 分机1000拨打特征码*8803强制启用非工作时间]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时00分54秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到ivr]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时01分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时01分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时01分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="68" started-at="2018-10-18T15:01:23Z" finished-at="2018-10-18T15:01:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H2_checkFeatureCode2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H2_checkFeatureCode2" duration-ms="57591" started-at="2018-10-18T15:01:23Z" finished-at="2018-10-18T15:02:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时01分23秒 执行操作】 分机1000拨打特征码*8802强制启用工作时间]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时01分48秒 执行操作】 建立通话验证特征码启用生效：3001拨打3000通过sip外线呼入，预期呼入到conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时02分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时02分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时02分20秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="2092" started-at="2018-10-18T15:02:20Z" finished-at="2018-10-18T15:02:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时02分21秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【15时02分22秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时02分23秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="H2_checkFeatureCode3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H2_checkFeatureCode3" duration-ms="127386" started-at="2018-10-18T15:02:23Z" finished-at="2018-10-18T15:04:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.H2_checkFeatureCode3(InboundRoutes.java:1670)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时02分23秒 执行操作】 分机1000拨打特征码*8800重置]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时02分48秒 执行操作】 2001拨打99999，预期呼入到响铃组，分机1105接听]]>
            </line>
            <line>
              <![CDATA[    Pass:  状态检测分机1100、1000、1105未同时响铃]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H2_checkFeatureCode4()响铃组.jpg" target="_blank">Error: H2_checkFeatureCode4()响铃组</a>]]>
            </line>
            <line>
              <![CDATA[  【15时03分16秒 执行操作】1100的状态：0]]>
            </line>
            <line>
              <![CDATA[  【15时03分27秒 执行操作】1000的状态4]]>
            </line>
            <line>
              <![CDATA[  【15时03分38秒 执行操作】1105的状态0]]>
            </line>
            <line>
              <![CDATA[  【15时03分38秒 执行操作】Answer Call  8  1105]]>
            </line>
            <line>
              <![CDATA[  【15时03分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时03分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时03分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时03分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时03分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\H2_checkFeatureCode4()分机1105.jpg" target="_blank">Error: H2_checkFeatureCode4()调试</a>]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时04分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时04分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时04分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1105 [6200(1105)] 实际：6200】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- H2_checkFeatureCode3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="4226" started-at="2018-10-18T15:04:30Z" finished-at="2018-10-18T15:04:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时04分30秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【15时04分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时04分32秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
            <line>
              <![CDATA[  【15时04分32秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【15时04分34秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时04分34秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_editDestination1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H3_editDestination1" duration-ms="26280" started-at="2018-10-18T15:04:34Z" finished-at="2018-10-18T15:05:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时04分36秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时04分36秒 执行操作】 设置分机1000具有拨打时间特征码的权限]]>
            </line>
            <line>
              <![CDATA[  【15时04分47秒 执行操作】Extjs： Ext.getCmp('st-feature-enbforcetime').setValue(true)]]>
            </line>
            <line>
              <![CDATA[  【15时04分50秒 执行操作】Extjs： return  Ext.getCmp('st-feature-extenspermission').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时04分51秒 执行操作】Extjs： Ext.getCmp('st-feature-extenspermission').setValue('49')]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_editDestination1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="95" started-at="2018-10-18T15:05:00Z" finished-at="2018-10-18T15:05:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H3_editDestination2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="H3_editDestination2" duration-ms="51320" started-at="2018-10-18T15:05:01Z" finished-at="2018-10-18T15:05:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时05分01秒 执行操作】修改TimeCondition的目的地]]>
            </line>
            <line>
              <![CDATA[  【15时05分02秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时05分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时05分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时05分13秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时05分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时05分21秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时05分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时05分30秒 执行操作】Extjs： Ext.getCmp('combo-11575').setValue('d')]]>
            </line>
            <line>
              <![CDATA[  【15时05分34秒 执行操作】Extjs： Ext.getCmp('combo-11578').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【15时05分37秒 执行操作】Extjs： Ext.getCmp('combo-11586').setValue('o')]]>
            </line>
            <line>
              <![CDATA[  【15时05分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- H3_editDestination2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="73" started-at="2018-10-18T15:05:52Z" finished-at="2018-10-18T15:05:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I1_Disa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I1_Disa" duration-ms="53745" started-at="2018-10-18T15:05:52Z" finished-at="2018-10-18T15:06:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时05分52秒 执行操作】 2001拨打99999通过SPS外线呼入，进入DISA，拨13001通过SIP1呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时06分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时06分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时06分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- I1_Disa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="81" started-at="2018-10-18T15:06:46Z" finished-at="2018-10-18T15:06:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I2_callBack()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I2_callBack" duration-ms="40810" started-at="2018-10-18T15:06:46Z" finished-at="2018-10-18T15:07:27Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预期2000会响铃 【预期：2 实际：4】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预期2000会响铃 【预期：2 实际：4】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:429)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.I2_callBack(InboundRoutes.java:1752)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时06分46秒 执行操作】 分机1000拨打特征码*802]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时06分59秒 执行操作】 2000拨打99999通过sps外线呼入，等待2秒挂断通话]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预期2000会响铃 【预期：2 实际：4】.jpg" target="_blank">Error: 预期2000会响铃 【预期：2 实际：4】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I2_callBack -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T15:07:27Z" finished-at="2018-10-18T15:07:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I3_FxsExtension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I3_FxsExtension" duration-ms="25062" started-at="2018-10-18T15:07:27Z" finished-at="2018-10-18T15:07:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时07分27秒 执行操作】 分机1000拨打特征码*805]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
          </reporter-output>
        </test-method> <!-- I3_FxsExtension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="66" started-at="2018-10-18T15:07:52Z" finished-at="2018-10-18T15:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I4_timecondition_outbound_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I4_timecondition_outbound_sip" duration-ms="61917" started-at="2018-10-18T15:07:52Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时07分52秒 执行操作】 分机1000拨打特征码*803]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时08分05秒 执行操作】 2001拨打9913001通过SPS外线呼入转sip呼出]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机3001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时08分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时08分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时08分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- I4_timecondition_outbound_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="65" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I5_timecondition_outbound_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I5_timecondition_outbound_iax" duration-ms="0" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I5_timecondition_outbound_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I6_timecondition_outbound_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I6_timecondition_outbound_spx" duration-ms="0" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I6_timecondition_outbound_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I7_timecondition_outbound_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I7_timecondition_outbound_bri" duration-ms="1" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I7_timecondition_outbound_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:08:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="I8_timecondition_outbound_account()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I8_timecondition_outbound_account" duration-ms="74847" started-at="2018-10-18T15:08:54Z" finished-at="2018-10-18T15:10:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR_Status检测 【预期：Answered 实际：No Answer】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR_Status检测 【预期：Answered 实际：No Answer】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes.I8_timecondition_outbound_account(InboundRoutes.java:1957)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时08分54秒 执行操作】修改第三时间条件目的地到outbound_account]]>
            </line>
            <line>
              <![CDATA[  【15时08分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时08分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时09分02秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时09分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时09分10秒 执行操作】Extjs： return  Ext.getCmp('combo-11846').getStore().findRecord('name', "OutRoute9_account", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时09分11秒 执行操作】Extjs： Ext.getCmp('combo-11846').setValue('13')]]>
            </line>
            <line>
              <![CDATA[  【15时09分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时09分26秒 执行操作】 2001拨打9991111通过sps外线呼入转account外线到分机4000，分机接听]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机4000状态为TALKING，实际状态为-1]]>
            </line>
            <line>
              <![CDATA[  【15时10分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时10分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时10分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时10分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR_Status检测 【预期：Answered 实际：No Answer】.jpg" target="_blank">Error: CDR_Status检测 【预期：Answered 实际：No Answer】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I8_timecondition_outbound_account -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="2157" started-at="2018-10-18T15:10:09Z" finished-at="2018-10-18T15:10:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时10分09秒 执行操作】admin角色的cdr页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【15时10分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时10分11秒 执行操作】admin角色的cdr页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T15:10:11Z" finished-at="2018-10-18T15:10:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I8_timecondition_outbound_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I8_timecondition_outbound_e1" duration-ms="0" started-at="2018-10-18T15:10:11Z" finished-at="2018-10-18T15:10:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- I8_timecondition_outbound_e1 -->
        <test-method status="PASS" signature="I9_timecondition_extensionRange()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="I9_timecondition_extensionRange" duration-ms="132558" started-at="2018-10-18T15:10:11Z" finished-at="2018-10-18T15:12:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时10分11秒 执行操作】修改第三时间条件目的地到ExtensionRange]]>
            </line>
            <line>
              <![CDATA[  【15时10分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时10分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时10分19秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时10分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时10分27秒 执行操作】Extjs： Ext.getCmp('combo-12005').setValue('E')]]>
            </line>
            <line>
              <![CDATA[  【15时10分30秒 执行操作】Extjs： Ext.getCmp('combo-12006').setValue('1100-1105')]]>
            </line>
            <line>
              <![CDATA[  【15时10分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时10分46秒 执行操作】 2001拨打995503302通过sps外线呼入到分机1101]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1101状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时11分22秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时11分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时11分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时11分35秒 执行操作】 2001拨打995503306通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时12分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时12分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时12分23秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- I9_timecondition_extensionRange -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="92" started-at="2018-10-18T15:12:23Z" finished-at="2018-10-18T15:12:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J1_disTimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="J1_disTimeCondition" duration-ms="61270" started-at="2018-10-18T15:12:23Z" finished-at="2018-10-18T15:13:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时12分23秒 执行操作】取消勾选TimeConditon]]>
            </line>
            <line>
              <![CDATA[  【15时12分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时12分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时12分32秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时12分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时12分37秒 执行操作】Extjs： Ext.getCmp('st-ir-enabletimecondition').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【15时12分43秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时12分53秒 执行操作】 2001拨打995503306通过sps外线呼入到conference]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时13分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时13分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时13分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- J1_disTimeCondition -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="66" started-at="2018-10-18T15:13:25Z" finished-at="2018-10-18T15:13:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J2_deleteConference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="J2_deleteConference" duration-ms="18437" started-at="2018-10-18T15:13:25Z" finished-at="2018-10-18T15:13:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时13分26秒 执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[  【15时13分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时13分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时13分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除全部的Conference-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- J2_deleteConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T15:13:43Z" finished-at="2018-10-18T15:13:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J3_checkConference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="J3_checkConference" duration-ms="11738" started-at="2018-10-18T15:13:43Z" finished-at="2018-10-18T15:13:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时13分43秒 执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时13分53秒 执行操作】 2001拨打99999通过sps外线呼入到conference,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- J3_checkConference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T15:13:55Z" finished-at="2018-10-18T15:13:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="J4_backup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="J4_backup" duration-ms="41330" started-at="2018-10-18T15:13:55Z" finished-at="2018-10-18T15:14:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时14分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时14分03秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分04秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分06秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分22秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[4].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【15时14分34秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【15时14分36秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- J4_backup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="68" started-at="2018-10-18T15:14:36Z" finished-at="2018-10-18T15:14:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K1_deletePartRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="K1_deletePartRoute_no" duration-ms="44692" started-at="2018-10-18T15:14:36Z" finished-at="2018-10-18T15:15:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时14分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时14分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时14分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时14分45秒 执行操作】 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
            <line>
              <![CDATA[  【15时14分46秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分46秒 执行操作】期望值row1:13]]>
            </line>
            <line>
              <![CDATA[  【15时14分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时14分56秒 执行操作】要取消勾选的row2:6]]>
            </line>
            <line>
              <![CDATA[  【15时14分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时14分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[3].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[4].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[6].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时15分09秒 执行操作】要取消勾选的row3:8]]>
            </line>
            <line>
              <![CDATA[  【15时15分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时15分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[5].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时15分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[7].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时15分19秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时15分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K1_deletePartRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-10-18T15:15:21Z" finished-at="2018-10-18T15:15:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K2_deletePartRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="K2_deletePartRoute_yes" duration-ms="13430" started-at="2018-10-18T15:15:21Z" finished-at="2018-10-18T15:15:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时15分21秒 执行操作】 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
            <line>
              <![CDATA[  【15时15分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时15分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选，再取消某条的勾选后-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K2_deletePartRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-10-18T15:15:35Z" finished-at="2018-10-18T15:15:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K3_deleteAllRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="K3_deleteAllRoute_no" duration-ms="9796" started-at="2018-10-18T15:15:35Z" finished-at="2018-10-18T15:15:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时15分35秒 执行操作】 全部勾选-取消删除]]>
            </line>
            <line>
              <![CDATA[  【15时15分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时15分39秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时15分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时15分44秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K3_deleteAllRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="53" started-at="2018-10-18T15:15:44Z" finished-at="2018-10-18T15:15:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="K4_deleteAllRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="K4_deleteAllRoute_yes" duration-ms="13308" started-at="2018-10-18T15:15:45Z" finished-at="2018-10-18T15:15:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时15分45秒 执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[  【15时15分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时15分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- K4_deleteAllRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="57" started-at="2018-10-18T15:15:58Z" finished-at="2018-10-18T15:15:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L1_import()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="L1_import" duration-ms="16916" started-at="2018-10-18T15:15:58Z" finished-at="2018-10-18T15:16:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时16分00秒 执行操作】F:\MyProject\SwebTest\exportFile\InboundRoute.csv]]>
            </line>
          </reporter-output>
        </test-method> <!-- L1_import -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T15:16:15Z" finished-at="2018-10-18T15:16:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L2_checkDIDPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="L2_checkDIDPriority1" duration-ms="46898" started-at="2018-10-18T15:16:15Z" finished-at="2018-10-18T15:17:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时16分15秒 执行操作】 2001拨打9992999]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时16分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时16分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时16分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时16分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时16分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时16分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- L2_checkDIDPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T15:17:02Z" finished-at="2018-10-18T15:17:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L3_checkDIDPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="L3_checkDIDPriority2" duration-ms="60984" started-at="2018-10-18T15:17:02Z" finished-at="2018-10-18T15:18:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时17分02秒 执行操作】 2001拨打9982999]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时17分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时17分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时17分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时17分51秒 执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时18分01秒 执行操作】 3000通话状态为：0]]>
            </line>
            <line>
              <![CDATA[  【15时18分01秒 执行操作】 3001拨打3000通过sip外线呼入,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- L3_checkDIDPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="2099" started-at="2018-10-18T15:18:03Z" finished-at="2018-10-18T15:18:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时18分03秒 执行操作】admin角色的PBXMonitor页面未关闭]]>
            </line>
            <line>
              <![CDATA[  【15时18分04秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时18分05秒 执行操作】admin角色的PBXMonitor页面已关闭]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="L4_checkDIDPriority3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="L4_checkDIDPriority3" duration-ms="49043" started-at="2018-10-18T15:18:05Z" finished-at="2018-10-18T15:18:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时18分05秒 执行操作】 2001拨打9991999]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时18分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时18分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时18分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- L4_checkDIDPriority3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="87" started-at="2018-10-18T15:18:54Z" finished-at="2018-10-18T15:18:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M1_deleteOneRoute_no()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="M1_deleteOneRoute_no" duration-ms="19896" started-at="2018-10-18T15:18:54Z" finished-at="2018-10-18T15:19:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时18分54秒 执行操作】 删除单个呼入路由InRoute3——选择no]]>
            </line>
            <line>
              <![CDATA[  【15时18分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时18分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时18分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分01秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时19分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【15时19分11秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时19分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除呼出路由OutboundRoute1-取消删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M1_deleteOneRoute_no -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T15:19:14Z" finished-at="2018-10-18T15:19:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M2_deleteOneRoute_yes()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="M2_deleteOneRoute_yes" duration-ms="28008" started-at="2018-10-18T15:19:14Z" finished-at="2018-10-18T15:19:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时19分14秒 执行操作】 删除单个呼入路由InRoute3——选择yes]]>
            </line>
            <line>
              <![CDATA[  【15时19分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时19分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时19分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[2].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【15时19分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时19分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除单个呼入路由InRoute3——确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- M2_deleteOneRoute_yes -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="65" started-at="2018-10-18T15:19:42Z" finished-at="2018-10-18T15:19:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="M3_editRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="M3_editRoute" duration-ms="56650" started-at="2018-10-18T15:19:42Z" finished-at="2018-10-18T15:20:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时19分42秒 执行操作】修改InRoute1:DID清空，CallerID设置为3.]]>
            </line>
            <line>
              <![CDATA[  【15时19分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时19分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时19分51秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时19分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时19分56秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时19分57秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时19分58秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,19')]]>
            </line>
            <line>
              <![CDATA[  【15时20分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时20分06秒 执行操作】修改InRoute2:DID清空，CallerID设置为X.]]>
            </line>
            <line>
              <![CDATA[  【15时20分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时20分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时20分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时20分16秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('inrouter').id + ' [data-recordindex]')[1].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时20分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时20分21秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时20分22秒 执行操作】Extjs： return  Ext.getCmp('st-ir-trunkinfo').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时20分23秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,19')]]>
            </line>
            <line>
              <![CDATA[  【15时20分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- M3_editRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="81" started-at="2018-10-18T15:20:39Z" finished-at="2018-10-18T15:20:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_checkCallerIDPriority1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="N_checkCallerIDPriority1" duration-ms="45875" started-at="2018-10-18T15:20:39Z" finished-at="2018-10-18T15:21:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时20分39秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时21分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时21分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时21分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_checkCallerIDPriority1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="65" started-at="2018-10-18T15:21:25Z" finished-at="2018-10-18T15:21:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="N_checkCallerIDPriority2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="N_checkCallerIDPriority2" duration-ms="46245" started-at="2018-10-18T15:21:25Z" finished-at="2018-10-18T15:22:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时21分25秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1100状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时21分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时22分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时22分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_checkCallerIDPriority2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T15:22:11Z" finished-at="2018-10-18T15:22:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="O_deleteAllRoute()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="O_deleteAllRoute" duration-ms="16971" started-at="2018-10-18T15:22:11Z" finished-at="2018-10-18T15:22:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时22分11秒 执行操作】 全部勾选-确定删除]]>
            </line>
            <line>
              <![CDATA[  【15时22分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时22分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时22分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 全部勾选-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_deleteAllRoute -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T15:22:28Z" finished-at="2018-10-18T15:22:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P1_checkSPS()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="P1_checkSPS" duration-ms="48944" started-at="2018-10-18T15:22:28Z" finished-at="2018-10-18T15:23:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时22分28秒 执行操作】 2001拨打991105通过sps外线呼入到分机1105]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1105状态为TALKING，实际状态为0]]>
            </line>
            <line>
              <![CDATA[  【15时23分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时23分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时23分16秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- P1_checkSPS -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="64" started-at="2018-10-18T15:23:17Z" finished-at="2018-10-18T15:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T15:23:17Z" finished-at="2018-10-18T15:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="P2_checkSPX()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="P2_checkSPX" duration-ms="0" started-at="2018-10-18T15:23:17Z" finished-at="2018-10-18T15:23:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- P2_checkSPX -->
        <test-method status="PASS" signature="Q_recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="Q_recovery" duration-ms="93610" started-at="2018-10-18T15:23:17Z" finished-at="2018-10-18T15:24:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时23分18秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【15时23分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时23分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时23分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时23分26秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时23分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时23分29秒 执行操作】deletes  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【15时23分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时23分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【15时23分31秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【15时23分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时23分35秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时23分36秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【15时23分37秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【15时23分38秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【15时23分39秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【15时23分40秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【15时23分41秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【15时23分42秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时23分43秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【15时23分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时23分51秒 执行操作】 删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【15时23分51秒 执行操作】删除所有时间条件——Workday]]>
            </line>
            <line>
              <![CDATA[  【15时23分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时23分56秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时23分57秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时24分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时24分03秒 执行操作】deletes 删除所有时间条件——Workday: 4]]>
            </line>
            <line>
              <![CDATA[  【15时24分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时24分07秒 执行操作】Extjs： Ext.getCmp('control-panel').down('timecondition').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时24分09秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时24分49秒 执行操作】deleting 删除所有时间条件——Workday: 0]]>
            </line>
            <line>
              <![CDATA[  【15时24分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时24分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有时间条件——Workday]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="58" started-at="2018-10-18T15:24:51Z" finished-at="2018-10-18T15:24:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="Q_recovery2" duration-ms="27119" started-at="2018-10-18T15:24:51Z" finished-at="2018-10-18T15:25:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时24分51秒 执行操作】 添加时间条件Workday:默认的工作时间]]>
            </line>
            <line>
              <![CDATA[  【15时24分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('timecondition').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时24分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加TimeConditions]]>
            </line>
            <line>
              <![CDATA[  【15时24分58秒 执行操作】 编辑Workday]]>
            </line>
            <line>
              <![CDATA[  【15时24分59秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('timecondition').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时25分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时25分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('timecondition').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时25分15秒 执行操作】Extjs： return  Ext.query("input[name='starthour']")[1].value = '14']]>
            </line>
            <line>
              <![CDATA[  【15时25分17秒 执行操作】Extjs： return  Ext.query("input[name='endhour']")[1].value = '18']]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T15:25:18Z" finished-at="2018-10-18T15:25:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="Q_recovery3" duration-ms="58490" started-at="2018-10-18T15:25:18Z" finished-at="2018-10-18T15:26:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时25分18秒 执行操作】 删除所有时间条件——Holiday]]>
            </line>
            <line>
              <![CDATA[  【15时25分18秒 执行操作】删除所有Holiday]]>
            </line>
            <line>
              <![CDATA[  【15时25分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时25分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时25分24秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时25分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时25分29秒 执行操作】deletes 删除所有Holiday: 1]]>
            </line>
            <line>
              <![CDATA[  【15时25分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时25分34秒 执行操作】Extjs： Ext.getCmp('control-panel').down('holiday').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时25分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分37秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分51秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分52秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分53秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时25分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('holiday').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分14秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时26分14秒 执行操作】deleting 删除所有Holiday: 0]]>
            </line>
            <line>
              <![CDATA[  【15时26分15秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时26分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('holiday').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除所有Holiday]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-10-18T15:26:16Z" finished-at="2018-10-18T15:26:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="Q_recovery4" duration-ms="23958" started-at="2018-10-18T15:26:16Z" finished-at="2018-10-18T15:26:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时26分17秒 执行操作】 删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【15时26分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时26分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时26分23秒 执行操作】Extjs： Ext.getCmp('control-panel').down('conference').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时26分25秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时26分28秒 执行操作】deletes  删除所有Conference: 0]]>
            </line>
            <line>
              <![CDATA[  【15时26分29秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时26分30秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Conference]]>
            </line>
            <line>
              <![CDATA[  【15时26分30秒 执行操作】 添加Conference1:6400]]>
            </line>
            <line>
              <![CDATA[  【15时26分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('conference').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时26分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('conference').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时26分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('conference').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T15:26:40Z" finished-at="2018-10-18T15:26:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="Q_recovery5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="Q_recovery5" duration-ms="30477" started-at="2018-10-18T15:26:40Z" finished-at="2018-10-18T15:27:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时26分40秒 执行操作】 取消分机1000具有拨打时间特征码的权限]]>
            </line>
            <line>
              <![CDATA[  【15时26分42秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_recovery5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterMethod" is-config="true" duration-ms="75" started-at="2018-10-18T15:27:11Z" finished-at="2018-10-18T15:27:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes@4f6be2]" name="AfterClass" is-config="true" duration-ms="12928" started-at="2018-10-18T15:27:11Z" finished-at="2018-10-18T15:27:24Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 15时27分11秒执行完毕：======  InboundRoutes  ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.InboundRoutes -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="BeforeClass" is-config="true" duration-ms="35968" started-at="2018-10-18T13:35:05Z" finished-at="2018-10-18T13:35:41Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 13时35分05秒开始执行：=======  Callback  =======]]>
            </line>
            <line>
              <![CDATA[  【13时35分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时35分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时35分33秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时35分36秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【13时35分38秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【13时35分40秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A0_Init1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A0_Init1" duration-ms="0" started-at="2018-10-18T13:35:41Z" finished-at="2018-10-18T13:35:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A0_Init1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T13:35:41Z" finished-at="2018-10-18T13:35:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A0_Init2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A0_Init2" duration-ms="52104" started-at="2018-10-18T13:35:41Z" finished-at="2018-10-18T13:36:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时35分41秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【13时35分41秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【13时35分41秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【13时35分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时35分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时36分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A0_Init2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T13:36:33Z" finished-at="2018-10-18T13:36:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_Init()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A1_Init" duration-ms="33738" started-at="2018-10-18T13:36:33Z" finished-at="2018-10-18T13:37:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时36分39秒 执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【13时36分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时36分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时36分45秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时36分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时36分51秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时36分51秒 执行操作】deletes  删除所有Callback: 1]]>
            </line>
            <line>
              <![CDATA[  【13时36分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时36分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时36分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时37分04秒 执行操作】deleting  删除所有Callback: 0]]>
            </line>
            <line>
              <![CDATA[  【13时37分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时37分06秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_Init -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T13:37:06Z" finished-at="2018-10-18T13:37:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_add_trunks()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A2_add_trunks" duration-ms="39964" started-at="2018-10-18T13:37:06Z" finished-at="2018-10-18T13:37:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时37分06秒 执行操作】 创建Callback_SPS，Through：SPS1外线，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【13时37分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分12秒 执行操作】Extjs： return  Ext.getCmp('st-callback-callbacktrunk').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时37分13秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('19')]]>
            </line>
            <line>
              <![CDATA[  【13时37分17秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时37分18秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时37分19秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时37分25秒 执行操作】 创建Callback_SIP，Through：SIP1外线，Destination：1100]]>
            </line>
            <line>
              <![CDATA[  【13时37分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分31秒 执行操作】Extjs： return  Ext.getCmp('st-callback-callbacktrunk').getStore().findRecord('trunkname', "SIP1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时37分32秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('15')]]>
            </line>
            <line>
              <![CDATA[  【13时37分36秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时37分37秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时37分38秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('50')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_add_trunks -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T13:37:46Z" finished-at="2018-10-18T13:37:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="9123" started-at="2018-10-18T13:37:47Z" data-provider="add" finished-at="2018-10-18T13:37:56Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=, DID1=5503301, Through=Callback from where the call come in, Delay=5, Name=Callback1_Hangup, Des1=h}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时37分47秒 执行操作】添加Callback：Callback1_Hangup，Destination：]]>
            </line>
            <line>
              <![CDATA[  【13时37分48秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分50秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时37分51秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('h')]]>
            </line>
            <line>
              <![CDATA[  【13时37分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:37:56Z" finished-at="2018-10-18T13:37:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14154" started-at="2018-10-18T13:37:56Z" data-provider="add" finished-at="2018-10-18T13:38:10Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=1000, DID1=, Through=Callback from where the call come in, Delay=6, Name=Callback2_Extension, Des1=e}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时37分56秒 执行操作】添加Callback：Callback2_Extension，Destination：1000]]>
            </line>
            <line>
              <![CDATA[  【13时37分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时37分59秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时38分01秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时38分02秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时38分03秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时38分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T13:38:10Z" finished-at="2018-10-18T13:38:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14338" started-at="2018-10-18T13:38:10Z" data-provider="add" finished-at="2018-10-18T13:38:24Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=456, Des2=1105, DID1=5503303, Through=Callback from where the call come in, Delay=7, Name=Callback3_Voicemail, Des1=v}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时38分10秒 执行操作】添加Callback：Callback3_Voicemail，Destination：1105]]>
            </line>
            <line>
              <![CDATA[  【13时38分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时38分14秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时38分15秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('v')]]>
            </line>
            <line>
              <![CDATA[  【13时38分16秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时38分17秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('55')]]>
            </line>
            <line>
              <![CDATA[  【13时38分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T13:38:24Z" finished-at="2018-10-18T13:38:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14119" started-at="2018-10-18T13:38:24Z" data-provider="add" finished-at="2018-10-18T13:38:38Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=2, Prepend=123, Des2=IVR1, DID1=5503304, Through=Callback from where the call come in, Delay=8, Name=Callback4_IVR, Des1=i}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时38分24秒 执行操作】添加Callback：Callback4_IVR，Destination：IVR1]]>
            </line>
            <line>
              <![CDATA[  【13时38分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时38分28秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时38分29秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('i')]]>
            </line>
            <line>
              <![CDATA[  【13时38分30秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "IVR1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时38分31秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('23')]]>
            </line>
            <line>
              <![CDATA[  【13时38分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T13:38:38Z" finished-at="2018-10-18T13:38:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14302" started-at="2018-10-18T13:38:38Z" data-provider="add" finished-at="2018-10-18T13:38:53Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=1, Prepend=, Des2=RingGroup1, DID1=5503305, Through=Callback from where the call come in, Delay=9, Name=Callback5_RingGroup, Des1=r}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时38分38秒 执行操作】添加Callback：Callback5_RingGroup，Destination：RingGroup1]]>
            </line>
            <line>
              <![CDATA[  【13时38分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时38分42秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时38分43秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('r')]]>
            </line>
            <line>
              <![CDATA[  【13时38分44秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "RingGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时38分45秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('5')]]>
            </line>
            <line>
              <![CDATA[  【13时38分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T13:38:53Z" finished-at="2018-10-18T13:38:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14222" started-at="2018-10-18T13:38:53Z" data-provider="add" finished-at="2018-10-18T13:39:07Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=Queue1, DID1=5503306, Through=Callback from where the call come in, Delay=10, Name=Callback6_Queue, Des1=q}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时38分53秒 执行操作】添加Callback：Callback6_Queue，Destination：Queue1]]>
            </line>
            <line>
              <![CDATA[  【13时38分54秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时38分56秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时38分58秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('q')]]>
            </line>
            <line>
              <![CDATA[  【13时38分59秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "Queue1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时39分00秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【13时39分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T13:39:07Z" finished-at="2018-10-18T13:39:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14576" started-at="2018-10-18T13:39:07Z" data-provider="add" finished-at="2018-10-18T13:39:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=4, Prepend=1234567890, Des2=Conference1, DID1=5503307, Through=Callback from where the call come in, Delay=11, Name=Callback7_Conference, Des1=c}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时39分07秒 执行操作】添加Callback：Callback7_Conference，Destination：Conference1]]>
            </line>
            <line>
              <![CDATA[  【13时39分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分11秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时39分12秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('c')]]>
            </line>
            <line>
              <![CDATA[  【13时39分13秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "Conference1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时39分14秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('13')]]>
            </line>
            <line>
              <![CDATA[  【13时39分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T13:39:22Z" finished-at="2018-10-18T13:39:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A3_add_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="A3_add_destination" duration-ms="14315" started-at="2018-10-18T13:39:22Z" data-provider="add" finished-at="2018-10-18T13:39:36Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=DISA1, DID1=5503308, Through=Callback from where the call come in, Delay=12, Name=Callback8_DISA, Des1=d}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时39分22秒 执行操作】添加Callback：Callback8_DISA，Destination：DISA1]]>
            </line>
            <line>
              <![CDATA[  【13时39分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分25秒 执行操作】Extjs： Ext.getCmp('st-callback-callbacktrunk').setValue('0')]]>
            </line>
            <line>
              <![CDATA[  【13时39分27秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('d')]]>
            </line>
            <line>
              <![CDATA[  【13时39分28秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('name', "DISA1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时39分29秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('4')]]>
            </line>
            <line>
              <![CDATA[  【13时39分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- A3_add_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T13:39:36Z" finished-at="2018-10-18T13:39:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_add_InRoute_trunk()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B1_add_InRoute_trunk" duration-ms="102000" started-at="2018-10-18T13:39:36Z" finished-at="2018-10-18T13:41:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时39分38秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时39分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时39分43秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时39分44秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时39分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分49秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时39分49秒 执行操作】deletes  删除所有呼入路由: 1]]>
            </line>
            <line>
              <![CDATA[  【13时39分50秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时39分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时39分55秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分56秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分57秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分58秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时39分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分00秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分02秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分04秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分07秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分08秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分10秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分11秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分12秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分13秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分19秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时40分35秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时40分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时40分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时40分37秒 执行操作】 添加呼入路由：Callback_SPS，DID：3000，Destination：Callback_SPS]]>
            </line>
            <line>
              <![CDATA[  【13时40分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分41秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时40分42秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时40分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时40分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时40分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时40分46秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时40分47秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时40分48秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback_SPS", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时40分49秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('26')]]>
            </line>
            <line>
              <![CDATA[  【13时40分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时40分57秒 执行操作】 添加呼入路由：Callback_SIP，DID：6603302，Destination：Callback_SIP]]>
            </line>
            <line>
              <![CDATA[  【13时40分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时41分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时41分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分07秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时41分08秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时41分09秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback_SIP", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时41分10秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('27')]]>
            </line>
            <line>
              <![CDATA[  【13时41分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_add_InRoute_trunk -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="73" started-at="2018-10-18T13:41:18Z" finished-at="2018-10-18T13:41:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20616" started-at="2018-10-18T13:41:18Z" data-provider="add" finished-at="2018-10-18T13:41:39Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=, DID1=5503301, Through=Callback from where the call come in, Delay=5, Name=Callback1_Hangup, Des1=h}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时41分18秒 执行操作】添加呼入路由：Callback1_HangupDID：5503301，Destination：Callback1_Hangup]]>
            </line>
            <line>
              <![CDATA[  【13时41分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时41分22秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时41分23秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分27秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时41分28秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时41分29秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback1_Hangup", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时41分30秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('28')]]>
            </line>
            <line>
              <![CDATA[  【13时41分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T13:41:39Z" finished-at="2018-10-18T13:41:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20353" started-at="2018-10-18T13:41:39Z" data-provider="add" finished-at="2018-10-18T13:41:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=1000, DID1=, Through=Callback from where the call come in, Delay=6, Name=Callback2_Extension, Des1=e}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时41分39秒 执行操作】添加呼入路由：Callback2_ExtensionDID：，Destination：Callback2_Extension]]>
            </line>
            <line>
              <![CDATA[  【13时41分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时41分43秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时41分44秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时41分48秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时41分49秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时41分50秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback2_Extension", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时41分51秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('29')]]>
            </line>
            <line>
              <![CDATA[  【13时41分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T13:41:59Z" finished-at="2018-10-18T13:41:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20871" started-at="2018-10-18T13:41:59Z" data-provider="add" finished-at="2018-10-18T13:42:20Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=456, Des2=1105, DID1=5503303, Through=Callback from where the call come in, Delay=7, Name=Callback3_Voicemail, Des1=v}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时41分59秒 执行操作】添加呼入路由：Callback3_VoicemailDID：5503303，Destination：Callback3_Voicemail]]>
            </line>
            <line>
              <![CDATA[  【13时42分01秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时42分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时42分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分09秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时42分10秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时42分11秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback3_Voicemail", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时42分12秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('30')]]>
            </line>
            <line>
              <![CDATA[  【13时42分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:42:20Z" finished-at="2018-10-18T13:42:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20606" started-at="2018-10-18T13:42:20Z" data-provider="add" finished-at="2018-10-18T13:42:41Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=2, Prepend=123, Des2=IVR1, DID1=5503304, Through=Callback from where the call come in, Delay=8, Name=Callback4_IVR, Des1=i}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时42分20秒 执行操作】添加呼入路由：Callback4_IVRDID：5503304，Destination：Callback4_IVR]]>
            </line>
            <line>
              <![CDATA[  【13时42分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时42分24秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时42分25秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分29秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时42分30秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时42分31秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback4_IVR", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时42分32秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('31')]]>
            </line>
            <line>
              <![CDATA[  【13时42分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-10-18T13:42:41Z" finished-at="2018-10-18T13:42:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20699" started-at="2018-10-18T13:42:41Z" data-provider="add" finished-at="2018-10-18T13:43:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=1, Prepend=, Des2=RingGroup1, DID1=5503305, Through=Callback from where the call come in, Delay=9, Name=Callback5_RingGroup, Des1=r}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时42分41秒 执行操作】添加呼入路由：Callback5_RingGroupDID：5503305，Destination：Callback5_RingGroup]]>
            </line>
            <line>
              <![CDATA[  【13时42分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时42分45秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时42分46秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时42分50秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时42分51秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时42分52秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback5_RingGroup", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时42分53秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('32')]]>
            </line>
            <line>
              <![CDATA[  【13时43分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:43:01Z" finished-at="2018-10-18T13:43:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20591" started-at="2018-10-18T13:43:01Z" data-provider="add" finished-at="2018-10-18T13:43:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=Queue1, DID1=5503306, Through=Callback from where the call come in, Delay=10, Name=Callback6_Queue, Des1=q}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时43分01秒 执行操作】添加呼入路由：Callback6_QueueDID：5503306，Destination：Callback6_Queue]]>
            </line>
            <line>
              <![CDATA[  【13时43分03秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时43分06秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时43分07秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分08秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分09秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分10秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分11秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时43分12秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时43分13秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback6_Queue", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时43分14秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('33')]]>
            </line>
            <line>
              <![CDATA[  【13时43分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T13:43:22Z" finished-at="2018-10-18T13:43:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20797" started-at="2018-10-18T13:43:22Z" data-provider="add" finished-at="2018-10-18T13:43:43Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=4, Prepend=1234567890, Des2=Conference1, DID1=5503307, Through=Callback from where the call come in, Delay=11, Name=Callback7_Conference, Des1=c}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时43分22秒 执行操作】添加呼入路由：Callback7_ConferenceDID：5503307，Destination：Callback7_Conference]]>
            </line>
            <line>
              <![CDATA[  【13时43分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时43分26秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时43分27秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分28秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分29秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分30秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分31秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时43分32秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时43分34秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback7_Conference", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时43分35秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('34')]]>
            </line>
            <line>
              <![CDATA[  【13时43分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T13:43:43Z" finished-at="2018-10-18T13:43:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_InRoute_destination(java.util.HashMap)[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B2_add_InRoute_destination" duration-ms="20551" started-at="2018-10-18T13:43:43Z" data-provider="add" finished-at="2018-10-18T13:44:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[{Strip=, Prepend=, Des2=DISA1, DID1=5503308, Through=Callback from where the call come in, Delay=12, Name=Callback8_DISA, Des1=d}]]>
              </value>
            </param>
          </params>
          <reporter-output>
            <line>
              <![CDATA[  【13时43分43秒 执行操作】添加呼入路由：Callback8_DISADID：5503308，Destination：Callback8_DISA]]>
            </line>
            <line>
              <![CDATA[  【13时43分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时43分47秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时43分48秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分49秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分50秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分51秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时43分52秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时43分53秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('C')]]>
            </line>
            <line>
              <![CDATA[  【13时43分54秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('name', "Callback8_DISA", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时43分55秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('35')]]>
            </line>
            <line>
              <![CDATA[  【13时44分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_InRoute_destination -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T13:44:03Z" finished-at="2018-10-18T13:44:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="B3_apply" duration-ms="8091" started-at="2018-10-18T13:44:03Z" finished-at="2018-10-18T13:44:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B3_apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T13:44:11Z" finished-at="2018-10-18T13:44:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_through_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C1_through_sps" duration-ms="79776" started-at="2018-10-18T13:44:11Z" finished-at="2018-10-18T13:45:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时44分11秒 执行操作】 3001拨打3000通过sip外线呼入，预期通过sps回拨，2000分机响铃接听后，分机1000响铃]]>
            </line>
            <line>
              <![CDATA[  【13时44分59秒 执行操作】Answer Call  1  2000]]>
            </line>
            <line>
              <![CDATA[  【13时45分00秒 执行操作】Answer Call  2  1000]]>
            </line>
            <line>
              <![CDATA[  【13时45分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时45分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时45分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时45分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时45分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时45分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时45分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时45分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时45分31秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_through_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T13:45:31Z" finished-at="2018-10-18T13:45:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_through_sip()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C2_through_sip" duration-ms="39745" started-at="2018-10-18T13:45:31Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时45分31秒 执行操作】 2000拨打996603302通过sps外线呼入，预期通过sip回拨，3001分机响铃接听后，分机1100响铃]]>
            </line>
            <line>
              <![CDATA[  【13时45分37秒 执行操作】Answer Call  4  3001]]>
            </line>
            <line>
              <![CDATA[  【13时45分39秒 执行操作】Answer Call  5  1100]]>
            </line>
            <line>
              <![CDATA[  【13时45分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时45分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时46分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时46分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时46分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时46分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时46分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时46分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时46分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_through_sip -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_through_iax()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C3_through_iax" duration-ms="1" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C3_through_iax -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_through_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C4_through_spx" duration-ms="0" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C4_through_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_through_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C5_through_fxo" duration-ms="0" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C5_through_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_through_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C6_through_bri" duration-ms="0" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C6_through_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_through_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C7_through_e1" duration-ms="0" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C7_through_e1 -->
        <test-method status="PASS" signature="C8_through_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="C8_through_gsm" duration-ms="0" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- C8_through_gsm -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_des_hangup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D1_des_hangup" duration-ms="14235" started-at="2018-10-18T13:46:11Z" finished-at="2018-10-18T13:46:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时46分11秒 执行操作】 2000拨打995503301通过sps外线呼入，预期通过sps回拨，回拨Destination：Hangup]]>
            </line>
            <line>
              <![CDATA[  【13时46分17秒 执行操作】Answer Call  7  2000]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_des_hangup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:46:25Z" finished-at="2018-10-18T13:46:25Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_des_extension()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D2_des_extension" duration-ms="41378" started-at="2018-10-18T13:46:25Z" finished-at="2018-10-18T13:47:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时46分25秒 执行操作】 2000拨打999999通过sps外线呼入，预期通过sps回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时46分32秒 执行操作】Answer Call  9  2000]]>
            </line>
            <line>
              <![CDATA[  【13时46分37秒 执行操作】Answer Call  10  1000]]>
            </line>
            <line>
              <![CDATA[  【13时46分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时46分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时46分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_des_extension -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T13:47:07Z" finished-at="2018-10-18T13:47:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_des_ivr()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D3_des_ivr" duration-ms="46419" started-at="2018-10-18T13:47:07Z" finished-at="2018-10-18T13:47:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时47分07秒 执行操作】 2000拨打995503304通过sps外线呼入，预期通过sps回拨，回拨Destination：IVR1，按1到分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时47分16秒 执行操作】Answer Call  12  2000]]>
            </line>
            <line>
              <![CDATA[  【13时47分24秒 执行操作】Answer Call  13  1000]]>
            </line>
            <line>
              <![CDATA[  【13时47分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时47分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时47分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时47分53秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_des_ivr -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T13:47:53Z" finished-at="2018-10-18T13:47:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_des_ringgroup()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D4_des_ringgroup" duration-ms="51182" started-at="2018-10-18T13:47:53Z" finished-at="2018-10-18T13:48:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时47分53秒 执行操作】 2000拨打995503305通过sps外线呼入，预期通过sps外线回拨，回拨Destination：RingGroup1，成员都响铃，1105接听]]>
            </line>
            <line>
              <![CDATA[  【13时48分03秒 执行操作】Answer Call  15  2000]]>
            </line>
            <line>
              <![CDATA[  【13时48分11秒 执行操作】Answer Call  18  1105]]>
            </line>
            <line>
              <![CDATA[  【13时48分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时48分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时48分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时48分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时48分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时48分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时48分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时48分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时48分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_des_ringgroup -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-10-18T13:48:44Z" finished-at="2018-10-18T13:48:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="D5_des_queue()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D5_des_queue" duration-ms="47825" started-at="2018-10-18T13:48:44Z" finished-at="2018-10-18T13:49:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback.D5_des_queue(Callback.java:443)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【13时48分44秒 执行操作】 2000拨打995503306通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Queue1，坐席都响铃，1100接听]]>
            </line>
            <line>
              <![CDATA[  【13时48分56秒 执行操作】Answer Call  20  2000]]>
            </line>
            <line>
              <![CDATA[  【13时49分04秒 执行操作】Answer Call  22  1100]]>
            </line>
            <line>
              <![CDATA[  【13时49分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时49分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时49分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【13时49分27秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时49分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时49分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1100 [6700(1100)] 实际：6700(1100)】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_des_queue -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="2119" started-at="2018-10-18T13:49:32Z" finished-at="2018-10-18T13:49:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时49分34秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_des_conference()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D6_des_conference" duration-ms="38600" started-at="2018-10-18T13:49:34Z" finished-at="2018-10-18T13:50:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时49分34秒 执行操作】 2000拨打995503307通过sps外线呼入，预期通过sps外线回拨，回拨Destination：Conference1]]>
            </line>
            <line>
              <![CDATA[  【13时49分46秒 执行操作】Answer Call  25  2000]]>
            </line>
            <line>
              <![CDATA[  【13时50分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时50分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_des_conference -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:50:13Z" finished-at="2018-10-18T13:50:13Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D7_des_disa()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D7_des_disa" duration-ms="52517" started-at="2018-10-18T13:50:13Z" finished-at="2018-10-18T13:51:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时50分13秒 执行操作】 2000拨打995503308通过sps外线呼入，预期通过sps外线回拨，回拨Destination：DISA1]]>
            </line>
            <line>
              <![CDATA[  【13时50分26秒 执行操作】Answer Call  27  2000]]>
            </line>
            <line>
              <![CDATA[  【13时50分28秒 执行操作】 转入DISA后，2000发送DTMF：13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[  【13时50分37秒 执行操作】Answer Call  28  3001]]>
            </line>
            <line>
              <![CDATA[  【13时50分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时50分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时50分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分05秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D7_des_disa -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T13:51:06Z" finished-at="2018-10-18T13:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T13:51:06Z" finished-at="2018-10-18T13:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D8_des_fxs()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="D8_des_fxs" duration-ms="0" started-at="2018-10-18T13:51:06Z" finished-at="2018-10-18T13:51:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- D8_des_fxs -->
        <test-method status="PASS" signature="E1_sps()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E1_sps" duration-ms="36315" started-at="2018-10-18T13:51:06Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时51分06秒 执行操作】 2000拨打999999通过sps外线呼入，预期通过sps外线回拨，回拨Destination：分机1000]]>
            </line>
            <line>
              <![CDATA[  【13时51分13秒 执行操作】Answer Call  30  2000]]>
            </line>
            <line>
              <![CDATA[  【13时51分16秒 执行操作】Answer Call  31  1000]]>
            </line>
            <line>
              <![CDATA[  【13时51分31秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时51分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【13时51分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_sps -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="13" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E2_spx()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E2_spx" duration-ms="0" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E2_spx -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E3_fxo()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E3_fxo" duration-ms="0" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E3_fxo -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E4_bri()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E4_bri" duration-ms="0" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E4_bri -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E5_e1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E5_e1" duration-ms="0" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E5_e1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E6_gsm()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E6_gsm" duration-ms="0" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:51:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- E6_gsm -->
        <test-method status="PASS" signature="E7_bakckUp()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="E7_bakckUp" duration-ms="39363" started-at="2018-10-18T13:51:42Z" finished-at="2018-10-18T13:52:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时51分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('maintance').down('backupandrestore').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时51分53秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时51分54秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时51分55秒 执行操作】Extjs： return Ext.getCmp('maintance').down('backupandrestore').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时51分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时51分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时51分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时52分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时52分07秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('maintance').down('backupandrestore').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td img')[2].click()]]>
            </line>
            <line>
              <![CDATA[  【13时52分19秒 执行操作】Extjs： Ext.getCmp('mt-br-cdr').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【13时52分21秒 执行操作】Extjs： Ext.get(Ext.query('#maintance_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E7_bakckUp -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="23" started-at="2018-10-18T13:52:21Z" finished-at="2018-10-18T13:52:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="F_delete" duration-ms="47838" started-at="2018-10-18T13:52:21Z" finished-at="2018-10-18T13:53:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时52分22秒 执行操作】 表格删除：Callback7_Conference-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时52分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时52分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时52分26秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时52分32秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时52分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时52分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Callback7_Conference-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时52分39秒 执行操作】 表格删除：Callback7_Conference-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时52分45秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【13时52分50秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时52分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Callback7_Conference-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时52分52秒 执行操作】 删除：Callback5_RingGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时52分53秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时52分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时52分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时52分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【13时52分58秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【13时53分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分04秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Callback5_RingGroup-取消删除]]>
            </line>
            <line>
              <![CDATA[  【13时53分04秒 执行操作】 删除：Callback5_RingGroup-确定删除]]>
            </line>
            <line>
              <![CDATA[  【13时53分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：Callback5_RingGroup-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T13:53:09Z" finished-at="2018-10-18T13:53:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_recovery_callback()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="G1_recovery_callback" duration-ms="49675" started-at="2018-10-18T13:53:09Z" finished-at="2018-10-18T13:53:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时53分09秒 执行操作】 删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【13时53分13秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时53分14秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时53分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时53分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分20秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时53分20秒 执行操作】deletes  删除所有Callback: 8]]>
            </line>
            <line>
              <![CDATA[  【13时53分21秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时53分25秒 执行操作】Extjs： Ext.getCmp('control-panel').down('callback').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时53分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分34秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时53分34秒 执行操作】deleting  删除所有Callback: 0]]>
            </line>
            <line>
              <![CDATA[  【13时53分35秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时53分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有Callback]]>
            </line>
            <line>
              <![CDATA[  【13时53分36秒 执行操作】 创建Callback1，Destination：分机1000，其它默认]]>
            </line>
            <line>
              <![CDATA[  【13时53分48秒 执行操作】Extjs： Ext.getCmp('st-callback-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时53分49秒 执行操作】Extjs： return  Ext.getCmp('st-callback-destination').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时53分50秒 执行操作】Extjs： Ext.getCmp('st-callback-destination').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时53分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('callback').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时53分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('callback').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时53分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('callback').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_recovery_callback -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T13:53:59Z" finished-at="2018-10-18T13:53:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_recovery_inbound()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="G2_recovery_inbound" duration-ms="78559" started-at="2018-10-18T13:53:59Z" finished-at="2018-10-18T13:55:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【13时53分59秒 执行操作】 删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时54分03秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【13时54分04秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【13时54分05秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【13时54分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时54分10秒 执行操作】deletes  删除所有呼入路由: 10]]>
            </line>
            <line>
              <![CDATA[  【13时54分11秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时54分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('inrouter').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【13时54分16秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分17秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分18秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分20秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分21秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分22秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分24秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分25秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分26秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分27秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分30秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分31秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分32秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分34秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分35秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分36秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分38秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分39秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分40秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分41秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分42秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分44秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分45秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分47秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时54分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时54分55秒 执行操作】deleting  删除所有呼入路由: 0]]>
            </line>
            <line>
              <![CDATA[  【13时54分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时54分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('inrouter').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有呼入路由]]>
            </line>
            <line>
              <![CDATA[  【13时54分57秒 执行操作】 添加呼入路由InRoute1]]>
            </line>
            <line>
              <![CDATA[  【13时54分59秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【13时55分01秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【13时55分02秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(0).id]]>
            </line>
            <line>
              <![CDATA[  【13时55分03秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(1).id]]>
            </line>
            <line>
              <![CDATA[  【13时55分04秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(2).id]]>
            </line>
            <line>
              <![CDATA[  【13时55分05秒 执行操作】Extjs： return Ext.getCmp('st-ir-trunkinfo').getStore().getAt(3).id]]>
            </line>
            <line>
              <![CDATA[  【13时55分06秒 执行操作】Extjs： Ext.getCmp('st-ir-trunkinfo').setValue('15,16,19,17')]]>
            </line>
            <line>
              <![CDATA[  【13时55分07秒 执行操作】Extjs： Ext.getCmp('st-ir-desttype').setValue('e')]]>
            </line>
            <line>
              <![CDATA[  【13时55分08秒 执行操作】Extjs： return  Ext.getCmp('st-ir-dest').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【13时55分09秒 执行操作】Extjs： Ext.getCmp('st-ir-dest').setValue('49')]]>
            </line>
            <line>
              <![CDATA[  【13时55分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('inrouter').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_recovery_inbound -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T13:55:17Z" finished-at="2018-10-18T13:55:18Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback@95a785]" name="AfterClass" is-config="true" duration-ms="18857" started-at="2018-10-18T13:55:18Z" finished-at="2018-10-18T13:55:36Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 13时55分18秒执行完毕：=======  Callback  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Callback -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="BeforeClass" is-config="true" duration-ms="34600" started-at="2018-10-18T12:20:50Z" finished-at="2018-10-18T12:21:25Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 12时20分50秒开始执行：=======  PagingGroup & Intercom  =======]]>
            </line>
            <line>
              <![CDATA[  【12时21分14秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时21分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时21分17秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【12时21分20秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【12时21分22秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【12时21分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="Register()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="Register" is-config="true" duration-ms="37358" started-at="2018-10-18T12:21:25Z" finished-at="2018-10-18T12:22:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时21分25秒 执行操作】 注册分机1000、1100、1103、1105、2000]]>
            </line>
            <line>
              <![CDATA[  【12时21分25秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【12时21分25秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【12时21分25秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[  【12时21分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时21分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时21分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时21分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时21分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时21分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时22分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
          </reporter-output>
        </test-method> <!-- Register -->
        <test-method status="PASS" signature="A1_InitIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="A1_InitIntercom" duration-ms="9002" started-at="2018-10-18T12:22:02Z" finished-at="2018-10-18T12:22:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时22分02秒 执行操作】 设置对讲的特征码为*5]]>
            </line>
            <line>
              <![CDATA[  【12时22分08秒 执行操作】Extjs： Ext.getCmp('st-feature-enbintercom').setValue('true')]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_InitIntercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T12:22:11Z" finished-at="2018-10-18T12:22:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_InitPaging()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="A2_InitPaging" duration-ms="33591" started-at="2018-10-18T12:22:11Z" finished-at="2018-10-18T12:22:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时22分11秒 执行操作】 初始化广播组设置：删除所有广播组]]>
            </line>
            <line>
              <![CDATA[  【12时22分15秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分16秒 执行操作】 删除所有广播组]]>
            </line>
            <line>
              <![CDATA[  【12时22分20秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【12时22分21秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【12时22分22秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时22分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时22分27秒 执行操作】deletes  删除所有广播组: 2]]>
            </line>
            <line>
              <![CDATA[  【12时22分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时22分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【12时22分33秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分41秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时22分41秒 执行操作】deleting  删除所有广播组: 0]]>
            </line>
            <line>
              <![CDATA[  【12时22分42秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时22分43秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:  删除所有广播组]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_InitPaging -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-10-18T12:22:45Z" finished-at="2018-10-18T12:22:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_add_Paging6300()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="B1_add_Paging6300" duration-ms="18755" started-at="2018-10-18T12:22:45Z" finished-at="2018-10-18T12:23:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时22分45秒 执行操作】 新建广播组Paging6300--单工、不启用*Answer、成员分机：1100、1105]]>
            </line>
            <line>
              <![CDATA[  【12时22分46秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分49秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('paging')]]>
            </line>
            <line>
              <![CDATA[  【12时22分50秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时22分51秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时22分52秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时22分53秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,55')]]>
            </line>
            <line>
              <![CDATA[  【12时22分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时22分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时23分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时23分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_add_Paging6300 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T12:23:04Z" finished-at="2018-10-18T12:23:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_add_AutoPag6301()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="B2_add_AutoPag6301" duration-ms="17801" started-at="2018-10-18T12:23:04Z" finished-at="2018-10-18T12:23:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时23分04秒 执行操作】 新建广播组AutoPag6301--双工、启用*Answer、成员：ExtensionGroup1]]>
            </line>
            <line>
              <![CDATA[  【12时23分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分08秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('intercom')]]>
            </line>
            <line>
              <![CDATA[  【12时23分09秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时23分10秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分11秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('56')]]>
            </line>
            <line>
              <![CDATA[  【12时23分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分16秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时23分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时23分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_add_AutoPag6301 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T12:23:21Z" finished-at="2018-10-18T12:23:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_add_NewPage6302()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="B3_add_NewPage6302" duration-ms="19940" started-at="2018-10-18T12:23:21Z" finished-at="2018-10-18T12:23:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时23分21秒 执行操作】 新建广播组NewPage6302--双工、不启用*Answer、成员分机：1100、1103、1105]]>
            </line>
            <line>
              <![CDATA[  【12时23分23秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分26秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('intercom')]]>
            </line>
            <line>
              <![CDATA[  【12时23分27秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('false')]]>
            </line>
            <line>
              <![CDATA[  【12时23分28秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分29秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1103", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分30秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分31秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,53,55')]]>
            </line>
            <line>
              <![CDATA[  【12时23分33秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分36秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时23分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时23分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_add_NewPage6302 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T12:23:41Z" finished-at="2018-10-18T12:23:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_add_Paging6303()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="B4_add_Paging6303" duration-ms="18763" started-at="2018-10-18T12:23:41Z" finished-at="2018-10-18T12:24:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时23分41秒 执行操作】 新建广播组Paging6303--单工、启用*Answer、成员1100、1105]]>
            </line>
            <line>
              <![CDATA[  【12时23分43秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分45秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-duplex').setValue('paging')]]>
            </line>
            <line>
              <![CDATA[  【12时23分46秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-enablekeyhanup').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【12时23分47秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分48秒 执行操作】Extjs： return  Ext.getCmp('st-paginggroup-allowexten').getStore().findRecord('username', "1105", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【12时23分49秒 执行操作】Extjs： Ext.getCmp('st-paginggroup-allowexten').setValue('50,55')]]>
            </line>
            <line>
              <![CDATA[  【12时23分52秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时23分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时23分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[3].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时23分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_add_Paging6303 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="48" started-at="2018-10-18T12:24:00Z" finished-at="2018-10-18T12:24:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_Apply()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="B5_Apply" duration-ms="8093" started-at="2018-10-18T12:24:00Z" finished-at="2018-10-18T12:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B5_Apply -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="63" started-at="2018-10-18T12:24:08Z" finished-at="2018-10-18T12:24:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_callforward()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="C1_callforward" duration-ms="7341" started-at="2018-10-18T12:24:08Z" finished-at="2018-10-18T12:24:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时24分08秒 执行操作】 1000拨打*716300将通话总是转移到广播组6300]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_callforward -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-10-18T12:24:16Z" finished-at="2018-10-18T12:24:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_1way()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="D1_1way" duration-ms="57706" started-at="2018-10-18T12:24:16Z" finished-at="2018-10-18T12:25:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时24分16秒 执行操作】 1000拨打6300--预期分机1100、1105自动应答，AMI不会打印,d]]>
            </line>
            <line>
              <![CDATA[  【12时24分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时24分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期：AMI不会打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【12时25分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时25分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时25分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时25分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时25分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时25分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时25分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时25分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_1way -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T12:25:13Z" finished-at="2018-10-18T12:25:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_2way()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="D2_2way" duration-ms="54994" started-at="2018-10-18T12:25:14Z" finished-at="2018-10-18T12:26:09Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时25分14秒 执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答，AMI打印,d]]>
            </line>
            <line>
              <![CDATA[  【12时25分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 预期：AMI会打印,d]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【12时25分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时25分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时25分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时25分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时26分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时26分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_2way -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T12:26:09Z" finished-at="2018-10-18T12:26:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="E1_EnableAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="E1_EnableAnswer" duration-ms="43554" started-at="2018-10-18T12:26:09Z" finished-at="2018-10-18T12:26:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时26分09秒 执行操作】 1000拨打6301--预期分机1100、1101、1105自动应答后，1105按*Answer，1100、1101自动被挂断]]>
            </line>
            <line>
              <![CDATA[  【12时26分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【12时26分23秒 执行操作】 1105按*Answer--预期1100、1101会挂断通话]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1101--Hungup]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【12时26分39秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时26分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时26分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时26分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时26分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- E1_EnableAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T12:26:52Z" finished-at="2018-10-18T12:26:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="E2_DisableAnswer()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="E2_DisableAnswer" duration-ms="37841" started-at="2018-10-18T12:26:52Z" finished-at="2018-10-18T12:27:30Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[预计产生多条CDR，但没有找到匹配]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 预计产生多条CDR，但没有找到匹配
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:346)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom.E2_DisableAnswer(Paging_Intercom.java:216)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【12时26分52秒 执行操作】 1000拨打6302--预期分机1100、1103、1105自动应答，1105按*，分机1100、1103不会被挂断]]>
            </line>
            <line>
              <![CDATA[    Error:  1100、1103、1105自动应答失败]]>
            </line>
            <line>
              <![CDATA[  【12时27分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时27分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时27分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时27分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时27分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[1].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时27分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时27分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[2].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\预计产生多条CDR，但没有找到匹配.jpg" target="_blank">Error: 预计产生多条CDR，但没有找到匹配</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- E2_DisableAnswer -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="2090" started-at="2018-10-18T12:27:30Z" finished-at="2018-10-18T12:27:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时27分32秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="F1_followToPaging()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="F1_followToPaging" duration-ms="42356" started-at="2018-10-18T12:27:32Z" finished-at="2018-10-18T12:28:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时27分32秒 执行操作】 2000拨打99999通过sps外线呼入到分机1000，总是转移到广播组6300，预期：分机1100、1105自动应答]]>
            </line>
            <line>
              <![CDATA[    Pass:  1100--Talking]]>
            </line>
            <line>
              <![CDATA[    Pass:  1105--Talking]]>
            </line>
            <line>
              <![CDATA[  【12时28分02秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时28分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时28分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时28分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分14秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- F1_followToPaging -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="61" started-at="2018-10-18T12:28:14Z" finished-at="2018-10-18T12:28:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G1_intercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="G1_intercom" duration-ms="36926" started-at="2018-10-18T12:28:15Z" finished-at="2018-10-18T12:28:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时28分15秒 执行操作】 1000拨打*51105，1105自动应答]]>
            </line>
            <line>
              <![CDATA[  【12时28分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时28分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时28分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【12时28分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时28分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时28分51秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G1_intercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T12:28:51Z" finished-at="2018-10-18T12:28:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G2_EditFeatureCode()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="G2_EditFeatureCode" duration-ms="17011" started-at="2018-10-18T12:28:51Z" finished-at="2018-10-18T12:29:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时28分51秒 执行操作】 编辑对讲的特征码为*055]]>
            </line>
            <line>
              <![CDATA[  【12时28分57秒 执行操作】Extjs： Ext.getCmp('st-feature-enbintercom').setValue('true')]]>
            </line>
          </reporter-output>
        </test-method> <!-- G2_EditFeatureCode -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="63" started-at="2018-10-18T12:29:08Z" finished-at="2018-10-18T12:29:09Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="G3_newIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="G3_newIntercom" duration-ms="36939" started-at="2018-10-18T12:29:09Z" finished-at="2018-10-18T12:29:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时29分09秒 执行操作】 1000拨打*0551105，预期1105自动应答]]>
            </line>
            <line>
              <![CDATA[  【12时29分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass: 1105预期：自动应答]]>
            </line>
            <line>
              <![CDATA[  【12时29分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时29分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时29分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【12时29分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【12时29分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【12时29分45秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- G3_newIntercom -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T12:29:45Z" finished-at="2018-10-18T12:29:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="H_delete()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="H_delete" duration-ms="60474" started-at="2018-10-18T12:29:45Z" finished-at="2018-10-18T12:30:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时29分51秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').plugins[0].setValue('25')]]>
            </line>
            <line>
              <![CDATA[  【12时29分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.setPageSize(25)]]>
            </line>
            <line>
              <![CDATA[  【12时29分53秒 执行操作】Extjs： Ext.getCmp('control-panel').down('paginggroup').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【12时29分53秒 执行操作】 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时29分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时29分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时29分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时30分02秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【12时30分07秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时30分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分09秒 执行操作】 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分15秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td img')[1].click()]]>
            </line>
            <line>
              <![CDATA[  【12时30分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时30分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 表格删除：Paging6300-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分23秒 执行操作】 删除：AutoPag6301-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分24秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时30分25秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【12时30分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[  【12时30分27秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('paginggroup').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【12时30分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时30分33秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：AutoPag6301-取消删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分33秒 执行操作】 删除：AutoPag6301-确定删除]]>
            </line>
            <line>
              <![CDATA[  【12时30分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('paginggroup').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【12时30分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('paginggroup').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass: 删除：AutoPag6301-确定删除]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_delete -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T12:30:46Z" finished-at="2018-10-18T12:30:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="I_Recovery()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="I_Recovery" duration-ms="6467" started-at="2018-10-18T12:30:46Z" finished-at="2018-10-18T12:30:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【12时30分46秒 执行操作】 1000拨打*071将通话总是转移到广播组6300]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_Recovery -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T12:30:52Z" finished-at="2018-10-18T12:30:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom@729b1e]" name="AfterClass" is-config="true" duration-ms="17320" started-at="2018-10-18T12:30:53Z" finished-at="2018-10-18T12:31:10Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 12时30分53秒执行完毕：=======  PagingGroup & Intercom  =======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Paging_Intercom -->
      <class name="com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="BeforeClass" is-config="true" duration-ms="29188" started-at="2018-10-18T15:27:24Z" finished-at="2018-10-18T15:27:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时27分24秒 执行操作】pjsip init 0]]>
            </line>
            <line>
              <![CDATA[  【15时27分24秒 执行操作】pjisp main 0]]>
            </line>
            <line>
              <![CDATA[  【15时27分24秒 执行操作】pjs_init done]]>
            </line>
            <line>
              <![CDATA[【测试类场景初始化】_2018年10月18日 15时27分24秒开始执行：====== Blacklist/Whitelist ======]]>
            </line>
            <line>
              <![CDATA[  【15时27分44秒 执行操作】Extjs： Ext.getCmp('pp-nevernotify').setValue('true')]]>
            </line>
            <line>
              <![CDATA[  【15时27分49秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时27分50秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时27分53秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A1_init1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="A1_init1" duration-ms="14871" started-at="2018-10-18T15:27:53Z" finished-at="2018-10-18T15:28:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时27分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分02秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时28分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分07秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时28分08秒 执行操作】Extjs： return Ext.getCmp("me-bw-onlywhitelist").value]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_init1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T15:28:08Z" finished-at="2018-10-18T15:28:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_init2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="A1_init2" duration-ms="49101" started-at="2018-10-18T15:28:08Z" finished-at="2018-10-18T15:28:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时28分28秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分29秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分31秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时28分35秒 执行操作】Extjs： Ext.getCmp('cdr-record').down('cdrandrecord-edit').lookupReference('showncol').setValue('0,1,2,6,4,5,6,7,8,9,10,11')]]>
            </line>
            <line>
              <![CDATA[  【15时28分36秒 执行操作】Extjs： Ext.get(Ext.query('#'+Ext.getCmp("cdr-record").down('cdrandrecord-edit').down('header').id + ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时28分38秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时28分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分44秒 执行操作】  删除所有紧急号码]]>
            </line>
            <line>
              <![CDATA[  【15时28分48秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').plugins[0].setValue('100')]]>
            </line>
            <line>
              <![CDATA[  【15时28分49秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.setPageSize(100)]]>
            </line>
            <line>
              <![CDATA[  【15时28分50秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').down('mypagingtoolbar').store.loadPage(1)]]>
            </line>
            <line>
              <![CDATA[  【15时28分53秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时28分55秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时28分55秒 执行操作】deletes   删除所有紧急号码: 0]]>
            </line>
            <line>
              <![CDATA[  【15时28分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时28分57秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('emergencylist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[    Pass:   删除所有紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_init2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T15:28:57Z" finished-at="2018-10-18T15:28:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A1_init3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="A1_init3" duration-ms="13241" started-at="2018-10-18T15:28:57Z" finished-at="2018-10-18T15:29:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时29分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时29分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时29分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时29分10秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A1_init3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T15:29:10Z" finished-at="2018-10-18T15:29:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="A2_addExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="A2_addExtensions" duration-ms="60029" started-at="2018-10-18T15:29:10Z" finished-at="2018-10-18T15:30:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时29分10秒 执行操作】 主测设备注册分机1000]]>
            </line>
            <line>
              <![CDATA[  【15时29分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[0].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分17秒 执行操作】 主测设备注册分机1100]]>
            </line>
            <line>
              <![CDATA[  【15时29分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分23秒 执行操作】 主测设备注册分机1101]]>
            </line>
            <line>
              <![CDATA[  【15时29分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[2].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分29秒 执行操作】 主测设备注册分机1102]]>
            </line>
            <line>
              <![CDATA[  【15时29分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[3].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分38秒 执行操作】 主测设备注册分机1103]]>
            </line>
            <line>
              <![CDATA[  【15时29分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[4].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分46秒 执行操作】 主测设备注册分机1105]]>
            </line>
            <line>
              <![CDATA[  【15时29分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[6].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时29分54秒 执行操作】 主测设备注册分机1106]]>
            </line>
            <line>
              <![CDATA[  【15时29分54秒 执行操作】 辅助设备1注册分机3001]]>
            </line>
            <line>
              <![CDATA[  【15时29分56秒 执行操作】 辅助设备1注册分机3004]]>
            </line>
            <line>
              <![CDATA[  【15时29分58秒 执行操作】 辅助设备1注册分机3005]]>
            </line>
            <line>
              <![CDATA[  【15时30分00秒 执行操作】 辅助设备2注册分机2000]]>
            </line>
            <line>
              <![CDATA[  【15时30分02秒 执行操作】 辅助设备2注册分机2001]]>
            </line>
            <line>
              <![CDATA[  【15时30分04秒 执行操作】 辅助设备2注册分机2002]]>
            </line>
            <line>
              <![CDATA[  【15时30分06秒 执行操作】 辅助设备2注册分机2006]]>
            </line>
            <line>
              <![CDATA[  【15时30分10秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- A2_addExtensions -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="59" started-at="2018-10-18T15:30:10Z" finished-at="2018-10-18T15:30:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin1" duration-ms="16824" started-at="2018-10-18T15:30:10Z" finished-at="2018-10-18T15:30:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- B1_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T15:30:27Z" finished-at="2018-10-18T15:30:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin2" duration-ms="9145" started-at="2018-10-18T15:30:27Z" finished-at="2018-10-18T15:30:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时30分27秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时30分34秒 执行操作】 2001拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:30:36Z" finished-at="2018-10-18T15:30:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin3" duration-ms="8058" started-at="2018-10-18T15:30:37Z" finished-at="2018-10-18T15:30:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时30分37秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时30分43秒 执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T15:30:45Z" finished-at="2018-10-18T15:30:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin4" duration-ms="30662" started-at="2018-10-18T15:30:45Z" finished-at="2018-10-18T15:31:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时30分45秒 执行操作】 2000拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时31分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时31分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分15秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:31:15Z" finished-at="2018-10-18T15:31:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin5" duration-ms="45836" started-at="2018-10-18T15:31:15Z" finished-at="2018-10-18T15:32:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时31分15秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时31分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时31分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分56秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时31分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T15:32:01Z" finished-at="2018-10-18T15:32:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B1_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B1_black_admin6" duration-ms="28637" started-at="2018-10-18T15:32:01Z" finished-at="2018-10-18T15:32:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时32分01秒 执行操作】1105呼入到1000——内部分机互打，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时32分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时32分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时32分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B1_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-10-18T15:32:30Z" finished-at="2018-10-18T15:32:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B2_white_admin1" duration-ms="19661" started-at="2018-10-18T15:32:30Z" finished-at="2018-10-18T15:32:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时32分31秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('inbound')]]>
            </line>
            <line>
              <![CDATA[  【15时32分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时32分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时32分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="63" started-at="2018-10-18T15:32:50Z" finished-at="2018-10-18T15:32:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B2_white_admin2" duration-ms="28933" started-at="2018-10-18T15:32:50Z" finished-at="2018-10-18T15:33:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时32分50秒 执行操作】辅助设备分机2001通过SPS呼入到1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时33分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时33分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时33分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T15:33:19Z" finished-at="2018-10-18T15:33:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B2_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B2_white_admin3" duration-ms="8060" started-at="2018-10-18T15:33:19Z" finished-at="2018-10-18T15:33:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时33分19秒 执行操作】 2002拨打99999通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时33分25秒 执行操作】 2002拨打99999,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B2_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T15:33:27Z" finished-at="2018-10-18T15:33:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin1" duration-ms="35616" started-at="2018-10-18T15:33:27Z" finished-at="2018-10-18T15:34:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时33分28秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时33分31秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时33分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时33分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时33分42秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时33分47秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时33分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="56" started-at="2018-10-18T15:34:02Z" finished-at="2018-10-18T15:34:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin2" duration-ms="28702" started-at="2018-10-18T15:34:02Z" finished-at="2018-10-18T15:34:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时34分02秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时34分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时34分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时34分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T15:34:31Z" finished-at="2018-10-18T15:34:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin3" duration-ms="8084" started-at="2018-10-18T15:34:31Z" finished-at="2018-10-18T15:34:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时34分31秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时34分37秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="43" started-at="2018-10-18T15:34:39Z" finished-at="2018-10-18T15:34:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin4" duration-ms="29030" started-at="2018-10-18T15:34:39Z" finished-at="2018-10-18T15:35:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时34分39秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时34分56秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时34分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时35分08秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T15:35:08Z" finished-at="2018-10-18T15:35:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin5" duration-ms="8051" started-at="2018-10-18T15:35:08Z" finished-at="2018-10-18T15:35:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时35分08秒 执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时35分14秒 执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:35:16Z" finished-at="2018-10-18T15:35:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin6" duration-ms="8085" started-at="2018-10-18T15:35:16Z" finished-at="2018-10-18T15:35:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时35分16秒 执行操作】 1101拨打30123通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时35分22秒 执行操作】 1101拨打30123,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T15:35:24Z" finished-at="2018-10-18T15:35:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B3_black_admin7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B3_black_admin7" duration-ms="8042" started-at="2018-10-18T15:35:24Z" finished-at="2018-10-18T15:35:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时35分24秒 执行操作】 1000拨打1105——内部分机互打，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时35分31秒 执行操作】 1000拨打1105,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B3_black_admin7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T15:35:33Z" finished-at="2018-10-18T15:35:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B4_white_admin1" duration-ms="21396" started-at="2018-10-18T15:35:33Z" finished-at="2018-10-18T15:35:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时35分34秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T15:35:54Z" finished-at="2018-10-18T15:35:54Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B4_white_admin2" duration-ms="28992" started-at="2018-10-18T15:35:54Z" finished-at="2018-10-18T15:36:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时35分54秒 执行操作】 2001拨打99999通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时36分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时36分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="29" started-at="2018-10-18T15:36:23Z" finished-at="2018-10-18T15:36:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B4_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B4_white_admin4" duration-ms="31610" started-at="2018-10-18T15:36:23Z" finished-at="2018-10-18T15:36:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时36分23秒 执行操作】 1000拨打1105——内部分机互打，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时36分42秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时36分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时36分54秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B4_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:36:55Z" finished-at="2018-10-18T15:36:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin1" duration-ms="38451" started-at="2018-10-18T15:36:55Z" finished-at="2018-10-18T15:37:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时36分56秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时36分59秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时37分04秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时37分07秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时37分10秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时37分14秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时37分15秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1000", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时37分16秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1100", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时37分17秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('49,50')]]>
            </line>
            <line>
              <![CDATA[  【15时37分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时37分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时37分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T15:37:33Z" finished-at="2018-10-18T15:37:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin2" duration-ms="8083" started-at="2018-10-18T15:37:33Z" finished-at="2018-10-18T15:37:41Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时37分33秒 执行操作】 1000拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时37分39秒 执行操作】 1000拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:37:41Z" finished-at="2018-10-18T15:37:41Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin3" duration-ms="8082" started-at="2018-10-18T15:37:41Z" finished-at="2018-10-18T15:37:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时37分41秒 执行操作】 1100拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时37分47秒 执行操作】 1100拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T15:37:49Z" finished-at="2018-10-18T15:37:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin4" duration-ms="32886" started-at="2018-10-18T15:37:49Z" finished-at="2018-10-18T15:38:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时37分49秒 执行操作】 1101拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时38分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时38分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分22秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T15:38:22Z" finished-at="2018-10-18T15:38:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin5" duration-ms="39423" started-at="2018-10-18T15:38:22Z" finished-at="2018-10-18T15:39:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时38分22秒 执行操作】 1100拨打13004通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[  【15时38分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[  【15时38分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp(Ext.getCmp('pbxmonitor').down('b-extenstatus').id).down('tableview').id + ' [data-recordindex]')[1].id + ' tr td div div')[0].getAttribute('data-qtip')]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时38分40秒 执行操作】Extjs： Ext.get(Ext.query('#pbxmonitor_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时38分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时38分52秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时38分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分01秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="53" started-at="2018-10-18T15:39:02Z" finished-at="2018-10-18T15:39:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B5_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B5_black_admin6" duration-ms="28642" started-at="2018-10-18T15:39:02Z" finished-at="2018-10-18T15:39:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时39分02秒 执行操作】 3001拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时39分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时39分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分25秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时39分30秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B5_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:39:30Z" finished-at="2018-10-18T15:39:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B6_white_admin1" duration-ms="19459" started-at="2018-10-18T15:39:30Z" finished-at="2018-10-18T15:39:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时39分32秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时39分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时39分40秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时39分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T15:39:50Z" finished-at="2018-10-18T15:39:50Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B6_white_admin2" duration-ms="28914" started-at="2018-10-18T15:39:50Z" finished-at="2018-10-18T15:40:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时39分50秒 执行操作】 1000拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时40分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时40分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分17秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分18秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T15:40:19Z" finished-at="2018-10-18T15:40:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B6_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B6_white_admin3" duration-ms="31870" started-at="2018-10-18T15:40:19Z" finished-at="2018-10-18T15:40:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时40分19秒 执行操作】 1100拨打13001通过sip外线呼出]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时40分38秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时40分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时40分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B6_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="49" started-at="2018-10-18T15:40:51Z" finished-at="2018-10-18T15:40:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B7_black_admin1" duration-ms="37334" started-at="2018-10-18T15:40:51Z" finished-at="2018-10-18T15:41:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时40分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时40分55秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时41分00秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时41分02秒 执行操作】修改黑名单]]>
            </line>
            <line>
              <![CDATA[  【15时41分03秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时41分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时41分10秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时41分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T15:41:28Z" finished-at="2018-10-18T15:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B7_black_admin2" duration-ms="8156" started-at="2018-10-18T15:41:28Z" finished-at="2018-10-18T15:41:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时41分28秒 执行操作】 1105拨打13001通过sip外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时41分34秒 执行操作】 1105拨打13001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:41:36Z" finished-at="2018-10-18T15:41:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B7_black_admin3" duration-ms="8046" started-at="2018-10-18T15:41:36Z" finished-at="2018-10-18T15:41:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时41分36秒 执行操作】 1100拨打33004通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时41分42秒 执行操作】 1100拨打33004,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T15:41:44Z" finished-at="2018-10-18T15:41:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B7_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B7_black_admin4" duration-ms="33074" started-at="2018-10-18T15:41:44Z" finished-at="2018-10-18T15:42:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时41分44秒 执行操作】 3004拨打3000通过sip外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时42分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时42分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时42分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B7_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T15:42:17Z" finished-at="2018-10-18T15:42:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B8_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B8_white_admin1" duration-ms="19662" started-at="2018-10-18T15:42:17Z" finished-at="2018-10-18T15:42:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时42分19秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时42分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时42分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时42分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T15:42:37Z" finished-at="2018-10-18T15:42:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B8_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B8_white_admin2" duration-ms="30614" started-at="2018-10-18T15:42:37Z" finished-at="2018-10-18T15:43:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时42分37秒 执行操作】 1100拨打33004通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[  【15时42分55秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时42分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分07秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T15:43:08Z" finished-at="2018-10-18T15:43:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="B8_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="B8_white_admin3" duration-ms="28700" started-at="2018-10-18T15:43:08Z" finished-at="2018-10-18T15:43:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时43分08秒 执行操作】 1105拨打13001通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3001状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时43分24秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时43分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分28秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分31秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时43分36秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- B8_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T15:43:37Z" finished-at="2018-10-18T15:43:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin1" duration-ms="38463" started-at="2018-10-18T15:43:37Z" finished-at="2018-10-18T15:44:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时43分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时43分41秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时43分46秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时43分48秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时43分52秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时43分56秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时43分57秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时43分58秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "1102", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时43分59秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('56,52')]]>
            </line>
            <line>
              <![CDATA[  【15时44分03秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时44分05秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时44分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T15:44:15Z" finished-at="2018-10-18T15:44:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin2" duration-ms="8074" started-at="2018-10-18T15:44:15Z" finished-at="2018-10-18T15:44:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时44分15秒 执行操作】 1101拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时44分21秒 执行操作】 1101拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T15:44:23Z" finished-at="2018-10-18T15:44:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin3" duration-ms="8144" started-at="2018-10-18T15:44:23Z" finished-at="2018-10-18T15:44:31Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时44分23秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时44分29秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:44:31Z" finished-at="2018-10-18T15:44:31Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin4" duration-ms="8082" started-at="2018-10-18T15:44:31Z" finished-at="2018-10-18T15:44:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时44分31秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时44分37秒 执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T15:44:39Z" finished-at="2018-10-18T15:44:39Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C1_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin5" duration-ms="32731" started-at="2018-10-18T15:44:39Z" finished-at="2018-10-18T15:45:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时44分39秒 执行操作】 1103拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时44分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时45分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时45分12秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:45:12Z" finished-at="2018-10-18T15:45:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C1_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin6" duration-ms="36658" started-at="2018-10-18T15:45:12Z" finished-at="2018-10-18T15:45:49Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:288)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C1_black_admin6(Blacklist_Whitelist.java:786)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时45分12秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时45分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时45分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】.jpg" target="_blank">Error: CDR呼叫方检测 【预期：2002 [2002] 实际：xlq [1103]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="2088" started-at="2018-10-18T15:45:49Z" finished-at="2018-10-18T15:45:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时45分50秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C1_black_admin7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C1_black_admin7" duration-ms="16701" started-at="2018-10-18T15:45:51Z" finished-at="2018-10-18T15:46:08Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[ 1102拨打1105,预期呼出失败,实际呼出成功]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError:  1102拨打1105,预期呼出失败,实际呼出成功
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C1_black_admin7(Blacklist_Whitelist.java:800)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时45分51秒 执行操作】 1102拨打1105——内部分机互打，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时46分05秒 执行操作】 1102拨打1105,预期呼出失败,实际呼出成功]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\ 1102拨打1105,预期呼出失败,实际呼出成功.jpg" target="_blank">Error:  1102拨打1105,预期呼出失败,实际呼出成功</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C1_black_admin7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T15:46:08Z" finished-at="2018-10-18T15:46:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C2_white_admin1" duration-ms="19687" started-at="2018-10-18T15:46:08Z" finished-at="2018-10-18T15:46:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时46分09秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时46分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时46分18秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时46分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="20" started-at="2018-10-18T15:46:27Z" finished-at="2018-10-18T15:46:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C2_white_admin2" duration-ms="8048" started-at="2018-10-18T15:46:27Z" finished-at="2018-10-18T15:46:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时46分27秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时46分33秒 执行操作】 1102拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="39" started-at="2018-10-18T15:46:35Z" finished-at="2018-10-18T15:46:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C2_white_admin3" duration-ms="45818" started-at="2018-10-18T15:46:35Z" finished-at="2018-10-18T15:47:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时46分35秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时47分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时47分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分13秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分21秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T15:47:21Z" finished-at="2018-10-18T15:47:21Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C2_white_admin4" duration-ms="45451" started-at="2018-10-18T15:47:21Z" finished-at="2018-10-18T15:48:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时47分21秒 执行操作】 1102拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机2001状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时47分54秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时47分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时47分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分00秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分03秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分06秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:48:07Z" finished-at="2018-10-18T15:48:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C2_white_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C2_white_admin5" duration-ms="28669" started-at="2018-10-18T15:48:07Z" finished-at="2018-10-18T15:48:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时48分07秒 执行操作】 1102拨打1105——内部分机互打，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1105状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时48分23秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时48分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分29秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分30秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分32秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时48分35秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C2_white_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="47" started-at="2018-10-18T15:48:35Z" finished-at="2018-10-18T15:48:36Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C3_black_admin1" duration-ms="40190" started-at="2018-10-18T15:48:36Z" finished-at="2018-10-18T15:49:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时48分37秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时48分40秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时48分45秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时48分46秒 执行操作】修改黑名单]]>
            </line>
            <line>
              <![CDATA[  【15时48分47秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时48分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时48分55秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('blacklist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时49分01秒 执行操作】Extjs： return  Ext.getCmp('st-bw-outlist').getStore().findRecord('username', "ExtensionGroup1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时49分02秒 执行操作】Extjs： Ext.getCmp('st-bw-outlist').setValue('56')]]>
            </line>
            <line>
              <![CDATA[  【15时49分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T15:49:16Z" finished-at="2018-10-18T15:49:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C3_black_admin2" duration-ms="28733" started-at="2018-10-18T15:49:16Z" finished-at="2018-10-18T15:49:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时49分16秒 执行操作】 1102拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时49分32秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时49分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时49分44秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T15:49:44Z" finished-at="2018-10-18T15:49:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C3_black_admin3" duration-ms="8063" started-at="2018-10-18T15:49:44Z" finished-at="2018-10-18T15:49:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时49分44秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时49分51秒 执行操作】 1100拨打32002,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:49:53Z" finished-at="2018-10-18T15:49:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C3_black_admin4" duration-ms="8088" started-at="2018-10-18T15:49:53Z" finished-at="2018-10-18T15:50:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时49分53秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时49分59秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="37" started-at="2018-10-18T15:50:01Z" finished-at="2018-10-18T15:50:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C3_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C3_black_admin5" duration-ms="28577" started-at="2018-10-18T15:50:01Z" finished-at="2018-10-18T15:50:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时50分01秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时50分17秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时50分20秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时50分29秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C3_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T15:50:29Z" finished-at="2018-10-18T15:50:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C4_white_admin1" duration-ms="19522" started-at="2018-10-18T15:50:29Z" finished-at="2018-10-18T15:50:49Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时50分31秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时50分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时50分39秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时50分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T15:50:49Z" finished-at="2018-10-18T15:50:49Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C4_white_admin2" duration-ms="28519" started-at="2018-10-18T15:50:49Z" finished-at="2018-10-18T15:51:17Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时50分49秒 执行操作】 1100拨打32002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2002状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时51分05秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时51分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分11秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分14秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时51分17秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="44" started-at="2018-10-18T15:51:17Z" finished-at="2018-10-18T15:51:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C4_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C4_white_admin3" duration-ms="8066" started-at="2018-10-18T15:51:17Z" finished-at="2018-10-18T15:51:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时51分17秒 执行操作】 1100拨打32001通过sps外线呼出,预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时51分23秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C4_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:51:25Z" finished-at="2018-10-18T15:51:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C5_black_admin1" duration-ms="34670" started-at="2018-10-18T15:51:26Z" finished-at="2018-10-18T15:52:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时51分27秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时51分30秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时51分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时51分38秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时51分41秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时51分45秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【15时51分49秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="51" started-at="2018-10-18T15:52:00Z" finished-at="2018-10-18T15:52:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C5_black_admin2" duration-ms="8108" started-at="2018-10-18T15:52:00Z" finished-at="2018-10-18T15:52:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时52分00秒 执行操作】 1100拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时52分06秒 执行操作】 1100拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T15:52:08Z" finished-at="2018-10-18T15:52:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C5_black_admin3" duration-ms="8059" started-at="2018-10-18T15:52:08Z" finished-at="2018-10-18T15:52:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时52分08秒 执行操作】 1101拨打13004通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时52分14秒 执行操作】 1101拨打13004,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T15:52:16Z" finished-at="2018-10-18T15:52:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C5_black_admin5" duration-ms="11260" started-at="2018-10-18T15:52:16Z" finished-at="2018-10-18T15:52:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时52分16秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时52分26秒 执行操作】 2002拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T15:52:28Z" finished-at="2018-10-18T15:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C5_black_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C5_black_admin6" duration-ms="12102" started-at="2018-10-18T15:52:28Z" finished-at="2018-10-18T15:52:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时52分28秒 执行操作】 3004拨打3000通过sip外线呼入到分机1000,预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时52分38秒 执行操作】 3004拨打3000,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C5_black_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T15:52:40Z" finished-at="2018-10-18T15:52:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C6_white_admin1" duration-ms="21584" started-at="2018-10-18T15:52:40Z" finished-at="2018-10-18T15:53:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时52分44秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【15时52分47秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时52分52秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时52分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="12" started-at="2018-10-18T15:53:01Z" finished-at="2018-10-18T15:53:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="FAIL" signature="C6_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C6_white_admin2" duration-ms="38237" started-at="2018-10-18T15:53:02Z" finished-at="2018-10-18T15:53:40Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：1000 [1000] 实际：1000】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：1000 [1000] 实际：1000】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1092)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:583)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:146)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:120)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:203)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:289)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:278)
	at com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist.C6_white_admin2(Blacklist_Whitelist.java:1099)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【15时53分02秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Error:  预期分机1000状态为TALKING，实际状态为4]]>
            </line>
            <line>
              <![CDATA[  【15时53分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时53分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时53分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\MyProject\SwebTest\pic\CDR被叫方检测 【预期：1000 [1000] 实际：1000】.jpg" target="_blank">Error: CDR被叫方检测 【预期：1000 [1000] 实际：1000】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="2111" started-at="2018-10-18T15:53:40Z" finished-at="2018-10-18T15:53:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时53分41秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C6_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C6_white_admin3" duration-ms="28678" started-at="2018-10-18T15:53:42Z" finished-at="2018-10-18T15:54:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时53分42秒 执行操作】 1101拨打33004通过sip外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机3004状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时53分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时54分01秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时54分10秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C6_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T15:54:11Z" finished-at="2018-10-18T15:54:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C7_black_admin1" duration-ms="34627" started-at="2018-10-18T15:54:11Z" finished-at="2018-10-18T15:54:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时54分12秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时54分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时54分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时54分23秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时54分26秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时54分30秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【15时54分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="32" started-at="2018-10-18T15:54:45Z" finished-at="2018-10-18T15:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C7_black_admin2" duration-ms="28824" started-at="2018-10-18T15:54:45Z" finished-at="2018-10-18T15:55:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时54分45秒 执行操作】 1101拨打3123通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时55分01秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时55分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分06秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分09秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分12秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时55分13秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="15" started-at="2018-10-18T15:55:14Z" finished-at="2018-10-18T15:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C7_black_admin3" duration-ms="8059" started-at="2018-10-18T15:55:14Z" finished-at="2018-10-18T15:55:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时55分14秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时55分20秒 执行操作】 1101拨打32234,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="28" started-at="2018-10-18T15:55:22Z" finished-at="2018-10-18T15:55:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C7_black_admin4" duration-ms="8084" started-at="2018-10-18T15:55:22Z" finished-at="2018-10-18T15:55:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时55分22秒 执行操作】 1101拨打312345通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【15时55分28秒 执行操作】 1101拨打312345,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T15:55:30Z" finished-at="2018-10-18T15:55:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C7_black_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C7_black_admin5" duration-ms="8099" started-at="2018-10-18T15:55:30Z" finished-at="2018-10-18T15:55:38Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时55分30秒 执行操作】 2002拨打991234通过sip外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时55分36秒 执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C7_black_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="40" started-at="2018-10-18T15:55:38Z" finished-at="2018-10-18T15:55:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin1" duration-ms="17089" started-at="2018-10-18T15:55:38Z" finished-at="2018-10-18T15:55:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时55分40秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【15时55分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T15:55:55Z" finished-at="2018-10-18T15:55:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin2" duration-ms="28672" started-at="2018-10-18T15:55:56Z" finished-at="2018-10-18T15:56:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时55分56秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时56分12秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时56分15秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分16秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分18秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分19秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分22秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分24秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T15:56:24Z" finished-at="2018-10-18T15:56:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin3" duration-ms="28569" started-at="2018-10-18T15:56:24Z" finished-at="2018-10-18T15:56:53Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时56分24秒 执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时56分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时56分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时56分52秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T15:56:53Z" finished-at="2018-10-18T15:56:53Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin4" duration-ms="26972" started-at="2018-10-18T15:56:53Z" finished-at="2018-10-18T15:57:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时56分53秒 执行操作】修改白名单——whitelist]]>
            </line>
            <line>
              <![CDATA[  【15时56分54秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时56分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【15时57分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('control-panel').down('whitelist').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【15时57分06秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时57分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('whitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T15:57:20Z" finished-at="2018-10-18T15:57:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin5" duration-ms="8060" started-at="2018-10-18T15:57:20Z" finished-at="2018-10-18T15:57:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时57分20秒 执行操作】 2002拨打991234通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【15时57分26秒 执行操作】 2002拨打991234,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="18" started-at="2018-10-18T15:57:28Z" finished-at="2018-10-18T15:57:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C8_white_admin6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C8_white_admin6" duration-ms="28668" started-at="2018-10-18T15:57:28Z" finished-at="2018-10-18T15:57:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时57分28秒 执行操作】 1101拨打32234通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时57分44秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时57分47秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分50秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分53秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时57分56秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C8_white_admin6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:57:57Z" finished-at="2018-10-18T15:57:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C9_EmergencyNumber1" duration-ms="26705" started-at="2018-10-18T15:57:57Z" finished-at="2018-10-18T15:58:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时57分58秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('whitelist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时58分01秒 执行操作】Extjs： Ext.getCmp('control-panel').down('whitelist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时58分06秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时58分09秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时58分12秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时58分16秒 执行操作】Extjs： Ext.getCmp('st-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【15时58分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T15:58:23Z" finished-at="2018-10-18T15:58:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C9_EmergencyNumber2" duration-ms="19997" started-at="2018-10-18T15:58:23Z" finished-at="2018-10-18T15:58:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时58分23秒 执行操作】 新增紧急号码：3001，trunk选择SPS]]>
            </line>
            <line>
              <![CDATA[  【15时58分25秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时58分30秒 执行操作】Extjs： return  Ext.getCmp('trunk0').getStore().findRecord('trunkname', "SPS1", 0, false, false, true).data.id]]>
            </line>
            <line>
              <![CDATA[  【15时58分31秒 执行操作】Extjs： Ext.getCmp('trunk0').setValue('19')]]>
            </line>
            <line>
              <![CDATA[  【15时58分34秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="38" started-at="2018-10-18T15:58:43Z" finished-at="2018-10-18T15:58:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C9_EmergencyNumber3" duration-ms="28420" started-at="2018-10-18T15:58:43Z" finished-at="2018-10-18T15:59:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时58分43秒 执行操作】 1101拨打3001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【15时58分59秒 执行操作】Extjs： return Ext.get(Ext.getCmp('cdr-record').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时59分02秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR源中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[7].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR目的中继检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分10秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('cdr-record').down('grid').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[8].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
            <line>
              <![CDATA[  【15时59分11秒 执行操作】Extjs： Ext.get(Ext.query('#cdr-record_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="30" started-at="2018-10-18T15:59:12Z" finished-at="2018-10-18T15:59:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C9_EmergencyNumber4" duration-ms="9849" started-at="2018-10-18T15:59:12Z" finished-at="2018-10-18T15:59:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时59分12秒 执行操作】 全部勾选紧急号码-确定删除]]>
            </line>
            <line>
              <![CDATA[  【15时59分15秒 执行操作】Extjs： Ext.getCmp('control-panel').down('emergencylist').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【15时59分20秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('emergencylist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="10" started-at="2018-10-18T15:59:22Z" finished-at="2018-10-18T15:59:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="C9_EmergencyNumber5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="C9_EmergencyNumber5" duration-ms="23343" started-at="2018-10-18T15:59:22Z" finished-at="2018-10-18T15:59:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【15时59分23秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【15时59分29秒 执行操作】Extjs： return Ext.get(Ext.getCmp('control-panel').down('blacklist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【15时59分31秒 执行操作】Extjs： return Ext.getCmp('control-panel').down('blacklist').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【15时59分35秒 执行操作】Extjs： Ext.getCmp('control-panel').down('blacklist').getSelectionModel().selectAll()]]>
            </line>
          </reporter-output>
        </test-method> <!-- C9_EmergencyNumber5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="26" started-at="2018-10-18T15:59:45Z" finished-at="2018-10-18T15:59:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D1_black_me1" duration-ms="52229" started-at="2018-10-18T15:59:45Z" finished-at="2018-10-18T16:00:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时00分05秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时00分06秒 执行操作】Extjs： return Ext.get('ys-waiting').dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时00分09秒 执行操作】Extjs： Ext.get(Ext.query('#control-panel_header-targetEl'+ ' .x-tool-close')[0].id).dom.click()]]>
            </line>
            <line>
              <![CDATA[  【16时00分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时00分18秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时00分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时00分23秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时00分25秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【16时00分28秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="54" started-at="2018-10-18T16:00:37Z" finished-at="2018-10-18T16:00:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D1_black_me2" duration-ms="15072" started-at="2018-10-18T16:00:37Z" finished-at="2018-10-18T16:00:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时00分37秒 执行操作】 1100拨打32001通过sps外线呼出,预期呼出成功]]>
            </line>
            <line>
              <![CDATA[  【16时00分50秒 执行操作】 1100拨打32001,预期呼出成功,实际呼出成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="42" started-at="2018-10-18T16:00:52Z" finished-at="2018-10-18T16:00:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D1_black_me3" duration-ms="8064" started-at="2018-10-18T16:00:52Z" finished-at="2018-10-18T16:01:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时00分52秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【16时00分59秒 执行操作】 1000拨打32001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="34" started-at="2018-10-18T16:01:01Z" finished-at="2018-10-18T16:01:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D1_black_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D1_black_me4" duration-ms="25110" started-at="2018-10-18T16:01:01Z" finished-at="2018-10-18T16:01:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时01分01秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时01分16秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时01分21秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D1_black_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T16:01:26Z" finished-at="2018-10-18T16:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D2_white_me1" duration-ms="14134" started-at="2018-10-18T16:01:26Z" finished-at="2018-10-18T16:01:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时01分28秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【16时01分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="45" started-at="2018-10-18T16:01:40Z" finished-at="2018-10-18T16:01:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D2_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D2_white_me2" duration-ms="18452" started-at="2018-10-18T16:01:40Z" finished-at="2018-10-18T16:01:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时01分40秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时01分51秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时01分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时01分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D2_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T16:01:58Z" finished-at="2018-10-18T16:01:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D3_black_me1" duration-ms="31755" started-at="2018-10-18T16:01:58Z" finished-at="2018-10-18T16:02:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时02分00秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时02分03秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【16时02分08秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时02分11秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时02分14秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【16时02分18秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
            </line>
            <line>
              <![CDATA[  【16时02分21秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="16" started-at="2018-10-18T16:02:30Z" finished-at="2018-10-18T16:02:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D3_black_me2" duration-ms="20732" started-at="2018-10-18T16:02:30Z" finished-at="2018-10-18T16:02:51Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时02分30秒 执行操作】 1000拨打32001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时02分41秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时02分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时02分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时02分49秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时02分51秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="22" started-at="2018-10-18T16:02:51Z" finished-at="2018-10-18T16:02:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D3_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D3_black_me3" duration-ms="14056" started-at="2018-10-18T16:02:51Z" finished-at="2018-10-18T16:03:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时02分51秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【16时03分03秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D3_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T16:03:05Z" finished-at="2018-10-18T16:03:05Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D4_white_me1" duration-ms="14162" started-at="2018-10-18T16:03:05Z" finished-at="2018-10-18T16:03:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时03分07秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【16时03分10秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="41" started-at="2018-10-18T16:03:19Z" finished-at="2018-10-18T16:03:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D4_white_me2" duration-ms="20470" started-at="2018-10-18T16:03:19Z" finished-at="2018-10-18T16:03:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时03分19秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时03分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时03分35秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时03分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时03分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时03分40秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="21" started-at="2018-10-18T16:03:40Z" finished-at="2018-10-18T16:03:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D4_white_me3" duration-ms="27136" started-at="2018-10-18T16:03:40Z" finished-at="2018-10-18T16:04:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时03分40秒 执行操作】修改白名单——white_me]]>
            </line>
            <line>
              <![CDATA[  【16时03分41秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时03分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【16时03分48秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【16时03分54秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
            </line>
            <line>
              <![CDATA[  【16时03分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T16:04:07Z" finished-at="2018-10-18T16:04:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D4_white_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D4_white_me4" duration-ms="20601" started-at="2018-10-18T16:04:07Z" finished-at="2018-10-18T16:04:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时04分07秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时04分18秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时04分23秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时04分24秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时04分26秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时04分27秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D4_white_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T16:04:27Z" finished-at="2018-10-18T16:04:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D5_black_me1" duration-ms="39322" started-at="2018-10-18T16:04:27Z" finished-at="2018-10-18T16:05:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时04分29秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时04分32秒 执行操作】Extjs： Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getSelectionModel().selectAll()]]>
            </line>
            <line>
              <![CDATA[  【16时04分37秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时04分39秒 执行操作】修改黑名单——black_me]]>
            </line>
            <line>
              <![CDATA[  【16时04分40秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时04分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【16时04分47秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【16时04分52秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【16时04分57秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="27" started-at="2018-10-18T16:05:07Z" finished-at="2018-10-18T16:05:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D5_black_me2" duration-ms="8047" started-at="2018-10-18T16:05:07Z" finished-at="2018-10-18T16:05:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时05分07秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【16时05分13秒 执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="19" started-at="2018-10-18T16:05:15Z" finished-at="2018-10-18T16:05:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D5_black_me3" duration-ms="14094" started-at="2018-10-18T16:05:15Z" finished-at="2018-10-18T16:05:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时05分15秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【16时05分27秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="33" started-at="2018-10-18T16:05:29Z" finished-at="2018-10-18T16:05:29Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D5_black_me4" duration-ms="18624" started-at="2018-10-18T16:05:29Z" finished-at="2018-10-18T16:05:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时05分29秒 执行操作】 1000拨打33002通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时05分40秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时05分43秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时05分45秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时05分46秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时05分48秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T16:05:48Z" finished-at="2018-10-18T16:05:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D5_black_me5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D5_black_me5" duration-ms="20541" started-at="2018-10-18T16:05:48Z" finished-at="2018-10-18T16:06:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时05分48秒 执行操作】 2002拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时05分58秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时06分04秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分05秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分07秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分08秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D5_black_me5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="11" started-at="2018-10-18T16:06:08Z" finished-at="2018-10-18T16:06:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me1()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me1" duration-ms="14257" started-at="2018-10-18T16:06:08Z" finished-at="2018-10-18T16:06:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时06分10秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('outbound')]]>
            </line>
            <line>
              <![CDATA[  【16时06分13秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me1 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="35" started-at="2018-10-18T16:06:22Z" finished-at="2018-10-18T16:06:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me2()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me2" duration-ms="19778" started-at="2018-10-18T16:06:23Z" finished-at="2018-10-18T16:06:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时06分23秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时06分35秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时06分38秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时06分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me2 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="31" started-at="2018-10-18T16:06:42Z" finished-at="2018-10-18T16:06:42Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me3()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me3" duration-ms="14119" started-at="2018-10-18T16:06:42Z" finished-at="2018-10-18T16:06:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时06分42秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入失败]]>
            </line>
            <line>
              <![CDATA[  【16时06分54秒 执行操作】 2001拨打991000,预期呼入失败,实际呼入失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me3 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="36" started-at="2018-10-18T16:06:56Z" finished-at="2018-10-18T16:06:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me4()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me4" duration-ms="27170" started-at="2018-10-18T16:06:56Z" finished-at="2018-10-18T16:07:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时06分57秒 执行操作】修改me白名单——white_me]]>
            </line>
            <line>
              <![CDATA[  【16时06分58秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时06分59秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【16时07分05秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【16时07分10秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('inbound')]]>
            </line>
            <line>
              <![CDATA[  【16时07分14秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me4 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="46" started-at="2018-10-18T16:07:24Z" finished-at="2018-10-18T16:07:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me5()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me5" duration-ms="19947" started-at="2018-10-18T16:07:24Z" finished-at="2018-10-18T16:07:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时07分24秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时07分36秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时07分39秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时07分41秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时07分42秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时07分44秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me5 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="24" started-at="2018-10-18T16:07:44Z" finished-at="2018-10-18T16:07:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me6()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me6" duration-ms="8151" started-at="2018-10-18T16:07:44Z" finished-at="2018-10-18T16:07:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时07分44秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出失败]]>
            </line>
            <line>
              <![CDATA[  【16时07分50秒 执行操作】 1000拨打33001,预期呼出失败,实际呼出失败]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me6 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="17" started-at="2018-10-18T16:07:52Z" finished-at="2018-10-18T16:07:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me7()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me7" duration-ms="27172" started-at="2018-10-18T16:07:52Z" finished-at="2018-10-18T16:08:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时07分52秒 执行操作】修改me白名单——white_me]]>
            </line>
            <line>
              <![CDATA[  【16时07分53秒 执行操作】Extjs： return Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').getStore().getCount()]]>
            </line>
            <line>
              <![CDATA[  【16时07分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[  【16时08分01秒 执行操作】Extjs： Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td img')[0].click()]]>
            </line>
            <line>
              <![CDATA[  【16时08分06秒 执行操作】Extjs： Ext.getCmp('me-bw-type').setValue('both')]]>
            </line>
            <line>
              <![CDATA[  【16时08分09秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('meblackwhitelist').down('mewhitelist').down('loadmask').id).dom.style.display]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me7 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="14" started-at="2018-10-18T16:08:19Z" finished-at="2018-10-18T16:08:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me8()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me8" duration-ms="18403" started-at="2018-10-18T16:08:19Z" finished-at="2018-10-18T16:08:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时08分19秒 执行操作】 1000拨打33001通过sps外线呼出，预期呼出成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机2000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时08分30秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时08分33秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分34秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分36秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分37秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me8 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T16:08:37Z" finished-at="2018-10-18T16:08:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="D6_white_me9()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="D6_white_me9" duration-ms="20635" started-at="2018-10-18T16:08:37Z" finished-at="2018-10-18T16:08:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【16时08分37秒 执行操作】 2001拨打991000通过sps外线呼入到分机1000，预期呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass:  分机1000状态--TALKING，通话正常建立]]>
            </line>
            <line>
              <![CDATA[  【16时08分48秒 执行操作】Extjs： return Ext.get(Ext.getCmp('mesetting').down('mecdr').down('loadmask').id).dom.style.display]]>
            </line>
            <line>
              <![CDATA[  【16时08分54秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[1].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分55秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[2].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分57秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[5].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[  【16时08分58秒 执行操作】Extjs： return Ext.query('#'+Ext.query('#'+Ext.getCmp('mesetting').down('mecdr').down('tableview').id + ' [data-recordindex]')[0].id + ' tr td')[6].textContent]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR通讯类型检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D6_white_me9 -->
        <test-method status="PASS" signature="AfterMethod()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterMethod" is-config="true" duration-ms="25" started-at="2018-10-18T16:08:58Z" finished-at="2018-10-18T16:08:58Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AfterMethod -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist@aac163]" name="AfterClass" is-config="true" duration-ms="17879" started-at="2018-10-18T16:08:58Z" finished-at="2018-10-18T16:09:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】_2018年10月18日 16时09分03秒执行完毕：====== Blacklist/Whitelist ======

]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.DetailCase.pbxcase.Blacklist_Whitelist -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
