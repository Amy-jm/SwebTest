<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="11" total="133" passed="122">
  <reporter-output>
    <line>
      <![CDATA[【测试类场景初始化】清空分机]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_ExtensionTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置系统时间为9点整]]>
    </line>
    <line>
      <![CDATA[    Pass: 重启]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建1000分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建FXS分机1001]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量创建分机1100-1109]]>
    </line>
    <line>
      <![CDATA[  【执行操作】SIP分机1000拨打SIP分机1001，通话]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1001分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导出分机列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除1000分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除所有分机]]>
    </line>
    <line>
      <![CDATA[  【执行操作】通过PSTN外线B设备2000拨打A设备1000]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加分机组extgroup1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_NewTrunkTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加SIPTrunk]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加IAXTrunk]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加SPX]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加SPS]]>
    </line>
    <line>
      <![CDATA[    Pass: 重启]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器_NewTrunk]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_CallFeatureTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加RingGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加pickupGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加paging_Intercom]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加PINList]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器_CallFeatureTest]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_StorageTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】SD/HD/USB检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】挂载网络磁盘sharetest1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】勾选Enable File Sharing]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Storage Locations中CDR、Recordings和Logs下拉选择TF/SD卡,Voicemail&One Touch Recordings下拉选择sharetest1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Record Trunks全选所有Trunk、Record Extensions全选所有分机]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器_StorageTest]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_OutboundRoutes]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置Time Conditions]]>
    </line>
    <line>
      <![CDATA[    Pass: TimeConditions名称错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置Holiday]]>
    </line>
    <line>
      <![CDATA[    Pass: TimeConditions名称错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建呼出路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建Disa]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Sip外线呼出 1000打 903000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Sip外线呼出失败1001打903000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】IAX外线呼出1000打903000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】SPS外线呼出1000打902000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】SPX外线呼出1000打902000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】PSTN外线呼出1000打903000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】BRI外线呼出1000打903000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】E1外线呼出1000打903000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】GSM外线呼出1000打903000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】呼出路由设置Pinlist]]>
    </line>
    <line>
      <![CDATA[  【执行操作】PinList外线呼出失败1000打903000]]>
    </line>
    <line>
      <![CDATA[    Pass: 外线呼出进入pin1List]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置呼出路由无Pinlist]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置呼出路由无Pinlist 1000拨打903000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】登录1000分机判断路由是否存在]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器_OutboundRoutes]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备_InboundRoutesTest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设置Email]]>
    </line>
    <line>
      <![CDATA[  【执行操作】创建呼入路由]]>
    </line>
    <line>
      <![CDATA[  【执行操作】注册测试分机]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备3通过sip外线呼入到设备1，听到IVR提示音后，按0]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备3通过iax外线呼入到设备1，听到IVR的提示音后，按1]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备2通过sps外线呼入到设备1，听到IVR的提示音后，按2]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），SPX通话]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），GSM通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），PSTN通话]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），E1通话]]>
    </line>
    <line>
      <![CDATA[  【执行操作】编辑呼入路由,设置DID]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备2通过sps外线呼入到设备（呼出前缀后+分机B）]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器InboundRoutesTest]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备FileShare_CDR]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除一行CDR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】下载所有CDR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】下载Recording]]>
    </line>
    <line>
      <![CDATA[    Pass: PlayRecord CallFrom]]>
    </line>
    <line>
      <![CDATA[    Pass: PlayRecord CallTo]]>
    </line>
    <line>
      <![CDATA[    Pass: 从分机A 1100播放录音]]>
    </line>
    <line>
      <![CDATA[  【执行操作】点击CDR中Recording Options中为蓝色的Downloader图标]]>
    </line>
    <line>
      <![CDATA[    Pass: 分机B:1101进入录音]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】登录1000分机网页查看最新的CDR]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方]]>
    </line>
    <line>
      <![CDATA[  【执行操作】返回admin用户下载Recording Options]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器FileShare_CDR]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
    </line>
    <line>
      <![CDATA[  【执行操作】编辑inrouter，Destination设置到Conference，meet1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备A 1000 call (bri) B 2000]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机2000通过bri线路呼入到设备1的1000]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除AutoCLIP记录]]>
    </line>
    <line>
      <![CDATA[  【执行操作】设备A 1000 call (bri) B 2000呼入到会议室meet1]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备PagingFunction]]>
    </line>
    <line>
      <![CDATA[    Pass: 1000分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机B(1101)拨打6300]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加黑名单test1，分机2000通过sps线路呼入到设备1，呼入失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[    Pass: 通话进入黑名单列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导出黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】点击“Import”，选择之前导出的文件导入]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加白名单test2，分机2000通过sps线路呼入到设备1，呼入成功]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导出白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导入白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[    Pass: 黑名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除白名单]]>
    </line>
    <line>
      <![CDATA[    Pass: 白名单添加错误]]>
    </line>
    <line>
      <![CDATA[  【执行操作】登录1100分机页面创建黑名单Metest]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面导出黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，删除黑名单Metest，分机2000通过sps呼入到设备1，呼入成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，删除黑名单Metest，分机2000通过sps呼入到设备1，呼入成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，删除白名单，分机2000通过sps呼入到设备1，呼入失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 进入黑名单列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，批量删除黑名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，批量删除白名单]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，勾选OnlyWhitelist，分机2000通过sps呼入到设备1，呼入失败]]>
    </line>
    <line>
      <![CDATA[    Pass: 进入黑名单列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】1100分机页面，取消勾选OnlyWhitelist，分机2000通过sps呼入到设备1，呼入成功]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加快速拨号，分机1000拨打*991]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_name]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导出快速拨号列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除快速拨号列表第一条，分机1000，拨打*991]]>
    </line>
    <line>
      <![CDATA[  【执行操作】导入快速拨号列表]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除快速拨号列表]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_name]]>
    </line>
    <line>
      <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器PagingFunction]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Transfer：分机A打给分机B，通过过程中，A拨打*3C]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】Transfer：分机A打给分机B，通过过程中，A拨打*03C]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CallPickup：分机A打给C，分机C响铃中，分机B拨打*04C截答]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CallPickup：分机C打给分机B，分机B响铃中，分机A拨打*4截答]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测错误]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CallParking：分机A打给分机B，通话过程中，A拨打*6，15s后，分机A拨打6900]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[  【执行操作】CallParking：分机A打给分机B，通话过程中，分机A拨打*066950，15s后，分机A拨打6950]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
    </line>
    <line>
      <![CDATA[    Pass: 1100分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1101分机注册]]>
    </line>
    <line>
      <![CDATA[    Pass: 1102分机注册]]>
    </line>
    <line>
      <![CDATA[  【执行操作】添加紧急呼叫号码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】分机C通过PSTN线路呼出，通话中。分机1100直接拨打紧急号码2001]]>
    </line>
    <line>
      <![CDATA[    Pass: 进入紧急呼叫]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR被叫方检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR_Status检测]]>
    </line>
    <line>
      <![CDATA[    Pass: CDR呼叫方检测]]>
    </line>
    <line>
      <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除紧急号码]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除紧急号码]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器]]>
    </line>
    <line>
      <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除IVR]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个ringGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除ringGroup]]>
    </line>
    <line>
      <![CDATA[  【执行操作】单个删除Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除Queue]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除Conference]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个PinckupGruop]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除PinckupGruop]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个PagingIntercom]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除PagingIntercom]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个Callback]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除CallBack]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个Disa]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除disa1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个PINList]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除Pin1]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个OutboundRoutes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除OutboundRoutes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】删除单个inboundRoutes]]>
    </line>
    <line>
      <![CDATA[  【执行操作】批量删除inboundRoutes]]>
    </line>
    <line>
      <![CDATA[【测试类场景恢复】关闭游览器]]>
    </line>
  </reporter-output>
  <suite name="PBXCORE" duration-ms="4338924" started-at="2017-08-23T04:33:17Z" finished-at="2017-08-23T05:45:36Z">
    <groups>
    </groups>
    <test name="pbxcore" duration-ms="4338924" started-at="2017-08-23T04:33:17Z" finished-at="2017-08-23T05:45:36Z">
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="BeforeClass" is-config="true" duration-ms="12891" started-at="2017-08-23T12:48:42Z" finished-at="2017-08-23T12:48:55Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_StorageTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_JudgeStorage()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="A_JudgeStorage" duration-ms="12455" started-at="2017-08-23T12:48:55Z" finished-at="2017-08-23T12:49:08Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】SD/HD/USB检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_JudgeStorage -->
        <test-method status="PASS" signature="B_AddNetworkDrive()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="B_AddNetworkDrive" duration-ms="12491" started-at="2017-08-23T12:49:08Z" finished-at="2017-08-23T12:49:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】挂载网络磁盘sharetest1]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_AddNetworkDrive -->
        <test-method status="PASS" signature="C_SetFileShare()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="C_SetFileShare" duration-ms="313" started-at="2017-08-23T12:49:20Z" finished-at="2017-08-23T12:49:20Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】勾选Enable File Sharing]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_SetFileShare -->
        <test-method status="PASS" signature="D_StorageLocations()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="D_StorageLocations" duration-ms="4290" started-at="2017-08-23T12:49:20Z" finished-at="2017-08-23T12:49:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Storage Locations中CDR、Recordings和Logs下拉选择TF/SD卡,Voicemail&One Touch Recordings下拉选择sharetest1]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_StorageLocations -->
        <test-method status="PASS" signature="E_Recording_Settings()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="E_Recording_Settings" duration-ms="22663" started-at="2017-08-23T12:49:25Z" finished-at="2017-08-23T12:49:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Record Trunks全选所有Trunk、Record Extensions全选所有分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Recording_Settings -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage@cdbdf5]" name="AfterClass" is-config="true" duration-ms="20886" started-at="2017-08-23T12:49:47Z" finished-at="2017-08-23T12:50:08Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器_StorageTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.Storage -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="BeforeClass" is-config="true" duration-ms="23736" started-at="2017-08-23T13:07:36Z" finished-at="2017-08-23T13:08:00Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备FileShare_CDR]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_FileShare()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="A_FileShare" duration-ms="0" started-at="2017-08-23T13:08:00Z" finished-at="2017-08-23T13:08:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- A_FileShare -->
        <test-method status="PASS" signature="B_DelCdr()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="B_DelCdr" duration-ms="11471" started-at="2017-08-23T13:08:00Z" finished-at="2017-08-23T13:08:11Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除一行CDR]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_DelCdr -->
        <test-method status="PASS" signature="C_DownloadCDR()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="C_DownloadCDR" duration-ms="637" started-at="2017-08-23T13:08:11Z" finished-at="2017-08-23T13:08:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】下载所有CDR]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_DownloadCDR -->
        <test-method status="PASS" signature="D_Recording()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="D_Recording" duration-ms="737" started-at="2017-08-23T13:08:12Z" finished-at="2017-08-23T13:08:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】下载Recording]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_Recording -->
        <test-method status="PASS" signature="E_RecordingPlay()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="E_RecordingPlay" duration-ms="39844" started-at="2017-08-23T13:08:13Z" finished-at="2017-08-23T13:08:52Z">
          <reporter-output>
            <line>
              <![CDATA[    Pass: PlayRecord CallFrom]]>
            </line>
            <line>
              <![CDATA[    Pass: PlayRecord CallTo]]>
            </line>
            <line>
              <![CDATA[    Pass: 从分机A 1100播放录音]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_RecordingPlay -->
        <test-method status="PASS" signature="F_Downloader()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="F_Downloader" duration-ms="23935" started-at="2017-08-23T13:08:52Z" finished-at="2017-08-23T13:09:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- F_Downloader -->
        <test-method status="PASS" signature="G_DeleteallCDR()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="G_DeleteallCDR" duration-ms="457" started-at="2017-08-23T13:09:16Z" finished-at="2017-08-23T13:09:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- G_DeleteallCDR -->
        <test-method status="PASS" signature="H_PromprPreference()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="H_PromprPreference" duration-ms="69002" started-at="2017-08-23T13:09:17Z" finished-at="2017-08-23T13:10:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】点击CDR中Recording Options中为蓝色的Downloader图标]]>
            </line>
            <line>
              <![CDATA[    Pass: 分机B:1101进入录音]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_PromprPreference -->
        <test-method status="PASS" signature="I_Me_CDRRecording()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="I_Me_CDRRecording" duration-ms="30706" started-at="2017-08-23T13:10:26Z" finished-at="2017-08-23T13:10:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】登录1000分机网页查看最新的CDR]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_Me_CDRRecording -->
        <test-method status="PASS" signature="J_DownloaderPrompt()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="J_DownloaderPrompt" duration-ms="31504" started-at="2017-08-23T13:10:57Z" finished-at="2017-08-23T13:11:28Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】返回admin用户下载Recording Options]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_DownloaderPrompt -->
        <test-method status="PASS" signature="K_DeleteSharetest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="K_DeleteSharetest" duration-ms="23665" started-at="2017-08-23T13:11:28Z" finished-at="2017-08-23T13:11:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- K_DeleteSharetest -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR@d41cee]" name="AfterClass" is-config="true" duration-ms="22335" started-at="2017-08-23T13:11:52Z" finished-at="2017-08-23T13:12:14Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器FileShare_CDR]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.FileShare_CDR -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="BeforeClass" is-config="true" duration-ms="12542" started-at="2017-08-23T12:46:27Z" finished-at="2017-08-23T12:46:39Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_CallFeatureTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_RingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="A_RingGroup" duration-ms="21198" started-at="2017-08-23T12:46:39Z" finished-at="2017-08-23T12:47:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加RingGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_RingGroup -->
        <test-method status="PASS" signature="B_Queue()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="B_Queue" duration-ms="14043" started-at="2017-08-23T12:47:01Z" finished-at="2017-08-23T12:47:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_Queue -->
        <test-method status="PASS" signature="C_Conference()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="C_Conference" duration-ms="6295" started-at="2017-08-23T12:47:15Z" finished-at="2017-08-23T12:47:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_Conference -->
        <test-method status="PASS" signature="D_PickupGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="D_PickupGroup" duration-ms="16349" started-at="2017-08-23T12:47:21Z" finished-at="2017-08-23T12:47:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加pickupGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_PickupGroup -->
        <test-method status="PASS" signature="E_PagingIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="E_PagingIntercom" duration-ms="10942" started-at="2017-08-23T12:47:37Z" finished-at="2017-08-23T12:47:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加paging_Intercom]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_PagingIntercom -->
        <test-method status="PASS" signature="F_CallBack()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="F_CallBack" duration-ms="18966" started-at="2017-08-23T12:47:48Z" finished-at="2017-08-23T12:48:07Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加callback]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_CallBack -->
        <test-method status="PASS" signature="F_PINList()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="F_PINList" duration-ms="14081" started-at="2017-08-23T12:48:07Z" finished-at="2017-08-23T12:48:21Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加PINList]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_PINList -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature@1d0c81b]" name="AfterClass" is-config="true" duration-ms="20928" started-at="2017-08-23T12:48:21Z" finished-at="2017-08-23T12:48:42Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器_CallFeatureTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFeature -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeforeClass" is-config="true" duration-ms="12879" started-at="2017-08-23T13:36:56Z" finished-at="2017-08-23T13:37:09Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:37:09Z" finished-at="2017-08-23T13:37:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="A_IVR()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="A_IVR" duration-ms="12412" started-at="2017-08-23T13:37:10Z" finished-at="2017-08-23T13:37:23Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_IVR -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:37:23Z" finished-at="2017-08-23T13:37:24Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="B_IVR()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="B_IVR" duration-ms="26250" started-at="2017-08-23T13:37:24Z" finished-at="2017-08-23T13:37:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_IVR -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:37:50Z" finished-at="2017-08-23T13:37:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="C_RingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="C_RingGroup" duration-ms="9013" started-at="2017-08-23T13:37:52Z" finished-at="2017-08-23T13:38:01Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个ringGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_RingGroup -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:38:01Z" finished-at="2017-08-23T13:38:02Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="D_RingGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="D_RingGroup" duration-ms="33175" started-at="2017-08-23T13:38:02Z" finished-at="2017-08-23T13:38:36Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除ringGroup]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_RingGroup -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:38:36Z" finished-at="2017-08-23T13:38:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="E_Queue()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="E_Queue" duration-ms="8867" started-at="2017-08-23T13:38:37Z" finished-at="2017-08-23T13:38:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】单个删除Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_Queue -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:38:46Z" finished-at="2017-08-23T13:38:47Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="F_Queue()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="F_Queue" duration-ms="37583" started-at="2017-08-23T13:38:47Z" finished-at="2017-08-23T13:39:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除Queue]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_Queue -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:39:25Z" finished-at="2017-08-23T13:39:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="G_Conference()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="G_Conference" duration-ms="8933" started-at="2017-08-23T13:39:26Z" finished-at="2017-08-23T13:39:35Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个Conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Conference -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:39:35Z" finished-at="2017-08-23T13:39:37Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="H_Conferene()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="H_Conferene" duration-ms="17100" started-at="2017-08-23T13:39:37Z" finished-at="2017-08-23T13:39:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除Conference]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_Conferene -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:39:54Z" finished-at="2017-08-23T13:39:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="I_PickupGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="I_PickupGroup" duration-ms="8961" started-at="2017-08-23T13:39:56Z" finished-at="2017-08-23T13:40:04Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个PinckupGruop]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_PickupGroup -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1501" started-at="2017-08-23T13:40:04Z" finished-at="2017-08-23T13:40:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="J_PickupGroup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="J_PickupGroup" duration-ms="37900" started-at="2017-08-23T13:40:06Z" finished-at="2017-08-23T13:40:44Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除PinckupGruop]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_PickupGroup -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:40:44Z" finished-at="2017-08-23T13:40:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="K_PagingIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="K_PagingIntercom" duration-ms="8896" started-at="2017-08-23T13:40:45Z" finished-at="2017-08-23T13:40:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个PagingIntercom]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_PagingIntercom -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:40:54Z" finished-at="2017-08-23T13:40:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="L_PagingIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="L_PagingIntercom" duration-ms="19778" started-at="2017-08-23T13:40:56Z" finished-at="2017-08-23T13:41:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除PagingIntercom]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_PagingIntercom -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:41:16Z" finished-at="2017-08-23T13:41:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="M_CallBack()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="M_CallBack" duration-ms="9578" started-at="2017-08-23T13:41:17Z" finished-at="2017-08-23T13:41:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个Callback]]>
            </line>
          </reporter-output>
        </test-method> <!-- M_CallBack -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:41:27Z" finished-at="2017-08-23T13:41:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="N_CallBack()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="N_CallBack" duration-ms="31485" started-at="2017-08-23T13:41:28Z" finished-at="2017-08-23T13:42:00Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除CallBack]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_CallBack -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1501" started-at="2017-08-23T13:42:00Z" finished-at="2017-08-23T13:42:01Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="O_Disa()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="O_Disa" duration-ms="8914" started-at="2017-08-23T13:42:01Z" finished-at="2017-08-23T13:42:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个Disa]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_Disa -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:42:10Z" finished-at="2017-08-23T13:42:12Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="P_Disa()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="P_Disa" duration-ms="43241" started-at="2017-08-23T13:42:12Z" finished-at="2017-08-23T13:42:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除disa1]]>
            </line>
          </reporter-output>
        </test-method> <!-- P_Disa -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:42:55Z" finished-at="2017-08-23T13:42:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="R_PINList()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="R_PINList" duration-ms="9066" started-at="2017-08-23T13:42:56Z" finished-at="2017-08-23T13:43:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个PINList]]>
            </line>
          </reporter-output>
        </test-method> <!-- R_PINList -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:43:05Z" finished-at="2017-08-23T13:43:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="S_PINList()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="S_PINList" duration-ms="23644" started-at="2017-08-23T13:43:07Z" finished-at="2017-08-23T13:43:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除Pin1]]>
            </line>
          </reporter-output>
        </test-method> <!-- S_PINList -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:43:30Z" finished-at="2017-08-23T13:43:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="T_OutboundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="T_OutboundRoutes" duration-ms="11073" started-at="2017-08-23T13:43:32Z" finished-at="2017-08-23T13:43:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个OutboundRoutes]]>
            </line>
          </reporter-output>
        </test-method> <!-- T_OutboundRoutes -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:43:43Z" finished-at="2017-08-23T13:43:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="U_OutboundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="U_OutboundRoutes" duration-ms="29037" started-at="2017-08-23T13:43:45Z" finished-at="2017-08-23T13:44:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除OutboundRoutes]]>
            </line>
          </reporter-output>
        </test-method> <!-- U_OutboundRoutes -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:44:14Z" finished-at="2017-08-23T13:44:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="V_InboundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="V_InboundRoutes" duration-ms="8930" started-at="2017-08-23T13:44:15Z" finished-at="2017-08-23T13:44:24Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除单个inboundRoutes]]>
            </line>
          </reporter-output>
        </test-method> <!-- V_InboundRoutes -->
        <test-method status="PASS" signature="BeoforeTest()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="BeoforeTest" is-config="true" duration-ms="1500" started-at="2017-08-23T13:44:24Z" finished-at="2017-08-23T13:44:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BeoforeTest -->
        <test-method status="PASS" signature="W_InboundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="W_InboundRoutes" duration-ms="48496" started-at="2017-08-23T13:44:26Z" finished-at="2017-08-23T13:45:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除inboundRoutes]]>
            </line>
          </reporter-output>
        </test-method> <!-- W_InboundRoutes -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll@18f65a4]" name="AfterClass" is-config="true" duration-ms="22100" started-at="2017-08-23T13:45:14Z" finished-at="2017-08-23T13:45:36Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.DeleteAll -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="BeforeClass" is-config="true" duration-ms="16387" started-at="2017-08-23T12:50:08Z" finished-at="2017-08-23T12:50:25Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_OutboundRoutes]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1002" started-at="2017-08-23T12:50:25Z" finished-at="2017-08-23T12:50:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="A_TimeCondition()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="A_TimeCondition" duration-ms="7244" started-at="2017-08-23T12:50:26Z" finished-at="2017-08-23T12:50:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置Time Conditions]]>
            </line>
            <line>
              <![CDATA[    Pass: TimeConditions名称错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_TimeCondition -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:50:33Z" finished-at="2017-08-23T12:50:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="B_Holiday()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="B_Holiday" duration-ms="3026" started-at="2017-08-23T12:50:34Z" finished-at="2017-08-23T12:50:37Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置Holiday]]>
            </line>
            <line>
              <![CDATA[    Pass: TimeConditions名称错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_Holiday -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:50:37Z" finished-at="2017-08-23T12:50:38Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="C_CreateOutRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="C_CreateOutRoutes" duration-ms="43656" started-at="2017-08-23T12:50:38Z" finished-at="2017-08-23T12:51:22Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建呼出路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CreateOutRoutes -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:51:22Z" finished-at="2017-08-23T12:51:23Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="D_CreateDISA()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="D_CreateDISA" duration-ms="18933" started-at="2017-08-23T12:51:23Z" finished-at="2017-08-23T12:51:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建Disa]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_CreateDISA -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:51:42Z" finished-at="2017-08-23T12:51:43Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="E_CreateIVR()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="E_CreateIVR" duration-ms="44281" started-at="2017-08-23T12:51:43Z" finished-at="2017-08-23T12:52:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建IVR]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_CreateIVR -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:52:27Z" finished-at="2017-08-23T12:52:28Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="G_CallSip()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="G_CallSip" duration-ms="42612" started-at="2017-08-23T12:52:28Z" finished-at="2017-08-23T12:53:10Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：903000 实际：903000 [903000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：903000 实际：903000 [903000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.G_CallSip(OutboundRoutes.java:191)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Sip外线呼出 1000打 903000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_CallSip -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:53:10Z" finished-at="2017-08-23T12:53:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="H_CallFail()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="H_CallFail" duration-ms="15001" started-at="2017-08-23T12:53:11Z" finished-at="2017-08-23T12:53:26Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Sip外线呼出失败1001打903000]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_CallFail -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:53:26Z" finished-at="2017-08-23T12:53:27Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="I_CallIax()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="I_CallIax" duration-ms="38853" started-at="2017-08-23T12:53:27Z" finished-at="2017-08-23T12:54:06Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：903000 实际：903000 [903000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：903000 实际：903000 [903000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.I_CallIax(OutboundRoutes.java:223)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】IAX外线呼出1000打903000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_CallIax -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T12:54:06Z" finished-at="2017-08-23T12:54:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="J_CallSps()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="J_CallSps" duration-ms="36867" started-at="2017-08-23T12:54:07Z" finished-at="2017-08-23T12:54:44Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：902000 实际：902000 [902000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：902000 实际：902000 [902000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.J_CallSps(OutboundRoutes.java:240)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】SPS外线呼出1000打902000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_CallSps -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1003" started-at="2017-08-23T12:54:44Z" finished-at="2017-08-23T12:54:45Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="K_CallSpx()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="K_CallSpx" duration-ms="39401" started-at="2017-08-23T12:54:45Z" finished-at="2017-08-23T12:55:25Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：902000 实际：902000 [902000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：902000 实际：902000 [902000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.K_CallSpx(OutboundRoutes.java:259)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】SPX外线呼出1000打902000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_CallSpx -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:55:25Z" finished-at="2017-08-23T12:55:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="L_CallPstn()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="L_CallPstn" duration-ms="41463" started-at="2017-08-23T12:55:26Z" finished-at="2017-08-23T12:56:07Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：903000 实际：903000 [903000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：903000 实际：903000 [903000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.L_CallPstn(OutboundRoutes.java:278)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】PSTN外线呼出1000打903000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_CallPstn -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T12:56:07Z" finished-at="2017-08-23T12:56:08Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="M_CallBri()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="M_CallBri" duration-ms="46376" started-at="2017-08-23T12:56:08Z" finished-at="2017-08-23T12:56:54Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：902000 实际：902000 [902000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：902000 实际：902000 [902000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.M_CallBri(OutboundRoutes.java:295)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】BRI外线呼出1000打903000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- M_CallBri -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:56:54Z" finished-at="2017-08-23T12:56:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="N_CallE1()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="N_CallE1" duration-ms="0" started-at="2017-08-23T12:56:55Z" finished-at="2017-08-23T12:56:55Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】E1外线呼出1000打903000]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_CallE1 -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:56:55Z" finished-at="2017-08-23T12:56:56Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="O_CallGsm()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="O_CallGsm" duration-ms="1" started-at="2017-08-23T12:56:56Z" finished-at="2017-08-23T12:56:56Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】GSM外线呼出1000打903000]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_CallGsm -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:56:56Z" finished-at="2017-08-23T12:56:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="P_PinList()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="P_PinList" duration-ms="18076" started-at="2017-08-23T12:56:57Z" finished-at="2017-08-23T12:57:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】呼出路由设置Pinlist]]>
            </line>
          </reporter-output>
        </test-method> <!-- P_PinList -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:57:16Z" finished-at="2017-08-23T12:57:17Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="Q_PinListCall()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="Q_PinListCall" duration-ms="34584" started-at="2017-08-23T12:57:17Z" finished-at="2017-08-23T12:57:51Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：903000 实际：903000 [903000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：903000 实际：903000 [903000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes.Q_PinListCall(OutboundRoutes.java:354)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】PinList外线呼出失败1000打903000]]>
            </line>
            <line>
              <![CDATA[    Pass: 外线呼出进入pin1List]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_PinListCall -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:57:51Z" finished-at="2017-08-23T12:57:52Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="R_PWD_None()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="R_PWD_None" duration-ms="13029" started-at="2017-08-23T12:57:52Z" finished-at="2017-08-23T12:58:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置呼出路由无Pinlist]]>
            </line>
          </reporter-output>
        </test-method> <!-- R_PWD_None -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:58:05Z" finished-at="2017-08-23T12:58:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="S_PinListCall()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="S_PinListCall" duration-ms="23114" started-at="2017-08-23T12:58:06Z" finished-at="2017-08-23T12:58:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置呼出路由无Pinlist 1000拨打903000]]>
            </line>
          </reporter-output>
        </test-method> <!-- S_PinListCall -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T12:58:29Z" finished-at="2017-08-23T12:58:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="T_RoutePermission()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="T_RoutePermission" duration-ms="27228" started-at="2017-08-23T12:58:30Z" finished-at="2017-08-23T12:58:57Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】登录1000分机判断路由是否存在]]>
            </line>
          </reporter-output>
        </test-method> <!-- T_RoutePermission -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes@11c1ea0]" name="AfterClass" is-config="true" duration-ms="22244" started-at="2017-08-23T12:58:57Z" finished-at="2017-08-23T12:59:20Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器_OutboundRoutes]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.OutboundRoutes -->
      <class name="com.yeastar.swebtest.testcase.CheckToTest">
        <test-method status="PASS" signature="CleanExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.CheckToTest@1088d51]" name="CleanExtensions" duration-ms="184475" started-at="2017-08-23T12:33:17Z" finished-at="2017-08-23T12:36:22Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】清空分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- CleanExtensions -->
      </class> <!-- com.yeastar.swebtest.testcase.CheckToTest -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="BeforeClass" is-config="true" duration-ms="13260" started-at="2017-08-23T13:12:14Z" finished-at="2017-08-23T13:12:27Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_AutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="A_AutoCLIP" duration-ms="71887" started-at="2017-08-23T13:12:27Z" finished-at="2017-08-23T13:13:39Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】编辑inrouter，Destination设置到Conference，meet1]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_AutoCLIP -->
        <test-method status="PASS" signature="B_CallBri()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="B_CallBri" duration-ms="26771" started-at="2017-08-23T13:13:39Z" finished-at="2017-08-23T13:14:06Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备A 1000 call (bri) B 2000]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_CallBri -->
        <test-method status="PASS" signature="C_CallBri()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="C_CallBri" duration-ms="24180" started-at="2017-08-23T13:14:06Z" finished-at="2017-08-23T13:14:30Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机2000通过bri线路呼入到设备1的1000]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CallBri -->
        <test-method status="PASS" signature="D_DeleteViewAutoCLIP()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="D_DeleteViewAutoCLIP" duration-ms="11845" started-at="2017-08-23T13:14:30Z" finished-at="2017-08-23T13:14:42Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除AutoCLIP记录]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_DeleteViewAutoCLIP -->
        <test-method status="PASS" signature="E_CallBri()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="E_CallBri" duration-ms="11638" started-at="2017-08-23T13:14:42Z" finished-at="2017-08-23T13:14:54Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备A 1000 call (bri) B 2000呼入到会议室meet1]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_CallBri -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl@1712b94]" name="AfterClass" is-config="true" duration-ms="22396" started-at="2017-08-23T13:14:54Z" finished-at="2017-08-23T13:15:16Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.CallControl -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="BeforeClass" is-config="true" duration-ms="12901" started-at="2017-08-23T12:42:25Z" finished-at="2017-08-23T12:42:38Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_NewTrunkTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_AddTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="A_AddTrunk" duration-ms="20151" started-at="2017-08-23T12:42:38Z" finished-at="2017-08-23T12:42:58Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加SIPTrunk]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_AddTrunk -->
        <test-method status="PASS" signature="B_AddTrunkIAXTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="B_AddTrunkIAXTrunk" duration-ms="15528" started-at="2017-08-23T12:42:58Z" finished-at="2017-08-23T12:43:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加IAXTrunk]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_AddTrunkIAXTrunk -->
        <test-method status="PASS" signature="C_AddSPX()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="C_AddSPX" duration-ms="15545" started-at="2017-08-23T12:43:14Z" finished-at="2017-08-23T12:43:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加SPX]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_AddSPX -->
        <test-method status="PASS" signature="D_AddSPS()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="D_AddSPS" duration-ms="15284" started-at="2017-08-23T12:43:29Z" finished-at="2017-08-23T12:43:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加SPS]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_AddSPS -->
        <test-method status="FAIL" signature="E_SetBriTrunk()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="E_SetBriTrunk" duration-ms="146564" started-at="2017-08-23T12:43:45Z" finished-at="2017-08-23T12:46:11Z">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
	at javax.imageio.ImageIO.write(ImageIO.java:1538)
	at com.yeastar.swebtest.tools.ScreenShot.screenShotAsFile(ScreenShot.java:48)
	at com.yeastar.swebtest.tools.ScreenShot.takeScreenshotByAll(ScreenShot.java:38)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1083)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:210)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk.E_SetBriTrunk(NewTrunk.java:85)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
            <line>
              <![CDATA[    Pass: 重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_SetBriTrunk -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk@650e52]" name="AfterClass" is-config="true" duration-ms="15847" started-at="2017-08-23T12:46:11Z" finished-at="2017-08-23T12:46:27Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器_NewTrunk]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.NewTrunk -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="BeforeClass" is-config="true" duration-ms="41522" started-at="2017-08-23T13:15:16Z" finished-at="2017-08-23T13:15:58Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备PagingFunction]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_PagingIntercom()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="A_PagingIntercom" duration-ms="42523" started-at="2017-08-23T13:15:58Z" finished-at="2017-08-23T13:16:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机B(1101)拨打6300]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_PagingIntercom -->
        <test-method status="PASS" signature="B_AddBlacklist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="B_AddBlacklist" duration-ms="51763" started-at="2017-08-23T13:16:40Z" finished-at="2017-08-23T13:17:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加黑名单test1，分机2000通过sps线路呼入到设备1，呼入失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
            <line>
              <![CDATA[    Pass: 通话进入黑名单列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_AddBlacklist -->
        <test-method status="PASS" signature="C_ExportBlacklist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="C_ExportBlacklist" duration-ms="1084" started-at="2017-08-23T13:17:32Z" finished-at="2017-08-23T13:17:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导出黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_ExportBlacklist -->
        <test-method status="PASS" signature="E_ImportBlacklist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="E_ImportBlacklist" duration-ms="0" started-at="2017-08-23T13:17:33Z" finished-at="2017-08-23T13:17:33Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】点击“Import”，选择之前导出的文件导入]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_ImportBlacklist -->
        <test-method status="PASS" signature="F_AddWhitelist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="F_AddWhitelist" duration-ms="58695" started-at="2017-08-23T13:17:33Z" finished-at="2017-08-23T13:18:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加白名单test2，分机2000通过sps线路呼入到设备1，呼入成功]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_AddWhitelist -->
        <test-method status="PASS" signature="G_ExportWhitelist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="G_ExportWhitelist" duration-ms="758" started-at="2017-08-23T13:18:32Z" finished-at="2017-08-23T13:18:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导出白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_ExportWhitelist -->
        <test-method status="PASS" signature="I_ImportWhitelist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="I_ImportWhitelist" duration-ms="0" started-at="2017-08-23T13:18:32Z" finished-at="2017-08-23T13:18:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导入白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_ImportWhitelist -->
        <test-method status="PASS" signature="J_DelAllBlacklist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="J_DelAllBlacklist" duration-ms="14771" started-at="2017-08-23T13:18:32Z" finished-at="2017-08-23T13:18:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除黑名单]]>
            </line>
            <line>
              <![CDATA[    Pass: 黑名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_DelAllBlacklist -->
        <test-method status="PASS" signature="K_DelAllWhitelist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="K_DelAllWhitelist" duration-ms="22607" started-at="2017-08-23T13:18:47Z" finished-at="2017-08-23T13:19:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除白名单]]>
            </line>
            <line>
              <![CDATA[    Pass: 白名单添加错误]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_DelAllWhitelist -->
        <test-method status="PASS" signature="L_ExtensionPage()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="L_ExtensionPage" duration-ms="40173" started-at="2017-08-23T13:19:10Z" finished-at="2017-08-23T13:19:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】登录1100分机页面创建黑名单Metest]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_ExtensionPage -->
        <test-method status="PASS" signature="M_ExtensionExport()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="M_ExtensionExport" duration-ms="211" started-at="2017-08-23T13:19:50Z" finished-at="2017-08-23T13:19:50Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面导出黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- M_ExtensionExport -->
        <test-method status="PASS" signature="N_DeleteTest1Sps()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="N_DeleteTest1Sps" duration-ms="21540" started-at="2017-08-23T13:19:50Z" finished-at="2017-08-23T13:20:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，删除黑名单Metest，分机2000通过sps呼入到设备1，呼入成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- N_DeleteTest1Sps -->
        <test-method status="PASS" signature="O_ExtensionImport()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="O_ExtensionImport" duration-ms="13368" started-at="2017-08-23T13:20:12Z" finished-at="2017-08-23T13:20:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- O_ExtensionImport -->
        <test-method status="PASS" signature="P_ExtensionWhitelist()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="P_ExtensionWhitelist" duration-ms="40230" started-at="2017-08-23T13:20:25Z" finished-at="2017-08-23T13:21:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，删除黑名单Metest，分机2000通过sps呼入到设备1，呼入成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- P_ExtensionWhitelist -->
        <test-method status="PASS" signature="Q_ExtensionExport()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="Q_ExtensionExport" duration-ms="197" started-at="2017-08-23T13:21:05Z" finished-at="2017-08-23T13:21:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- Q_ExtensionExport -->
        <test-method status="PASS" signature="R_WhiteTest1Delete()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="R_WhiteTest1Delete" duration-ms="12394" started-at="2017-08-23T13:21:05Z" finished-at="2017-08-23T13:21:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，删除白名单，分机2000通过sps呼入到设备1，呼入失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 进入黑名单列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- R_WhiteTest1Delete -->
        <test-method status="PASS" signature="S_WhiteImport()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="S_WhiteImport" duration-ms="332" started-at="2017-08-23T13:21:18Z" finished-at="2017-08-23T13:21:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，导出白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- S_WhiteImport -->
        <test-method status="PASS" signature="T_BlacklistDeleteAll()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="T_BlacklistDeleteAll" duration-ms="22271" started-at="2017-08-23T13:21:18Z" finished-at="2017-08-23T13:21:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，批量删除黑名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- T_BlacklistDeleteAll -->
        <test-method status="PASS" signature="U_WhitelistDeleteAll()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="U_WhitelistDeleteAll" duration-ms="22858" started-at="2017-08-23T13:21:40Z" finished-at="2017-08-23T13:22:03Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，批量删除白名单]]>
            </line>
          </reporter-output>
        </test-method> <!-- U_WhitelistDeleteAll -->
        <test-method status="PASS" signature="V_OnlyWhitelistCheck()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="V_OnlyWhitelistCheck" duration-ms="8423" started-at="2017-08-23T13:22:03Z" finished-at="2017-08-23T13:22:12Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，勾选OnlyWhitelist，分机2000通过sps呼入到设备1，呼入失败]]>
            </line>
            <line>
              <![CDATA[    Pass: 进入黑名单列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- V_OnlyWhitelistCheck -->
        <test-method status="PASS" signature="W_OnlyWhitelistUnCheck()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="W_OnlyWhitelistUnCheck" duration-ms="6837" started-at="2017-08-23T13:22:12Z" finished-at="2017-08-23T13:22:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】1100分机页面，取消勾选OnlyWhitelist，分机2000通过sps呼入到设备1，呼入成功]]>
            </line>
          </reporter-output>
        </test-method> <!-- W_OnlyWhitelistUnCheck -->
        <test-method status="FAIL" signature="X_AddSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="X_AddSpeedDial" duration-ms="72985" started-at="2017-08-23T13:22:19Z" finished-at="2017-08-23T13:23:32Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：902000 实际：902000 [902000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：902000 实际：902000 [902000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction.X_AddSpeedDial(CallFunction.java:379)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加快速拨号，分机1000拨打*991]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_name]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- X_AddSpeedDial -->
        <test-method status="PASS" signature="Y_ExportSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="Y_ExportSpeedDial" duration-ms="666" started-at="2017-08-23T13:23:32Z" finished-at="2017-08-23T13:23:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导出快速拨号列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- Y_ExportSpeedDial -->
        <test-method status="PASS" signature="Z_DeleteSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="Z_DeleteSpeedDial" duration-ms="42564" started-at="2017-08-23T13:23:32Z" finished-at="2017-08-23T13:24:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除快速拨号列表第一条，分机1000，拨打*991]]>
            </line>
          </reporter-output>
        </test-method> <!-- Z_DeleteSpeedDial -->
        <test-method status="PASS" signature="a_ImportSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="a_ImportSpeedDial" duration-ms="230" started-at="2017-08-23T13:24:15Z" finished-at="2017-08-23T13:24:15Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导入快速拨号列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- a_ImportSpeedDial -->
        <test-method status="PASS" signature="b_DeleteAllSpeedDial()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="b_DeleteAllSpeedDial" duration-ms="30869" started-at="2017-08-23T13:24:15Z" finished-at="2017-08-23T13:24:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除快速拨号列表]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_name]]>
            </line>
            <line>
              <![CDATA[    Pass: 添加speed_dial_phoneNumber]]>
            </line>
          </reporter-output>
        </test-method> <!-- b_DeleteAllSpeedDial -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction@33cc44]" name="AfterClass" is-config="true" duration-ms="22116" started-at="2017-08-23T13:24:46Z" finished-at="2017-08-23T13:25:08Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器PagingFunction]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.CallFunction -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="BeforeClass" is-config="true" duration-ms="31662" started-at="2017-08-23T13:25:08Z" finished-at="2017-08-23T13:25:40Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="F_Transfer()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="F_Transfer" duration-ms="66088" started-at="2017-08-23T13:25:40Z" finished-at="2017-08-23T13:26:46Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Transfer：分机A打给分机B，通过过程中，A拨打*3C]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_Transfer -->
        <test-method status="PASS" signature="G_Transfer()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="G_Transfer" duration-ms="59370" started-at="2017-08-23T13:26:46Z" finished-at="2017-08-23T13:27:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】Transfer：分机A打给分机B，通过过程中，A拨打*03C]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_Transfer -->
        <test-method status="PASS" signature="H_CallPickup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="H_CallPickup" duration-ms="41448" started-at="2017-08-23T13:27:45Z" finished-at="2017-08-23T13:28:27Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】CallPickup：分机A打给C，分机C响铃中，分机B拨打*04C截答]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_CallPickup -->
        <test-method status="PASS" signature="I_CallPickup()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="I_CallPickup" duration-ms="49019" started-at="2017-08-23T13:28:27Z" finished-at="2017-08-23T13:29:16Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】CallPickup：分机C打给分机B，分机B响铃中，分机A拨打*4截答]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_CallPickup -->
        <test-method status="PASS" signature="J_CallParking()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="J_CallParking" duration-ms="76064" started-at="2017-08-23T13:29:16Z" finished-at="2017-08-23T13:30:32Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】CallParking：分机A打给分机B，通话过程中，A拨打*6，15s后，分机A拨打6900]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_CallParking -->
        <test-method status="PASS" signature="K_CallParking()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="K_CallParking" duration-ms="80719" started-at="2017-08-23T13:30:32Z" finished-at="2017-08-23T13:31:52Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】CallParking：分机A打给分机B，通话过程中，分机A拨打*066950，15s后，分机A拨打6950]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_CallParking -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode@13f88ab]" name="AfterClass" is-config="true" duration-ms="22046" started-at="2017-08-23T13:31:52Z" finished-at="2017-08-23T13:32:14Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.FeatureCode -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="BeforeClass" is-config="true" duration-ms="33192" started-at="2017-08-23T13:32:14Z" finished-at="2017-08-23T13:32:48Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_addEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="A_addEmergencyNumber" duration-ms="37125" started-at="2017-08-23T13:32:48Z" finished-at="2017-08-23T13:33:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加紧急呼叫号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_addEmergencyNumber -->
        <test-method status="FAIL" signature="B_CallEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="B_CallEmergencyNumber" duration-ms="90068" started-at="2017-08-23T13:33:25Z" finished-at="2017-08-23T13:34:55Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：902000 实际：902000 [902000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：902000 实际：902000 [902000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:299)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest.B_CallEmergencyNumber(EmergencyNumberTest.java:77)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】分机C通过PSTN线路呼出，通话中。分机1100直接拨打紧急号码2001]]>
            </line>
            <line>
              <![CDATA[    Pass: 进入紧急呼叫]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：902000 实际：902000 [902000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：902000 实际：902000 [902000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_CallEmergencyNumber -->
        <test-method status="PASS" signature="C_DeleteEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="C_DeleteEmergencyNumber" duration-ms="45035" started-at="2017-08-23T13:34:55Z" finished-at="2017-08-23T13:35:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_DeleteEmergencyNumber -->
        <test-method status="PASS" signature="D_DeleteAllEmergencyNumber()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="D_DeleteAllEmergencyNumber" duration-ms="53770" started-at="2017-08-23T13:35:40Z" finished-at="2017-08-23T13:36:34Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量删除紧急号码]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_DeleteAllEmergencyNumber -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest@1a8c74e]" name="AfterClass" is-config="true" duration-ms="22197" started-at="2017-08-23T13:36:34Z" finished-at="2017-08-23T13:36:56Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.EmergencyNumberTest -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="BeforeClass" is-config="true" duration-ms="11812" started-at="2017-08-23T12:36:22Z" finished-at="2017-08-23T12:36:34Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_ExtensionTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="A_SettingSystemTime()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="A_SettingSystemTime" duration-ms="129098" started-at="2017-08-23T12:36:34Z" finished-at="2017-08-23T12:38:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置系统时间为9点整]]>
            </line>
            <line>
              <![CDATA[    Pass: 重启]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_SettingSystemTime -->
        <test-method status="PASS" signature="B_CreateExtension()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="B_CreateExtension" duration-ms="19574" started-at="2017-08-23T12:38:43Z" finished-at="2017-08-23T12:39:02Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建1000分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_CreateExtension -->
        <test-method status="PASS" signature="C_CreateFxsExtension()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="C_CreateFxsExtension" duration-ms="15548" started-at="2017-08-23T12:39:02Z" finished-at="2017-08-23T12:39:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建FXS分机1001]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_CreateFxsExtension -->
        <test-method status="PASS" signature="D_CreateBulkExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="D_CreateBulkExtensions" duration-ms="24838" started-at="2017-08-23T12:39:18Z" finished-at="2017-08-23T12:39:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】批量创建分机1100-1109]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_CreateBulkExtensions -->
        <test-method status="PASS" signature="E_RegisterExtension()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="E_RegisterExtension" duration-ms="64869" started-at="2017-08-23T12:39:43Z" finished-at="2017-08-23T12:40:47Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】SIP分机1000拨打SIP分机1001，通话]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1001分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_RegisterExtension -->
        <test-method status="PASS" signature="F_ExportExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="F_ExportExtensions" duration-ms="945" started-at="2017-08-23T12:40:47Z" finished-at="2017-08-23T12:40:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】导出分机列表]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_ExportExtensions -->
        <test-method status="PASS" signature="H_DelExteiosns()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="H_DelExteiosns" duration-ms="0" started-at="2017-08-23T12:40:48Z" finished-at="2017-08-23T12:40:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除所有分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_DelExteiosns -->
        <test-method status="PASS" signature="G_DelExtension()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="G_DelExtension" duration-ms="0" started-at="2017-08-23T12:40:48Z" finished-at="2017-08-23T12:40:48Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】删除1000分机]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_DelExtension -->
        <test-method status="PASS" signature="J_PstnCall()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="J_PstnCall" duration-ms="52014" started-at="2017-08-23T12:40:48Z" finished-at="2017-08-23T12:41:40Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】通过PSTN外线B设备2000拨打A设备1000]]>
            </line>
            <line>
              <![CDATA[    Pass: 1000分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_PstnCall -->
        <test-method status="PASS" signature="K_ExtensionGroupSetting()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="K_ExtensionGroupSetting" duration-ms="32282" started-at="2017-08-23T12:41:40Z" finished-at="2017-08-23T12:42:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】添加分机组extgroup1]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_ExtensionGroupSetting -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension@186dec2]" name="AfterClass" is-config="true" duration-ms="12419" started-at="2017-08-23T12:42:13Z" finished-at="2017-08-23T12:42:25Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.Extension -->
      <class name="com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes">
        <test-method status="PASS" signature="BeforeClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="BeforeClass" is-config="true" duration-ms="13529" started-at="2017-08-23T12:59:20Z" finished-at="2017-08-23T12:59:33Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景初始化】打开游览器并登录设备_InboundRoutesTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- BeforeClass -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:59:33Z" finished-at="2017-08-23T12:59:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="A_EmailSettings()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="A_EmailSettings" duration-ms="11164" started-at="2017-08-23T12:59:34Z" finished-at="2017-08-23T12:59:45Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设置Email]]>
            </line>
          </reporter-output>
        </test-method> <!-- A_EmailSettings -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T12:59:45Z" finished-at="2017-08-23T12:59:46Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="B_CreateInboundRoutes()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="B_CreateInboundRoutes" duration-ms="78533" started-at="2017-08-23T12:59:46Z" finished-at="2017-08-23T13:01:05Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】创建呼入路由]]>
            </line>
          </reporter-output>
        </test-method> <!-- B_CreateInboundRoutes -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:01:05Z" finished-at="2017-08-23T13:01:06Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="C_RegisterExtensions()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="C_RegisterExtensions" duration-ms="19067" started-at="2017-08-23T13:01:06Z" finished-at="2017-08-23T13:01:25Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】注册测试分机]]>
            </line>
            <line>
              <![CDATA[    Pass: 1100分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1101分机注册]]>
            </line>
            <line>
              <![CDATA[    Pass: 1102分机注册]]>
            </line>
          </reporter-output>
        </test-method> <!-- C_RegisterExtensions -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T13:01:25Z" finished-at="2017-08-23T13:01:26Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="D_CallSip()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="D_CallSip" duration-ms="46930" started-at="2017-08-23T13:01:26Z" finished-at="2017-08-23T13:02:13Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备3通过sip外线呼入到设备1，听到IVR提示音后，按0]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- D_CallSip -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:02:13Z" finished-at="2017-08-23T13:02:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="E_CallIax()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="E_CallIax" duration-ms="44934" started-at="2017-08-23T13:02:14Z" finished-at="2017-08-23T13:02:59Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备3通过iax外线呼入到设备1，听到IVR的提示音后，按1]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- E_CallIax -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:02:59Z" finished-at="2017-08-23T13:03:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="F_CallSps()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="F_CallSps" duration-ms="88644" started-at="2017-08-23T13:03:00Z" finished-at="2017-08-23T13:04:29Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备2通过sps外线呼入到设备1，听到IVR的提示音后，按2]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- F_CallSps -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:04:29Z" finished-at="2017-08-23T13:04:30Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="G_CallSpx()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="G_CallSpx" duration-ms="48679" started-at="2017-08-23T13:04:30Z" finished-at="2017-08-23T13:05:18Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），SPX通话]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- G_CallSpx -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T13:05:18Z" finished-at="2017-08-23T13:05:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="H_CallGsm()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="H_CallGsm" duration-ms="0" started-at="2017-08-23T13:05:19Z" finished-at="2017-08-23T13:05:19Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），GSM通话]]>
            </line>
          </reporter-output>
        </test-method> <!-- H_CallGsm -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:05:19Z" finished-at="2017-08-23T13:05:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="FAIL" signature="I_CallPstn()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="I_CallPstn" duration-ms="48553" started-at="2017-08-23T13:05:20Z" finished-at="2017-08-23T13:06:09Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[CDR被叫方检测 【预期：903000 实际：903000 [903000]】]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: CDR被叫方检测 【预期：903000 实际：903000 [903000]】
	at com.yeastar.swebtest.tools.ysassert.YsAssert.fail(YsAssert.java:1086)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.failNotEquals(YsAssert.java:579)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEqualsImpl(YsAssert.java:142)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:116)
	at com.yeastar.swebtest.tools.ysassert.YsAssert.assertEquals(YsAssert.java:199)
	at com.yeastar.swebtest.driver.YSMethod.YS_Extension.checkCDR(YS_Extension.java:290)
	at com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes.I_CallPstn(InboundRoutes.java:231)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:85)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:639)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:816)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1124)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:108)
	at org.testng.TestRunner.privateRun(TestRunner.java:774)
	at org.testng.TestRunner.run(TestRunner.java:624)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:359)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:354)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:312)
	at org.testng.SuiteRunner.run(SuiteRunner.java:261)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1215)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1140)
	at org.testng.TestNG.run(TestNG.java:1048)
	at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:293)
	at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:84)
	at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:91)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），PSTN通话]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    <a href="file:///F:\pic\CDR被叫方检测 【预期：903000 实际：903000 [903000]】.jpg" target="_blank">Error: CDR被叫方检测 【预期：903000 实际：903000 [903000]】</a>]]>
            </line>
          </reporter-output>
        </test-method> <!-- I_CallPstn -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1002" started-at="2017-08-23T13:06:09Z" finished-at="2017-08-23T13:06:10Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="J_CallE1()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="J_CallE1" duration-ms="0" started-at="2017-08-23T13:06:10Z" finished-at="2017-08-23T13:06:10Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】A拨打90+分机号码（设备3的分机），E1通话]]>
            </line>
          </reporter-output>
        </test-method> <!-- J_CallE1 -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1001" started-at="2017-08-23T13:06:10Z" finished-at="2017-08-23T13:06:11Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="K_SetDidSps()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="K_SetDidSps" duration-ms="31832" started-at="2017-08-23T13:06:11Z" finished-at="2017-08-23T13:06:43Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】编辑呼入路由,设置DID]]>
            </line>
          </reporter-output>
        </test-method> <!-- K_SetDidSps -->
        <test-method status="PASS" signature="waitMethod()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="waitMethod" is-config="true" duration-ms="1000" started-at="2017-08-23T13:06:43Z" finished-at="2017-08-23T13:06:44Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- waitMethod -->
        <test-method status="PASS" signature="L_CallDidSps()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="L_CallDidSps" duration-ms="30214" started-at="2017-08-23T13:06:44Z" finished-at="2017-08-23T13:07:14Z">
          <reporter-output>
            <line>
              <![CDATA[  【执行操作】设备2通过sps外线呼入到设备（呼出前缀后+分机B）]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR呼叫方检测]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR被叫方检测错误]]>
            </line>
            <line>
              <![CDATA[    Pass: CDR_Status检测]]>
            </line>
          </reporter-output>
        </test-method> <!-- L_CallDidSps -->
        <test-method status="PASS" signature="AfterClass()[pri:0, instance:com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes@1579e0f]" name="AfterClass" is-config="true" duration-ms="22169" started-at="2017-08-23T13:07:14Z" finished-at="2017-08-23T13:07:36Z">
          <reporter-output>
            <line>
              <![CDATA[【测试类场景恢复】关闭游览器InboundRoutesTest]]>
            </line>
          </reporter-output>
        </test-method> <!-- AfterClass -->
      </class> <!-- com.yeastar.swebtest.testcase.smokecase.pbxcase.InboundRoutes -->
    </test> <!-- pbxcore -->
  </suite> <!-- PBXCORE -->
</testng-results>
